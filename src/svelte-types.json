{
  "/node_modules/svelte/action.d.ts": "import './types/index.js';",
  "/node_modules/svelte/animate.d.ts": "import './types/index.js';",
  "/node_modules/svelte/compiler.d.ts": "import './types/index.js';",
  "/node_modules/svelte/easing.d.ts": "import './types/index.js';",
  "/node_modules/svelte/elements.d.ts": "// Type definitions for Svelte HTML, based on JSX React 18 typings\n// Original Project/Authors:\n// Type definitions for React 18.0\n// Project: http://facebook.github.io/react/\n// Definitions by: Asana <https://asana.com>\n//                 AssureSign <http://www.assuresign.com>\n//                 Microsoft <https://microsoft.com>\n//                 John Reilly <https://github.com/johnnyreilly>\n//                 Benoit Benezech <https://github.com/bbenezech>\n//                 Patricio Zavolinsky <https://github.com/pzavolinsky>\n//                 Eric Anderson <https://github.com/ericanderson>\n//                 Dovydas Navickas <https://github.com/DovydasNavickas>\n//                 Josh Rutherford <https://github.com/theruther4d>\n//                 Guilherme Hübner <https://github.com/guilhermehubner>\n//                 Ferdy Budhidharma <https://github.com/ferdaber>\n//                 Johann Rakotoharisoa <https://github.com/jrakotoharisoa>\n//                 Olivier Pascal <https://github.com/pascaloliv>\n//                 Martin Hochel <https://github.com/hotell>\n//                 Frank Li <https://github.com/franklixuefei>\n//                 Jessica Franco <https://github.com/Jessidhia>\n//                 Saransh Kataria <https://github.com/saranshkataria>\n//                 Kanitkorn Sujautra <https://github.com/lukyth>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n//                 Kyle Scully <https://github.com/zieka>\n//                 Cong Zhang <https://github.com/dancerphil>\n//                 Dimitri Mitropoulos <https://github.com/dimitropoulos>\n//                 JongChan Choi <https://github.com/disjukr>\n//                 Victor Magalhães <https://github.com/vhfmag>\n//                 Dale Tan <https://github.com/hellatan>\n//                 Priyanshu Rav <https://github.com/priyanshurav>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\n// Note: We also allow `null` as a valid value because Svelte treats this the same as `undefined`\n\ntype Booleanish = boolean | 'true' | 'false';\n\n//\n// Event Handler Types\n// ----------------------------------------------------------------------\n\ntype EventHandler<E extends Event = Event, T extends EventTarget = Element> = (\n\tevent: E & { currentTarget: EventTarget & T }\n) => any;\n\nexport type ClipboardEventHandler<T extends EventTarget> = EventHandler<ClipboardEvent, T>;\nexport type CompositionEventHandler<T extends EventTarget> = EventHandler<CompositionEvent, T>;\nexport type DragEventHandler<T extends EventTarget> = EventHandler<DragEvent, T>;\nexport type FocusEventHandler<T extends EventTarget> = EventHandler<FocusEvent, T>;\nexport type FormEventHandler<T extends EventTarget> = EventHandler<Event, T>;\nexport type ChangeEventHandler<T extends EventTarget> = EventHandler<Event, T>;\nexport type KeyboardEventHandler<T extends EventTarget> = EventHandler<KeyboardEvent, T>;\nexport type MouseEventHandler<T extends EventTarget> = EventHandler<MouseEvent, T>;\nexport type TouchEventHandler<T extends EventTarget> = EventHandler<TouchEvent, T>;\nexport type PointerEventHandler<T extends EventTarget> = EventHandler<PointerEvent, T>;\nexport type UIEventHandler<T extends EventTarget> = EventHandler<UIEvent, T>;\nexport type WheelEventHandler<T extends EventTarget> = EventHandler<WheelEvent, T>;\nexport type AnimationEventHandler<T extends EventTarget> = EventHandler<AnimationEvent, T>;\nexport type TransitionEventHandler<T extends EventTarget> = EventHandler<TransitionEvent, T>;\nexport type MessageEventHandler<T extends EventTarget> = EventHandler<MessageEvent, T>;\n\n//\n// DOM Attributes\n// ----------------------------------------------------------------------\n\nexport interface DOMAttributes<T extends EventTarget> {\n\t// Clipboard Events\n\t'on:copy'?: ClipboardEventHandler<T> | undefined | null;\n\t'on:cut'?: ClipboardEventHandler<T> | undefined | null;\n\t'on:paste'?: ClipboardEventHandler<T> | undefined | null;\n\n\t// Composition Events\n\t'on:compositionend'?: CompositionEventHandler<T> | undefined | null;\n\t'on:compositionstart'?: CompositionEventHandler<T> | undefined | null;\n\t'on:compositionupdate'?: CompositionEventHandler<T> | undefined | null;\n\n\t// Focus Events\n\t'on:focus'?: FocusEventHandler<T> | undefined | null;\n\t'on:focusin'?: FocusEventHandler<T> | undefined | null;\n\t'on:focusout'?: FocusEventHandler<T> | undefined | null;\n\t'on:blur'?: FocusEventHandler<T> | undefined | null;\n\n\t// Form Events\n\t'on:change'?: FormEventHandler<T> | undefined | null;\n\t'on:beforeinput'?: EventHandler<InputEvent, T> | undefined | null;\n\t'on:input'?: FormEventHandler<T> | undefined | null;\n\t'on:reset'?: FormEventHandler<T> | undefined | null;\n\t'on:submit'?: EventHandler<SubmitEvent, T> | undefined | null;\n\t'on:invalid'?: EventHandler<Event, T> | undefined | null;\n\t'on:formdata'?: EventHandler<FormDataEvent, T> | undefined | null;\n\n\t// Image Events\n\t'on:load'?: EventHandler | undefined | null;\n\t'on:error'?: EventHandler | undefined | null; // also a Media Event\n\n\t// Detail Events\n\t'on:toggle'?: EventHandler<Event, T> | undefined | null;\n\n\t// Keyboard Events\n\t'on:keydown'?: KeyboardEventHandler<T> | undefined | null;\n\t'on:keypress'?: KeyboardEventHandler<T> | undefined | null;\n\t'on:keyup'?: KeyboardEventHandler<T> | undefined | null;\n\n\t// Media Events\n\t'on:abort'?: EventHandler<Event, T> | undefined | null;\n\t'on:canplay'?: EventHandler<Event, T> | undefined | null;\n\t'on:canplaythrough'?: EventHandler<Event, T> | undefined | null;\n\t'on:cuechange'?: EventHandler<Event, T> | undefined | null;\n\t'on:durationchange'?: EventHandler<Event, T> | undefined | null;\n\t'on:emptied'?: EventHandler<Event, T> | undefined | null;\n\t'on:encrypted'?: EventHandler<Event, T> | undefined | null;\n\t'on:ended'?: EventHandler<Event, T> | undefined | null;\n\t'on:loadeddata'?: EventHandler<Event, T> | undefined | null;\n\t'on:loadedmetadata'?: EventHandler<Event, T> | undefined | null;\n\t'on:loadstart'?: EventHandler<Event, T> | undefined | null;\n\t'on:pause'?: EventHandler<Event, T> | undefined | null;\n\t'on:play'?: EventHandler<Event, T> | undefined | null;\n\t'on:playing'?: EventHandler<Event, T> | undefined | null;\n\t'on:progress'?: EventHandler<Event, T> | undefined | null;\n\t'on:ratechange'?: EventHandler<Event, T> | undefined | null;\n\t'on:seeked'?: EventHandler<Event, T> | undefined | null;\n\t'on:seeking'?: EventHandler<Event, T> | undefined | null;\n\t'on:stalled'?: EventHandler<Event, T> | undefined | null;\n\t'on:suspend'?: EventHandler<Event, T> | undefined | null;\n\t'on:timeupdate'?: EventHandler<Event, T> | undefined | null;\n\t'on:volumechange'?: EventHandler<Event, T> | undefined | null;\n\t'on:waiting'?: EventHandler<Event, T> | undefined | null;\n\n\t// MouseEvents\n\t'on:auxclick'?: MouseEventHandler<T> | undefined | null;\n\t'on:click'?: MouseEventHandler<T> | undefined | null;\n\t'on:contextmenu'?: MouseEventHandler<T> | undefined | null;\n\t'on:dblclick'?: MouseEventHandler<T> | undefined | null;\n\t'on:drag'?: DragEventHandler<T> | undefined | null;\n\t'on:dragend'?: DragEventHandler<T> | undefined | null;\n\t'on:dragenter'?: DragEventHandler<T> | undefined | null;\n\t'on:dragexit'?: DragEventHandler<T> | undefined | null;\n\t'on:dragleave'?: DragEventHandler<T> | undefined | null;\n\t'on:dragover'?: DragEventHandler<T> | undefined | null;\n\t'on:dragstart'?: DragEventHandler<T> | undefined | null;\n\t'on:drop'?: DragEventHandler<T> | undefined | null;\n\t'on:mousedown'?: MouseEventHandler<T> | undefined | null;\n\t'on:mouseenter'?: MouseEventHandler<T> | undefined | null;\n\t'on:mouseleave'?: MouseEventHandler<T> | undefined | null;\n\t'on:mousemove'?: MouseEventHandler<T> | undefined | null;\n\t'on:mouseout'?: MouseEventHandler<T> | undefined | null;\n\t'on:mouseover'?: MouseEventHandler<T> | undefined | null;\n\t'on:mouseup'?: MouseEventHandler<T> | undefined | null;\n\n\t// Selection Events\n\t'on:select'?: EventHandler<Event, T> | undefined | null;\n\t'on:selectionchange'?: EventHandler<Event, T> | undefined | null;\n\t'on:selectstart'?: EventHandler<Event, T> | undefined | null;\n\n\t// Touch Events\n\t'on:touchcancel'?: TouchEventHandler<T> | undefined | null;\n\t'on:touchend'?: TouchEventHandler<T> | undefined | null;\n\t'on:touchmove'?: TouchEventHandler<T> | undefined | null;\n\t'on:touchstart'?: TouchEventHandler<T> | undefined | null;\n\n\t// Pointer Events\n\t'on:gotpointercapture'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointercancel'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerdown'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerenter'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerleave'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointermove'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerout'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerover'?: PointerEventHandler<T> | undefined | null;\n\t'on:pointerup'?: PointerEventHandler<T> | undefined | null;\n\t'on:lostpointercapture'?: PointerEventHandler<T> | undefined | null;\n\n\t// UI Events\n\t'on:scroll'?: UIEventHandler<T> | undefined | null;\n\t'on:resize'?: UIEventHandler<T> | undefined | null;\n\n\t// Wheel Events\n\t'on:wheel'?: WheelEventHandler<T> | undefined | null;\n\n\t// Animation Events\n\t'on:animationstart'?: AnimationEventHandler<T> | undefined | null;\n\t'on:animationend'?: AnimationEventHandler<T> | undefined | null;\n\t'on:animationiteration'?: AnimationEventHandler<T> | undefined | null;\n\n\t// Transition Events\n\t'on:transitionstart'?: TransitionEventHandler<T> | undefined | null;\n\t'on:transitionrun'?: TransitionEventHandler<T> | undefined | null;\n\t'on:transitionend'?: TransitionEventHandler<T> | undefined | null;\n\t'on:transitioncancel'?: TransitionEventHandler<T> | undefined | null;\n\n\t// Svelte Transition Events\n\t'on:outrostart'?: EventHandler<CustomEvent<null>, T> | undefined | null;\n\t'on:outroend'?: EventHandler<CustomEvent<null>, T> | undefined | null;\n\t'on:introstart'?: EventHandler<CustomEvent<null>, T> | undefined | null;\n\t'on:introend'?: EventHandler<CustomEvent<null>, T> | undefined | null;\n\n\t// Message Events\n\t'on:message'?: MessageEventHandler<T> | undefined | null;\n\t'on:messageerror'?: MessageEventHandler<T> | undefined | null;\n\n\t// Document Events\n\t'on:visibilitychange'?: EventHandler<Event, T> | undefined | null;\n\n\t// Global Events\n\t'on:cancel'?: EventHandler<Event, T> | undefined | null;\n\t'on:close'?: EventHandler<Event, T> | undefined | null;\n\t'on:fullscreenchange'?: EventHandler<Event, T> | undefined | null;\n\t'on:fullscreenerror'?: EventHandler<Event, T> | undefined | null;\n}\n\n// All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/\nexport interface AriaAttributes {\n\t/** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\n\t'aria-activedescendant'?: string | undefined | null;\n\t/** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\n\t'aria-atomic'?: Booleanish | undefined | null;\n\t/**\n\t * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\n\t * presented if they are made.\n\t */\n\t'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both' | undefined | null;\n\t/** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\n\t'aria-busy'?: Booleanish | undefined | null;\n\t/**\n\t * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n\t * @see aria-pressed @see aria-selected.\n\t */\n\t'aria-checked'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n\t/**\n\t * Defines the total number of columns in a table, grid, or treegrid.\n\t * @see aria-colindex.\n\t */\n\t'aria-colcount'?: number | undefined | null;\n\t/**\n\t * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n\t * @see aria-colcount @see aria-colspan.\n\t */\n\t'aria-colindex'?: number | undefined | null;\n\t/**\n\t * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n\t * @see aria-colindex @see aria-rowspan.\n\t */\n\t'aria-colspan'?: number | undefined | null;\n\t/**\n\t * Identifies the element (or elements) whose contents or presence are controlled by the current element.\n\t * @see aria-owns.\n\t */\n\t'aria-controls'?: string | undefined | null;\n\t/** Indicates the element that represents the current item within a container or set of related elements. */\n\t'aria-current'?: Booleanish | 'page' | 'step' | 'location' | 'date' | 'time' | undefined | null;\n\t/**\n\t * Identifies the element (or elements) that describes the object.\n\t * @see aria-labelledby\n\t */\n\t'aria-describedby'?: string | undefined | null;\n\t/**\n\t * Identifies the element that provides a detailed, extended description for the object.\n\t * @see aria-describedby.\n\t */\n\t'aria-details'?: string | undefined | null;\n\t/**\n\t * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n\t * @see aria-hidden @see aria-readonly.\n\t */\n\t'aria-disabled'?: Booleanish | undefined | null;\n\t/**\n\t * Indicates what functions can be performed when a dragged object is released on the drop target.\n\t * @deprecated in ARIA 1.1\n\t */\n\t'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined | null;\n\t/**\n\t * Identifies the element that provides an error message for the object.\n\t * @see aria-invalid @see aria-describedby.\n\t */\n\t'aria-errormessage'?: string | undefined | null;\n\t/** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\n\t'aria-expanded'?: Booleanish | undefined | null;\n\t/**\n\t * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\n\t * allows assistive technology to override the general default of reading in document source order.\n\t */\n\t'aria-flowto'?: string | undefined | null;\n\t/**\n\t * Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n\t * @deprecated in ARIA 1.1\n\t */\n\t'aria-grabbed'?: Booleanish | undefined | null;\n\t/** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\n\t'aria-haspopup'?: Booleanish | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined | null;\n\t/**\n\t * Indicates whether the element is exposed to an accessibility API.\n\t * @see aria-disabled.\n\t */\n\t'aria-hidden'?: Booleanish | undefined | null;\n\t/**\n\t * Indicates the entered value does not conform to the format expected by the application.\n\t * @see aria-errormessage.\n\t */\n\t'aria-invalid'?: Booleanish | 'grammar' | 'spelling' | undefined | null;\n\t/** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\n\t'aria-keyshortcuts'?: string | undefined | null;\n\t/**\n\t * Defines a string value that labels the current element.\n\t * @see aria-labelledby.\n\t */\n\t'aria-label'?: string | undefined | null;\n\t/**\n\t * Identifies the element (or elements) that labels the current element.\n\t * @see aria-describedby.\n\t */\n\t'aria-labelledby'?: string | undefined | null;\n\t/** Defines the hierarchical level of an element within a structure. */\n\t'aria-level'?: number | undefined | null;\n\t/** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\n\t'aria-live'?: 'off' | 'assertive' | 'polite' | undefined | null;\n\t/** Indicates whether an element is modal when displayed. */\n\t'aria-modal'?: Booleanish | undefined | null;\n\t/** Indicates whether a text box accepts multiple lines of input or only a single line. */\n\t'aria-multiline'?: Booleanish | undefined | null;\n\t/** Indicates that the user may select more than one item from the current selectable descendants. */\n\t'aria-multiselectable'?: Booleanish | undefined | null;\n\t/** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */\n\t'aria-orientation'?: 'horizontal' | 'vertical' | undefined | null;\n\t/**\n\t * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\n\t * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n\t * @see aria-controls.\n\t */\n\t'aria-owns'?: string | undefined | null;\n\t/**\n\t * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\n\t * A hint could be a sample value or a brief description of the expected format.\n\t */\n\t'aria-placeholder'?: string | undefined | null;\n\t/**\n\t * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n\t * @see aria-setsize.\n\t */\n\t'aria-posinset'?: number | undefined | null;\n\t/**\n\t * Indicates the current \"pressed\" state of toggle buttons.\n\t * @see aria-checked @see aria-selected.\n\t */\n\t'aria-pressed'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n\t/**\n\t * Indicates that the element is not editable, but is otherwise operable.\n\t * @see aria-disabled.\n\t */\n\t'aria-readonly'?: Booleanish | undefined | null;\n\t/**\n\t * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n\t * @see aria-atomic.\n\t */\n\t'aria-relevant'?:\n\t\t| 'additions'\n\t\t| 'additions removals'\n\t\t| 'additions text'\n\t\t| 'all'\n\t\t| 'removals'\n\t\t| 'removals additions'\n\t\t| 'removals text'\n\t\t| 'text'\n\t\t| 'text additions'\n\t\t| 'text removals'\n\t\t| undefined\n\t\t| null;\n\t/** Indicates that user input is required on the element before a form may be submitted. */\n\t'aria-required'?: Booleanish | undefined | null;\n\t/** Defines a human-readable, author-localized description for the role of an element. */\n\t'aria-roledescription'?: string | undefined | null;\n\t/**\n\t * Defines the total number of rows in a table, grid, or treegrid.\n\t * @see aria-rowindex.\n\t */\n\t'aria-rowcount'?: number | undefined | null;\n\t/**\n\t * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n\t * @see aria-rowcount @see aria-rowspan.\n\t */\n\t'aria-rowindex'?: number | undefined | null;\n\t/**\n\t * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n\t * @see aria-rowindex @see aria-colspan.\n\t */\n\t'aria-rowspan'?: number | undefined | null;\n\t/**\n\t * Indicates the current \"selected\" state of various widgets.\n\t * @see aria-checked @see aria-pressed.\n\t */\n\t'aria-selected'?: Booleanish | undefined | null;\n\t/**\n\t * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n\t * @see aria-posinset.\n\t */\n\t'aria-setsize'?: number | undefined | null;\n\t/** Indicates if items in a table or grid are sorted in ascending or descending order. */\n\t'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other' | undefined | null;\n\t/** Defines the maximum allowed value for a range widget. */\n\t'aria-valuemax'?: number | undefined | null;\n\t/** Defines the minimum allowed value for a range widget. */\n\t'aria-valuemin'?: number | undefined | null;\n\t/**\n\t * Defines the current value for a range widget.\n\t * @see aria-valuetext.\n\t */\n\t'aria-valuenow'?: number | undefined | null;\n\t/** Defines the human readable text alternative of aria-valuenow for a range widget. */\n\t'aria-valuetext'?: string | undefined | null;\n}\n\n// All the WAI-ARIA 1.1 role attribute values from https://www.w3.org/TR/wai-aria-1.1/#role_definitions\nexport type AriaRole =\n\t| 'alert'\n\t| 'alertdialog'\n\t| 'application'\n\t| 'article'\n\t| 'banner'\n\t| 'button'\n\t| 'cell'\n\t| 'checkbox'\n\t| 'columnheader'\n\t| 'combobox'\n\t| 'complementary'\n\t| 'contentinfo'\n\t| 'definition'\n\t| 'dialog'\n\t| 'directory'\n\t| 'document'\n\t| 'feed'\n\t| 'figure'\n\t| 'form'\n\t| 'grid'\n\t| 'gridcell'\n\t| 'group'\n\t| 'heading'\n\t| 'img'\n\t| 'link'\n\t| 'list'\n\t| 'listbox'\n\t| 'listitem'\n\t| 'log'\n\t| 'main'\n\t| 'marquee'\n\t| 'math'\n\t| 'menu'\n\t| 'menubar'\n\t| 'menuitem'\n\t| 'menuitemcheckbox'\n\t| 'menuitemradio'\n\t| 'navigation'\n\t| 'none'\n\t| 'note'\n\t| 'option'\n\t| 'presentation'\n\t| 'progressbar'\n\t| 'radio'\n\t| 'radiogroup'\n\t| 'region'\n\t| 'row'\n\t| 'rowgroup'\n\t| 'rowheader'\n\t| 'scrollbar'\n\t| 'search'\n\t| 'searchbox'\n\t| 'separator'\n\t| 'slider'\n\t| 'spinbutton'\n\t| 'status'\n\t| 'switch'\n\t| 'tab'\n\t| 'table'\n\t| 'tablist'\n\t| 'tabpanel'\n\t| 'term'\n\t| 'textbox'\n\t| 'timer'\n\t| 'toolbar'\n\t| 'tooltip'\n\t| 'tree'\n\t| 'treegrid'\n\t| 'treeitem'\n\t| (string & {});\n\nexport interface HTMLAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n\t// Standard HTML Attributes\n\taccesskey?: string | undefined | null;\n\tautofocus?: boolean | undefined | null;\n\tclass?: string | undefined | null;\n\tcontenteditable?: Booleanish | 'inherit' | undefined | null;\n\tcontextmenu?: string | undefined | null;\n\tdir?: string | undefined | null;\n\tdraggable?: Booleanish | undefined | null;\n\tenterkeyhint?:\n\t\t| 'enter'\n\t\t| 'done'\n\t\t| 'go'\n\t\t| 'next'\n\t\t| 'previous'\n\t\t| 'search'\n\t\t| 'send'\n\t\t| undefined\n\t\t| null;\n\thidden?: boolean | undefined | null;\n\tid?: string | undefined | null;\n\tlang?: string | undefined | null;\n\tpart?: string | undefined | null;\n\tplaceholder?: string | undefined | null;\n\tslot?: string | undefined | null;\n\tspellcheck?: Booleanish | undefined | null;\n\tstyle?: string | undefined | null;\n\ttabindex?: number | undefined | null;\n\ttitle?: string | undefined | null;\n\ttranslate?: 'yes' | 'no' | '' | undefined | null;\n\tinert?: boolean | undefined | null;\n\n\t// Unknown\n\tradiogroup?: string | undefined | null; // <command>, <menuitem>\n\n\t// WAI-ARIA\n\trole?: AriaRole | undefined | null;\n\n\t// RDFa Attributes\n\tabout?: string | undefined | null;\n\tdatatype?: string | undefined | null;\n\tinlist?: any;\n\tprefix?: string | undefined | null;\n\tproperty?: string | undefined | null;\n\tresource?: string | undefined | null;\n\ttypeof?: string | undefined | null;\n\tvocab?: string | undefined | null;\n\n\t// Non-standard Attributes\n\tautocapitalize?: string | undefined | null;\n\tautocorrect?: string | undefined | null;\n\tautosave?: string | undefined | null;\n\tcolor?: string | undefined | null;\n\titemprop?: string | undefined | null;\n\titemscope?: boolean | undefined | null;\n\titemtype?: string | undefined | null;\n\titemid?: string | undefined | null;\n\titemref?: string | undefined | null;\n\tresults?: number | undefined | null;\n\tsecurity?: string | undefined | null;\n\tunselectable?: 'on' | 'off' | undefined | null;\n\n\t// Living Standard\n\t/**\n\t * Hints at the type of data that might be entered by the user while editing the element or its contents\n\t * @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n\t */\n\tinputmode?:\n\t\t| 'none'\n\t\t| 'text'\n\t\t| 'tel'\n\t\t| 'url'\n\t\t| 'email'\n\t\t| 'numeric'\n\t\t| 'decimal'\n\t\t| 'search'\n\t\t| undefined\n\t\t| null;\n\t/**\n\t * Specify that a standard HTML element should behave like a defined custom built-in element\n\t * @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n\t */\n\tis?: string | undefined | null;\n\n\t/**\n\t * Elements with the contenteditable attribute support `innerHTML`, `textContent` and `innerText` bindings.\n\t */\n\t'bind:innerHTML'?: string | undefined | null;\n\t/**\n\t * Elements with the contenteditable attribute support `innerHTML`, `textContent` and `innerText` bindings.\n\t */\n\t'bind:textContent'?: string | undefined | null;\n\t/**\n\t * Elements with the contenteditable attribute support `innerHTML`, `textContent` and `innerText` bindings.\n\t */\n\t'bind:innerText'?: string | undefined | null;\n\n\treadonly 'bind:contentRect'?: DOMRectReadOnly | undefined | null;\n\treadonly 'bind:contentBoxSize'?: Array<ResizeObserverSize> | undefined | null;\n\treadonly 'bind:borderBoxSize'?: Array<ResizeObserverSize> | undefined | null;\n\treadonly 'bind:devicePixelContentBoxSize'?: Array<ResizeObserverSize> | undefined | null;\n\n\t// SvelteKit\n\t'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;\n\t'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;\n\t'data-sveltekit-preload-code'?:\n\t\t| true\n\t\t| ''\n\t\t| 'eager'\n\t\t| 'viewport'\n\t\t| 'hover'\n\t\t| 'tap'\n\t\t| 'off'\n\t\t| undefined\n\t\t| null;\n\t'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;\n\t'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;\n\t'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;\n\n\t// allow any data- attribute\n\t[key: `data-${string}`]: any;\n}\n\nexport type HTMLAttributeAnchorTarget = '_self' | '_blank' | '_parent' | '_top' | (string & {});\n\nexport interface HTMLAnchorAttributes extends HTMLAttributes<HTMLAnchorElement> {\n\tdownload?: any;\n\thref?: string | undefined | null;\n\threflang?: string | undefined | null;\n\tmedia?: string | undefined | null;\n\tping?: string | undefined | null;\n\trel?: string | undefined | null;\n\ttarget?: HTMLAttributeAnchorTarget | undefined | null;\n\ttype?: string | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\n\t// Sapper\n\t'sapper:noscroll'?: true | undefined | null;\n\t'sapper:prefetch'?: true | undefined | null;\n}\n\nexport interface HTMLAudioAttributes extends HTMLMediaAttributes<HTMLAudioElement> {}\n\nexport interface HTMLAreaAttributes extends HTMLAttributes<HTMLAreaElement> {\n\talt?: string | undefined | null;\n\tcoords?: string | undefined | null;\n\tdownload?: any;\n\thref?: string | undefined | null;\n\threflang?: string | undefined | null;\n\tmedia?: string | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\trel?: string | undefined | null;\n\tshape?: string | undefined | null;\n\ttarget?: string | undefined | null;\n\tping?: string | undefined | null;\n}\n\nexport interface HTMLBaseAttributes extends HTMLAttributes<HTMLBaseElement> {\n\thref?: string | undefined | null;\n\ttarget?: string | undefined | null;\n}\n\nexport interface HTMLBlockquoteAttributes extends HTMLAttributes<HTMLQuoteElement> {\n\tcite?: string | undefined | null;\n}\n\nexport interface HTMLButtonAttributes extends HTMLAttributes<HTMLButtonElement> {\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tformaction?: string | undefined | null;\n\tformenctype?: string | undefined | null;\n\tformmethod?: string | undefined | null;\n\tformnovalidate?: boolean | undefined | null;\n\tformtarget?: string | undefined | null;\n\tname?: string | undefined | null;\n\ttype?: 'submit' | 'reset' | 'button' | undefined | null;\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLCanvasAttributes extends HTMLAttributes<HTMLCanvasElement> {\n\theight?: number | string | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLColAttributes extends HTMLAttributes<HTMLTableColElement> {\n\tspan?: number | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLColgroupAttributes extends HTMLAttributes<HTMLTableColElement> {\n\tspan?: number | undefined | null;\n}\n\nexport interface HTMLDataAttributes extends HTMLAttributes<HTMLDataElement> {\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLDetailsAttributes extends HTMLAttributes<HTMLDetailsElement> {\n\topen?: boolean | undefined | null;\n\n\t'bind:open'?: boolean | undefined | null;\n}\n\nexport interface HTMLDelAttributes extends HTMLAttributes<HTMLModElement> {\n\tcite?: string | undefined | null;\n\tdatetime?: string | undefined | null;\n}\n\nexport interface HTMLDialogAttributes extends HTMLAttributes<HTMLDialogElement> {\n\topen?: boolean | undefined | null;\n}\n\nexport interface HTMLEmbedAttributes extends HTMLAttributes<HTMLEmbedElement> {\n\theight?: number | string | undefined | null;\n\tsrc?: string | undefined | null;\n\ttype?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLFieldsetAttributes extends HTMLAttributes<HTMLFieldSetElement> {\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tname?: string | undefined | null;\n}\n\nexport interface HTMLFormAttributes extends HTMLAttributes<HTMLFormElement> {\n\tacceptcharset?: string | undefined | null;\n\taction?: string | undefined | null;\n\tautocomplete?: string | undefined | null;\n\tenctype?: string | undefined | null;\n\tmethod?: string | undefined | null;\n\tname?: string | undefined | null;\n\tnovalidate?: boolean | undefined | null;\n\ttarget?: string | undefined | null;\n\trel?: string | undefined | null;\n}\n\nexport interface HTMLHtmlAttributes extends HTMLAttributes<HTMLHtmlElement> {\n\tmanifest?: string | undefined | null;\n}\n\nexport interface HTMLIframeAttributes extends HTMLAttributes<HTMLIFrameElement> {\n\tallow?: string | undefined | null;\n\tallowfullscreen?: boolean | undefined | null;\n\tallowtransparency?: boolean | undefined | null;\n\t/** @deprecated */\n\tframeborder?: number | string | undefined | null;\n\theight?: number | string | undefined | null;\n\tloading?: 'eager' | 'lazy' | undefined | null;\n\t/** @deprecated */\n\tmarginheight?: number | undefined | null;\n\t/** @deprecated */\n\tmarginwidth?: number | undefined | null;\n\tname?: string | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\tsandbox?: string | undefined | null;\n\t/** @deprecated */\n\tscrolling?: string | undefined | null;\n\tseamless?: boolean | undefined | null;\n\tsrc?: string | undefined | null;\n\tsrcdoc?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLImgAttributes extends HTMLAttributes<HTMLImageElement> {\n\talt?: string | undefined | null;\n\tcrossorigin?: 'anonymous' | 'use-credentials' | '' | undefined | null;\n\tdecoding?: 'async' | 'auto' | 'sync' | undefined | null;\n\theight?: number | string | undefined | null;\n\tismap?: boolean | undefined | null;\n\tloading?: 'eager' | 'lazy' | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\tsizes?: string | undefined | null;\n\tsrc?: string | undefined | null;\n\tsrcset?: string | undefined | null;\n\tusemap?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n\n\treadonly 'bind:naturalWidth'?: number | undefined | null;\n\treadonly 'bind:naturalHeight'?: number | undefined | null;\n}\n\nexport interface HTMLInsAttributes extends HTMLAttributes<HTMLModElement> {\n\tcite?: string | undefined | null;\n\tdatetime?: string | undefined | null;\n}\n\nexport type HTMLInputTypeAttribute =\n\t| 'button'\n\t| 'checkbox'\n\t| 'color'\n\t| 'date'\n\t| 'datetime-local'\n\t| 'email'\n\t| 'file'\n\t| 'hidden'\n\t| 'image'\n\t| 'month'\n\t| 'number'\n\t| 'password'\n\t| 'radio'\n\t| 'range'\n\t| 'reset'\n\t| 'search'\n\t| 'submit'\n\t| 'tel'\n\t| 'text'\n\t| 'time'\n\t| 'url'\n\t| 'week'\n\t| (string & {});\n\nexport interface HTMLInputAttributes extends HTMLAttributes<HTMLInputElement> {\n\taccept?: string | undefined | null;\n\talt?: string | undefined | null;\n\tautocomplete?: string | undefined | null;\n\tcapture?: boolean | 'user' | 'environment' | undefined | null; // https://www.w3.org/TR/html-media-capture/#the-capture-attribute\n\tchecked?: boolean | undefined | null;\n\tcrossorigin?: string | undefined | null;\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tformaction?: string | undefined | null;\n\tformenctype?: string | undefined | null;\n\tformmethod?: string | undefined | null;\n\tformnovalidate?: boolean | undefined | null;\n\tformtarget?: string | undefined | null;\n\theight?: number | string | undefined | null;\n\tlist?: string | undefined | null;\n\tmax?: number | string | undefined | null;\n\tmaxlength?: number | undefined | null;\n\tmin?: number | string | undefined | null;\n\tminlength?: number | undefined | null;\n\tmultiple?: boolean | undefined | null;\n\tname?: string | undefined | null;\n\tpattern?: string | undefined | null;\n\tplaceholder?: string | undefined | null;\n\treadonly?: boolean | undefined | null;\n\trequired?: boolean | undefined | null;\n\tsize?: number | undefined | null;\n\tsrc?: string | undefined | null;\n\tstep?: number | string | undefined | null;\n\ttype?: HTMLInputTypeAttribute | undefined | null;\n\tvalue?: any;\n\twidth?: number | string | undefined | null;\n\n\t'on:change'?: ChangeEventHandler<HTMLInputElement> | undefined | null;\n\n\t'bind:checked'?: boolean | undefined | null;\n\t'bind:value'?: any;\n\t'bind:group'?: any | undefined | null;\n\t'bind:files'?: FileList | undefined | null;\n\t'bind:indeterminate'?: boolean | undefined | null;\n}\n\nexport interface HTMLKeygenAttributes extends HTMLAttributes<HTMLElement> {\n\tchallenge?: string | undefined | null;\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tkeytype?: string | undefined | null;\n\tkeyparams?: string | undefined | null;\n\tname?: string | undefined | null;\n}\n\nexport interface HTMLLabelAttributes extends HTMLAttributes<HTMLLabelElement> {\n\tform?: string | undefined | null;\n\tfor?: string | undefined | null;\n}\n\nexport interface HTMLLiAttributes extends HTMLAttributes<HTMLLIElement> {\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLLinkAttributes extends HTMLAttributes<HTMLLinkElement> {\n\tas?: string | undefined | null;\n\tcrossorigin?: string | undefined | null;\n\thref?: string | undefined | null;\n\threflang?: string | undefined | null;\n\tintegrity?: string | undefined | null;\n\tmedia?: string | undefined | null;\n\timagesrcset?: string | undefined | null;\n\timagesizes?: string | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\trel?: string | undefined | null;\n\tsizes?: string | undefined | null;\n\ttype?: string | undefined | null;\n\tcharset?: string | undefined | null;\n}\n\nexport interface HTMLMapAttributes extends HTMLAttributes<HTMLMapElement> {\n\tname?: string | undefined | null;\n}\n\nexport interface HTMLMenuAttributes extends HTMLAttributes<HTMLMenuElement> {\n\ttype?: string | undefined | null;\n}\n\nexport interface HTMLMediaAttributes<T extends HTMLMediaElement> extends HTMLAttributes<T> {\n\tautoplay?: boolean | undefined | null;\n\tcontrols?: boolean | undefined | null;\n\tcontrolslist?:\n\t\t| 'nodownload'\n\t\t| 'nofullscreen'\n\t\t| 'noplaybackrate'\n\t\t| 'noremoteplayback'\n\t\t| (string & {})\n\t\t| undefined\n\t\t| null;\n\tcrossorigin?: string | undefined | null;\n\tcurrenttime?: number | undefined | null;\n\tdefaultmuted?: boolean | undefined | null;\n\tdefaultplaybackrate?: number | undefined | null;\n\tloop?: boolean | undefined | null;\n\tmediagroup?: string | undefined | null;\n\tmuted?: boolean | undefined | null;\n\tplaysinline?: boolean | undefined | null;\n\tpreload?: string | undefined | null;\n\tsrc?: string | undefined | null;\n\t/**\n\t * a value between 0 and 1\n\t */\n\tvolume?: number | undefined | null;\n\n\treadonly 'bind:readyState'?: 0 | 1 | 2 | 3 | 4 | undefined | null;\n\treadonly 'bind:duration'?: number | undefined | null;\n\treadonly 'bind:buffered'?: SvelteMediaTimeRange[] | undefined | null;\n\treadonly 'bind:played'?: SvelteMediaTimeRange[] | undefined | null;\n\treadonly 'bind:seekable'?: SvelteMediaTimeRange[] | undefined | null;\n\treadonly 'bind:seeking'?: boolean | undefined | null;\n\treadonly 'bind:ended'?: boolean | undefined | null;\n\t'bind:muted'?: boolean | undefined | null;\n\t'bind:volume'?: number | undefined | null;\n\t/**\n\t * the current playback time in the video, in seconds\n\t */\n\t'bind:currentTime'?: number | undefined | null;\n\t/**\n\t * how fast or slow to play the video, where 1 is 'normal'\n\t */\n\t'bind:playbackRate'?: number | undefined | null;\n\t'bind:paused'?: boolean | undefined | null;\n}\n\nexport interface HTMLMetaAttributes extends HTMLAttributes<HTMLMetaElement> {\n\tcharset?: string | undefined | null;\n\tcontent?: string | undefined | null;\n\t'http-equiv'?: string | undefined | null;\n\tname?: string | undefined | null;\n\tmedia?: string | undefined | null;\n}\n\nexport interface HTMLMeterAttributes extends HTMLAttributes<HTMLMeterElement> {\n\tform?: string | undefined | null;\n\thigh?: number | undefined | null;\n\tlow?: number | undefined | null;\n\tmax?: number | string | undefined | null;\n\tmin?: number | string | undefined | null;\n\toptimum?: number | undefined | null;\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLQuoteAttributes extends HTMLAttributes<HTMLQuoteElement> {\n\tcite?: string | undefined | null;\n}\n\nexport interface HTMLObjectAttributes extends HTMLAttributes<HTMLObjectElement> {\n\tclassid?: string | undefined | null;\n\tdata?: string | undefined | null;\n\tform?: string | undefined | null;\n\theight?: number | string | undefined | null;\n\tname?: string | undefined | null;\n\ttype?: string | undefined | null;\n\tusemap?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n\twmode?: string | undefined | null;\n}\n\nexport interface HTMLOlAttributes extends HTMLAttributes<HTMLOListElement> {\n\treversed?: boolean | undefined | null;\n\tstart?: number | undefined | null;\n\ttype?: '1' | 'a' | 'A' | 'i' | 'I' | undefined | null;\n}\n\nexport interface HTMLOptgroupAttributes extends HTMLAttributes<HTMLOptGroupElement> {\n\tdisabled?: boolean | undefined | null;\n\tlabel?: string | undefined | null;\n}\n\nexport interface HTMLOptionAttributes extends HTMLAttributes<HTMLOptionElement> {\n\tdisabled?: boolean | undefined | null;\n\tlabel?: string | undefined | null;\n\tselected?: boolean | undefined | null;\n\tvalue?: any;\n}\n\nexport interface HTMLOutputAttributes extends HTMLAttributes<HTMLOutputElement> {\n\tform?: string | undefined | null;\n\tfor?: string | undefined | null;\n\tname?: string | undefined | null;\n}\n\nexport interface HTMLParamAttributes extends HTMLAttributes<HTMLParamElement> {\n\tname?: string | undefined | null;\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLProgressAttributes extends HTMLAttributes<HTMLProgressElement> {\n\tmax?: number | string | undefined | null;\n\tvalue?: string | string[] | number | undefined | null;\n}\n\nexport interface HTMLSlotAttributes extends HTMLAttributes<HTMLSlotElement> {\n\tname?: string | undefined | null;\n}\n\nexport interface HTMLScriptAttributes extends HTMLAttributes<HTMLScriptElement> {\n\tasync?: boolean | undefined | null;\n\t/** @deprecated */\n\tcharset?: string | undefined | null;\n\tcrossorigin?: string | undefined | null;\n\tdefer?: boolean | undefined | null;\n\tintegrity?: string | undefined | null;\n\tnomodule?: boolean | undefined | null;\n\tnonce?: string | undefined | null;\n\treferrerpolicy?: ReferrerPolicy | undefined | null;\n\tsrc?: string | undefined | null;\n\ttype?: string | undefined | null;\n}\n\nexport interface HTMLSelectAttributes extends HTMLAttributes<HTMLSelectElement> {\n\tautocomplete?: string | undefined | null;\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tmultiple?: boolean | undefined | null;\n\tname?: string | undefined | null;\n\trequired?: boolean | undefined | null;\n\tsize?: number | undefined | null;\n\tvalue?: any;\n\n\t'on:change'?: ChangeEventHandler<HTMLSelectElement> | undefined | null;\n\n\t'bind:value'?: any;\n}\n\nexport interface HTMLSourceAttributes extends HTMLAttributes<HTMLSourceElement> {\n\theight?: number | string | undefined | null;\n\tmedia?: string | undefined | null;\n\tsizes?: string | undefined | null;\n\tsrc?: string | undefined | null;\n\tsrcset?: string | undefined | null;\n\ttype?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLStyleAttributes extends HTMLAttributes<HTMLStyleElement> {\n\tmedia?: string | undefined | null;\n\tnonce?: string | undefined | null;\n\tscoped?: boolean | undefined | null;\n\ttype?: string | undefined | null;\n}\n\nexport interface HTMLTableAttributes extends HTMLAttributes<HTMLTableElement> {\n\talign?: 'left' | 'center' | 'right' | undefined | null;\n\tbgcolor?: string | undefined | null;\n\tborder?: number | undefined | null;\n\tcellpadding?: number | string | undefined | null;\n\tcellspacing?: number | string | undefined | null;\n\tframe?: boolean | undefined | null;\n\trules?: 'none' | 'groups' | 'rows' | 'columns' | 'all' | undefined | null;\n\tsummary?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n}\n\nexport interface HTMLTextareaAttributes extends HTMLAttributes<HTMLTextAreaElement> {\n\tautocomplete?: string | undefined | null;\n\tcols?: number | undefined | null;\n\tdirname?: string | undefined | null;\n\tdisabled?: boolean | undefined | null;\n\tform?: string | undefined | null;\n\tmaxlength?: number | undefined | null;\n\tminlength?: number | undefined | null;\n\tname?: string | undefined | null;\n\tplaceholder?: string | undefined | null;\n\treadonly?: boolean | undefined | null;\n\trequired?: boolean | undefined | null;\n\trows?: number | undefined | null;\n\tvalue?: string | string[] | number | undefined | null;\n\twrap?: string | undefined | null;\n\n\t'on:change'?: ChangeEventHandler<HTMLTextAreaElement> | undefined | null;\n\n\t'bind:value'?: any;\n}\n\nexport interface HTMLTdAttributes extends HTMLAttributes<HTMLTableCellElement> {\n\talign?: 'left' | 'center' | 'right' | 'justify' | 'char' | undefined | null;\n\tcolspan?: number | undefined | null;\n\theaders?: string | undefined | null;\n\trowspan?: number | undefined | null;\n\tscope?: string | undefined | null;\n\tabbr?: string | undefined | null;\n\theight?: number | string | undefined | null;\n\twidth?: number | string | undefined | null;\n\tvalign?: 'top' | 'middle' | 'bottom' | 'baseline' | undefined | null;\n}\n\nexport interface HTMLThAttributes extends HTMLAttributes<HTMLTableCellElement> {\n\talign?: 'left' | 'center' | 'right' | 'justify' | 'char' | undefined | null;\n\tcolspan?: number | undefined | null;\n\theaders?: string | undefined | null;\n\trowspan?: number | undefined | null;\n\tscope?: string | undefined | null;\n\tabbr?: string | undefined | null;\n}\n\nexport interface HTMLTimeAttributes extends HTMLAttributes<HTMLTimeElement> {\n\tdatetime?: string | undefined | null;\n}\n\nexport interface HTMLTrackAttributes extends HTMLAttributes<HTMLTrackElement> {\n\tdefault?: boolean | undefined | null;\n\tkind?: string | undefined | null;\n\tlabel?: string | undefined | null;\n\tsrc?: string | undefined | null;\n\tsrclang?: string | undefined | null;\n}\n\nexport interface HTMLVideoAttributes extends HTMLMediaAttributes<HTMLVideoElement> {\n\theight?: number | string | undefined | null;\n\tplaysinline?: boolean | undefined | null;\n\tposter?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n\tdisablepictureinpicture?: boolean | undefined | null;\n\tdisableremoteplayback?: boolean | undefined | null;\n\n\treadonly 'bind:videoWidth'?: number | undefined | null;\n\treadonly 'bind:videoHeight'?: number | undefined | null;\n}\n\nexport interface SvelteMediaTimeRange {\n\tstart: number;\n\tend: number;\n}\n\nexport interface SvelteDocumentAttributes extends HTMLAttributes<Document> {\n\treadonly 'bind:fullscreenElement'?: Document['fullscreenElement'] | undefined | null;\n\treadonly 'bind:visibilityState'?: Document['visibilityState'] | undefined | null;\n}\n\nexport interface SvelteWindowAttributes extends HTMLAttributes<Window> {\n\treadonly 'bind:innerWidth'?: Window['innerWidth'] | undefined | null;\n\treadonly 'bind:innerHeight'?: Window['innerHeight'] | undefined | null;\n\treadonly 'bind:outerWidth'?: Window['outerWidth'] | undefined | null;\n\treadonly 'bind:outerHeight'?: Window['outerHeight'] | undefined | null;\n\treadonly 'bind:devicePixelRatio'?: Window['devicePixelRatio'] | undefined | null;\n\t'bind:scrollX'?: Window['scrollX'] | undefined | null;\n\t'bind:scrollY'?: Window['scrollY'] | undefined | null;\n\treadonly 'bind:online'?: Window['navigator']['onLine'] | undefined | null;\n\n\t// SvelteKit\n\t'on:sveltekit:start'?: EventHandler<CustomEvent, Window> | undefined | null;\n\t'on:sveltekit:navigation-start'?: EventHandler<CustomEvent, Window> | undefined | null;\n\t'on:sveltekit:navigation-end'?: EventHandler<CustomEvent, Window> | undefined | null;\n\n\t'on:devicelight'?: EventHandler<Event, Window> | undefined | null;\n\t'on:beforeinstallprompt'?: EventHandler<Event, Window> | undefined | null;\n\t'on:deviceproximity'?: EventHandler<Event, Window> | undefined | null;\n\t'on:paint'?: EventHandler<Event, Window> | undefined | null;\n\t'on:userproximity'?: EventHandler<Event, Window> | undefined | null;\n\t'on:beforeprint'?: EventHandler<Event, Window> | undefined | null;\n\t'on:afterprint'?: EventHandler<Event, Window> | undefined | null;\n\t'on:languagechange'?: EventHandler<Event, Window> | undefined | null;\n\t'on:orientationchange'?: EventHandler<Event, Window> | undefined | null;\n\t'on:message'?: EventHandler<MessageEvent, Window> | undefined | null;\n\t'on:messageerror'?: EventHandler<MessageEvent, Window> | undefined | null;\n\t'on:offline'?: EventHandler<Event, Window> | undefined | null;\n\t'on:online'?: EventHandler<Event, Window> | undefined | null;\n\t'on:beforeunload'?: EventHandler<BeforeUnloadEvent, Window> | undefined | null;\n\t'on:unload'?: EventHandler<Event, Window> | undefined | null;\n\t'on:storage'?: EventHandler<StorageEvent, Window> | undefined | null;\n\t'on:hashchange'?: EventHandler<HashChangeEvent, Window> | undefined | null;\n\t'on:pagehide'?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n\t'on:pageshow'?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n\t'on:popstate'?: EventHandler<PopStateEvent, Window> | undefined | null;\n\t'on:devicemotion'?: EventHandler<DeviceMotionEvent> | undefined | null;\n\t'on:deviceorientation'?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n\t'on:deviceorientationabsolute'?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n\t'on:unhandledrejection'?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n\t'on:rejectionhandled'?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n}\n\nexport interface SVGAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n\t// Attributes which also defined in HTMLAttributes\n\tclassName?: string | undefined | null;\n\tclass?: string | undefined | null;\n\tcolor?: string | undefined | null;\n\theight?: number | string | undefined | null;\n\tid?: string | undefined | null;\n\tlang?: string | undefined | null;\n\tmax?: number | string | undefined | null;\n\tmedia?: string | undefined | null;\n\tmethod?: string | undefined | null;\n\tmin?: number | string | undefined | null;\n\tname?: string | undefined | null;\n\tstyle?: string | undefined | null;\n\ttarget?: string | undefined | null;\n\ttype?: string | undefined | null;\n\twidth?: number | string | undefined | null;\n\n\t// Other HTML properties supported by SVG elements in browsers\n\trole?: AriaRole | undefined | null;\n\ttabindex?: number | undefined | null;\n\tcrossorigin?: 'anonymous' | 'use-credentials' | '' | undefined | null;\n\n\t// SVG Specific attributes\n\t'accent-height'?: number | string | undefined | null;\n\taccumulate?: 'none' | 'sum' | undefined | null;\n\tadditive?: 'replace' | 'sum' | undefined | null;\n\t'alignment-baseline'?:\n\t\t| 'auto'\n\t\t| 'baseline'\n\t\t| 'before-edge'\n\t\t| 'text-before-edge'\n\t\t| 'middle'\n\t\t| 'central'\n\t\t| 'after-edge'\n\t\t| 'text-after-edge'\n\t\t| 'ideographic'\n\t\t| 'alphabetic'\n\t\t| 'hanging'\n\t\t| 'mathematical'\n\t\t| 'inherit'\n\t\t| undefined\n\t\t| null;\n\tallowReorder?: 'no' | 'yes' | undefined | null;\n\talphabetic?: number | string | undefined | null;\n\tamplitude?: number | string | undefined | null;\n\t'arabic-form'?: 'initial' | 'medial' | 'terminal' | 'isolated' | undefined | null;\n\tascent?: number | string | undefined | null;\n\tattributeName?: string | undefined | null;\n\tattributeType?: string | undefined | null;\n\tautoReverse?: number | string | undefined | null;\n\tazimuth?: number | string | undefined | null;\n\tbaseFrequency?: number | string | undefined | null;\n\t'baseline-shift'?: number | string | undefined | null;\n\tbaseProfile?: number | string | undefined | null;\n\tbbox?: number | string | undefined | null;\n\tbegin?: number | string | undefined | null;\n\tbias?: number | string | undefined | null;\n\tby?: number | string | undefined | null;\n\tcalcMode?: number | string | undefined | null;\n\t'cap-height'?: number | string | undefined | null;\n\tclip?: number | string | undefined | null;\n\t'clip-path'?: string | undefined | null;\n\tclipPathUnits?: number | string | undefined | null;\n\t'clip-rule'?: number | string | undefined | null;\n\t'color-interpolation'?: number | string | undefined | null;\n\t'color-interpolation-filters'?: 'auto' | 'sRGB' | 'linearRGB' | 'inherit' | undefined | null;\n\t'color-profile'?: number | string | undefined | null;\n\t'color-rendering'?: number | string | undefined | null;\n\tcontentScriptType?: number | string | undefined | null;\n\tcontentStyleType?: number | string | undefined | null;\n\tcursor?: number | string | undefined | null;\n\tcx?: number | string | undefined | null;\n\tcy?: number | string | undefined | null;\n\td?: string | undefined | null;\n\tdecelerate?: number | string | undefined | null;\n\tdescent?: number | string | undefined | null;\n\tdiffuseConstant?: number | string | undefined | null;\n\tdirection?: number | string | undefined | null;\n\tdisplay?: number | string | undefined | null;\n\tdivisor?: number | string | undefined | null;\n\t'dominant-baseline'?: number | string | undefined | null;\n\tdur?: number | string | undefined | null;\n\tdx?: number | string | undefined | null;\n\tdy?: number | string | undefined | null;\n\tedgeMode?: number | string | undefined | null;\n\televation?: number | string | undefined | null;\n\t'enable-background'?: number | string | undefined | null;\n\tend?: number | string | undefined | null;\n\texponent?: number | string | undefined | null;\n\texternalResourcesRequired?: number | string | undefined | null;\n\tfill?: string | undefined | null;\n\t'fill-opacity'?: number | string | undefined | null;\n\t'fill-rule'?: 'nonzero' | 'evenodd' | 'inherit' | undefined | null;\n\tfilter?: string | undefined | null;\n\tfilterRes?: number | string | undefined | null;\n\tfilterUnits?: number | string | undefined | null;\n\t'flood-color'?: number | string | undefined | null;\n\t'flood-opacity'?: number | string | undefined | null;\n\tfocusable?: number | string | undefined | null;\n\t'font-family'?: string | undefined | null;\n\t'font-size'?: number | string | undefined | null;\n\t'font-size-adjust'?: number | string | undefined | null;\n\t'font-stretch'?: number | string | undefined | null;\n\t'font-style'?: number | string | undefined | null;\n\t'font-variant'?: number | string | undefined | null;\n\t'font-weight'?: number | string | undefined | null;\n\tformat?: number | string | undefined | null;\n\tfrom?: number | string | undefined | null;\n\tfx?: number | string | undefined | null;\n\tfy?: number | string | undefined | null;\n\tg1?: number | string | undefined | null;\n\tg2?: number | string | undefined | null;\n\t'glyph-name'?: number | string | undefined | null;\n\t'glyph-orientation-horizontal'?: number | string | undefined | null;\n\t'glyph-orientation-vertical'?: number | string | undefined | null;\n\tglyphRef?: number | string | undefined | null;\n\tgradientTransform?: string | undefined | null;\n\tgradientUnits?: string | undefined | null;\n\thanging?: number | string | undefined | null;\n\thref?: string | undefined | null;\n\t'horiz-adv-x'?: number | string | undefined | null;\n\t'horiz-origin-x'?: number | string | undefined | null;\n\tideographic?: number | string | undefined | null;\n\t'image-rendering'?: number | string | undefined | null;\n\tin2?: number | string | undefined | null;\n\tin?: string | undefined | null;\n\tintercept?: number | string | undefined | null;\n\tk1?: number | string | undefined | null;\n\tk2?: number | string | undefined | null;\n\tk3?: number | string | undefined | null;\n\tk4?: number | string | undefined | null;\n\tk?: number | string | undefined | null;\n\tkernelMatrix?: number | string | undefined | null;\n\tkernelUnitLength?: number | string | undefined | null;\n\tkerning?: number | string | undefined | null;\n\tkeyPoints?: number | string | undefined | null;\n\tkeySplines?: number | string | undefined | null;\n\tkeyTimes?: number | string | undefined | null;\n\tlengthAdjust?: number | string | undefined | null;\n\t'letter-spacing'?: number | string | undefined | null;\n\t'lighting-color'?: number | string | undefined | null;\n\tlimitingConeAngle?: number | string | undefined | null;\n\tlocal?: number | string | undefined | null;\n\t'marker-end'?: string | undefined | null;\n\tmarkerHeight?: number | string | undefined | null;\n\t'marker-mid'?: string | undefined | null;\n\t'marker-start'?: string | undefined | null;\n\tmarkerUnits?: number | string | undefined | null;\n\tmarkerWidth?: number | string | undefined | null;\n\tmask?: string | undefined | null;\n\tmaskContentUnits?: number | string | undefined | null;\n\tmaskUnits?: number | string | undefined | null;\n\tmathematical?: number | string | undefined | null;\n\tmode?: number | string | undefined | null;\n\tnumOctaves?: number | string | undefined | null;\n\toffset?: number | string | undefined | null;\n\topacity?: number | string | undefined | null;\n\toperator?: number | string | undefined | null;\n\torder?: number | string | undefined | null;\n\torient?: number | string | undefined | null;\n\torientation?: number | string | undefined | null;\n\torigin?: number | string | undefined | null;\n\toverflow?: number | string | undefined | null;\n\t'overline-position'?: number | string | undefined | null;\n\t'overline-thickness'?: number | string | undefined | null;\n\t'paint-order'?: number | string | undefined | null;\n\t'panose-1'?: number | string | undefined | null;\n\tpath?: string | undefined | null;\n\tpathLength?: number | string | undefined | null;\n\tpatternContentUnits?: string | undefined | null;\n\tpatternTransform?: number | string | undefined | null;\n\tpatternUnits?: string | undefined | null;\n\t'pointer-events'?: number | string | undefined | null;\n\tpoints?: string | undefined | null;\n\tpointsAtX?: number | string | undefined | null;\n\tpointsAtY?: number | string | undefined | null;\n\tpointsAtZ?: number | string | undefined | null;\n\tpreserveAlpha?: number | string | undefined | null;\n\tpreserveAspectRatio?: string | undefined | null;\n\tprimitiveUnits?: number | string | undefined | null;\n\tr?: number | string | undefined | null;\n\tradius?: number | string | undefined | null;\n\trefX?: number | string | undefined | null;\n\trefY?: number | string | undefined | null;\n\t'rendering-intent'?: number | string | undefined | null;\n\trepeatCount?: number | string | undefined | null;\n\trepeatDur?: number | string | undefined | null;\n\trequiredExtensions?: number | string | undefined | null;\n\trequiredFeatures?: number | string | undefined | null;\n\trestart?: number | string | undefined | null;\n\tresult?: string | undefined | null;\n\trotate?: number | string | undefined | null;\n\trx?: number | string | undefined | null;\n\try?: number | string | undefined | null;\n\tscale?: number | string | undefined | null;\n\tseed?: number | string | undefined | null;\n\t'shape-rendering'?: number | string | undefined | null;\n\tslope?: number | string | undefined | null;\n\tspacing?: number | string | undefined | null;\n\tspecularConstant?: number | string | undefined | null;\n\tspecularExponent?: number | string | undefined | null;\n\tspeed?: number | string | undefined | null;\n\tspreadMethod?: string | undefined | null;\n\tstartOffset?: number | string | undefined | null;\n\tstdDeviation?: number | string | undefined | null;\n\tstemh?: number | string | undefined | null;\n\tstemv?: number | string | undefined | null;\n\tstitchTiles?: number | string | undefined | null;\n\t'stop-color'?: string | undefined | null;\n\t'stop-opacity'?: number | string | undefined | null;\n\t'strikethrough-position'?: number | string | undefined | null;\n\t'strikethrough-thickness'?: number | string | undefined | null;\n\tstring?: number | string | undefined | null;\n\tstroke?: string | undefined | null;\n\t'stroke-dasharray'?: string | number | undefined | null;\n\t'stroke-dashoffset'?: string | number | undefined | null;\n\t'stroke-linecap'?: 'butt' | 'round' | 'square' | 'inherit' | undefined | null;\n\t'stroke-linejoin'?: 'miter' | 'round' | 'bevel' | 'inherit' | undefined | null;\n\t'stroke-miterlimit'?: string | undefined | null;\n\t'stroke-opacity'?: number | string | undefined | null;\n\t'stroke-width'?: number | string | undefined | null;\n\tsurfaceScale?: number | string | undefined | null;\n\tsystemLanguage?: number | string | undefined | null;\n\ttableValues?: number | string | undefined | null;\n\ttargetX?: number | string | undefined | null;\n\ttargetY?: number | string | undefined | null;\n\t'text-anchor'?: string | undefined | null;\n\t'text-decoration'?: number | string | undefined | null;\n\ttextLength?: number | string | undefined | null;\n\t'text-rendering'?: number | string | undefined | null;\n\tto?: number | string | undefined | null;\n\ttransform?: string | undefined | null;\n\tu1?: number | string | undefined | null;\n\tu2?: number | string | undefined | null;\n\t'underline-position'?: number | string | undefined | null;\n\t'underline-thickness'?: number | string | undefined | null;\n\tunicode?: number | string | undefined | null;\n\t'unicode-bidi'?: number | string | undefined | null;\n\t'unicode-range'?: number | string | undefined | null;\n\t'units-per-em'?: number | string | undefined | null;\n\t'v-alphabetic'?: number | string | undefined | null;\n\tvalues?: string | undefined | null;\n\t'vector-effect'?: number | string | undefined | null;\n\tversion?: string | undefined | null;\n\t'vert-adv-y'?: number | string | undefined | null;\n\t'vert-origin-x'?: number | string | undefined | null;\n\t'vert-origin-y'?: number | string | undefined | null;\n\t'v-hanging'?: number | string | undefined | null;\n\t'v-ideographic'?: number | string | undefined | null;\n\tviewBox?: string | undefined | null;\n\tviewTarget?: number | string | undefined | null;\n\tvisibility?: number | string | undefined | null;\n\t'v-mathematical'?: number | string | undefined | null;\n\twidths?: number | string | undefined | null;\n\t'word-spacing'?: number | string | undefined | null;\n\t'writing-mode'?: number | string | undefined | null;\n\tx1?: number | string | undefined | null;\n\tx2?: number | string | undefined | null;\n\tx?: number | string | undefined | null;\n\txChannelSelector?: string | undefined | null;\n\t'x-height'?: number | string | undefined | null;\n\t'xlink:actuate'?: string | undefined | null;\n\t'xlink:arcrole'?: string | undefined | null;\n\t'xlink:href'?: string | undefined | null;\n\t'xlink:role'?: string | undefined | null;\n\t'xlink:show'?: string | undefined | null;\n\t'xlink:title'?: string | undefined | null;\n\t'xlink:type'?: string | undefined | null;\n\t'xml:base'?: string | undefined | null;\n\t'xml:lang'?: string | undefined | null;\n\txmlns?: string | undefined | null;\n\t'xmlns:xlink'?: string | undefined | null;\n\t'xml:space'?: string | undefined | null;\n\ty1?: number | string | undefined | null;\n\ty2?: number | string | undefined | null;\n\ty?: number | string | undefined | null;\n\tyChannelSelector?: string | undefined | null;\n\tz?: number | string | undefined | null;\n\tzoomAndPan?: string | undefined | null;\n}\n\nexport interface HTMLWebViewAttributes extends HTMLAttributes<HTMLElement> {\n\tallowfullscreen?: boolean | undefined | null;\n\tallowpopups?: boolean | undefined | null;\n\tautosize?: boolean | undefined | null;\n\tblinkfeatures?: string | undefined | null;\n\tdisableblinkfeatures?: string | undefined | null;\n\tdisableguestresize?: boolean | undefined | null;\n\tdisablewebsecurity?: boolean | undefined | null;\n\tguestinstance?: string | undefined | null;\n\thttpreferrer?: string | undefined | null;\n\tnodeintegration?: boolean | undefined | null;\n\tpartition?: string | undefined | null;\n\tplugins?: boolean | undefined | null;\n\tpreload?: string | undefined | null;\n\tsrc?: string | undefined | null;\n\tuseragent?: string | undefined | null;\n\twebpreferences?: string | undefined | null;\n}\n\n//\n// DOM Elements\n// ----------------------------------------------------------------------\n\nexport interface SvelteHTMLElements {\n\ta: HTMLAnchorAttributes;\n\tabbr: HTMLAttributes<HTMLElement>;\n\taddress: HTMLAttributes<HTMLElement>;\n\tarea: HTMLAreaAttributes;\n\tarticle: HTMLAttributes<HTMLElement>;\n\taside: HTMLAttributes<HTMLElement>;\n\taudio: HTMLAudioAttributes;\n\tb: HTMLAttributes<HTMLElement>;\n\tbase: HTMLBaseAttributes;\n\tbdi: HTMLAttributes<HTMLElement>;\n\tbdo: HTMLAttributes<HTMLElement>;\n\tbig: HTMLAttributes<HTMLElement>;\n\tblockquote: HTMLBlockquoteAttributes;\n\tbody: HTMLAttributes<HTMLBodyElement>;\n\tbr: HTMLAttributes<HTMLBRElement>;\n\tbutton: HTMLButtonAttributes;\n\tcanvas: HTMLCanvasAttributes;\n\tcaption: HTMLAttributes<HTMLElement>;\n\tcite: HTMLAttributes<HTMLElement>;\n\tcode: HTMLAttributes<HTMLElement>;\n\tcol: HTMLColAttributes;\n\tcolgroup: HTMLColgroupAttributes;\n\tdata: HTMLDataAttributes;\n\tdatalist: HTMLAttributes<HTMLDataListElement>;\n\tdd: HTMLAttributes<HTMLElement>;\n\tdel: HTMLDelAttributes;\n\tdetails: HTMLDetailsAttributes;\n\tdfn: HTMLAttributes<HTMLElement>;\n\tdialog: HTMLDialogAttributes;\n\tdiv: HTMLAttributes<HTMLDivElement>;\n\tdl: HTMLAttributes<HTMLDListElement>;\n\tdt: HTMLAttributes<HTMLElement>;\n\tem: HTMLAttributes<HTMLElement>;\n\tembed: HTMLEmbedAttributes;\n\tfieldset: HTMLFieldsetAttributes;\n\tfigcaption: HTMLAttributes<HTMLElement>;\n\tfigure: HTMLAttributes<HTMLElement>;\n\tfooter: HTMLAttributes<HTMLElement>;\n\tform: HTMLFormAttributes;\n\th1: HTMLAttributes<HTMLHeadingElement>;\n\th2: HTMLAttributes<HTMLHeadingElement>;\n\th3: HTMLAttributes<HTMLHeadingElement>;\n\th4: HTMLAttributes<HTMLHeadingElement>;\n\th5: HTMLAttributes<HTMLHeadingElement>;\n\th6: HTMLAttributes<HTMLHeadingElement>;\n\thead: HTMLAttributes<HTMLElement>;\n\theader: HTMLAttributes<HTMLElement>;\n\thgroup: HTMLAttributes<HTMLElement>;\n\thr: HTMLAttributes<HTMLHRElement>;\n\thtml: HTMLHtmlAttributes;\n\ti: HTMLAttributes<HTMLElement>;\n\tiframe: HTMLIframeAttributes;\n\timg: HTMLImgAttributes;\n\tinput: HTMLInputAttributes;\n\tins: HTMLInsAttributes;\n\tkbd: HTMLAttributes<HTMLElement>;\n\tkeygen: HTMLKeygenAttributes;\n\tlabel: HTMLLabelAttributes;\n\tlegend: HTMLAttributes<HTMLLegendElement>;\n\tli: HTMLLiAttributes;\n\tlink: HTMLLinkAttributes;\n\tmain: HTMLAttributes<HTMLElement>;\n\tmap: HTMLMapAttributes;\n\tmark: HTMLAttributes<HTMLElement>;\n\tmenu: HTMLMenuAttributes;\n\tmenuitem: HTMLAttributes<HTMLElement>;\n\tmeta: HTMLMetaAttributes;\n\tmeter: HTMLMeterAttributes;\n\tnav: HTMLAttributes<HTMLElement>;\n\tnoscript: HTMLAttributes<HTMLElement>;\n\tobject: HTMLObjectAttributes;\n\tol: HTMLOlAttributes;\n\toptgroup: HTMLOptgroupAttributes;\n\toption: HTMLOptionAttributes;\n\toutput: HTMLOutputAttributes;\n\tp: HTMLAttributes<HTMLParagraphElement>;\n\tparam: HTMLParamAttributes;\n\tpicture: HTMLAttributes<HTMLElement>;\n\tpre: HTMLAttributes<HTMLPreElement>;\n\tprogress: HTMLProgressAttributes;\n\tq: HTMLQuoteAttributes;\n\trp: HTMLAttributes<HTMLElement>;\n\trt: HTMLAttributes<HTMLElement>;\n\truby: HTMLAttributes<HTMLElement>;\n\ts: HTMLAttributes<HTMLElement>;\n\tsamp: HTMLAttributes<HTMLElement>;\n\tslot: HTMLSlotAttributes;\n\tscript: HTMLScriptAttributes;\n\tsection: HTMLAttributes<HTMLElement>;\n\tselect: HTMLSelectAttributes;\n\tsmall: HTMLAttributes<HTMLElement>;\n\tsource: HTMLSourceAttributes;\n\tspan: HTMLAttributes<HTMLSpanElement>;\n\tstrong: HTMLAttributes<HTMLElement>;\n\tstyle: HTMLStyleAttributes;\n\tsub: HTMLAttributes<HTMLElement>;\n\tsummary: HTMLAttributes<HTMLElement>;\n\tsup: HTMLAttributes<HTMLElement>;\n\ttable: HTMLTableAttributes;\n\ttemplate: HTMLAttributes<HTMLTemplateElement>;\n\ttbody: HTMLAttributes<HTMLTableSectionElement>;\n\ttd: HTMLTdAttributes;\n\ttextarea: HTMLTextareaAttributes;\n\ttfoot: HTMLAttributes<HTMLTableSectionElement>;\n\tth: HTMLThAttributes;\n\tthead: HTMLAttributes<HTMLTableSectionElement>;\n\ttime: HTMLTimeAttributes;\n\ttitle: HTMLAttributes<HTMLTitleElement>;\n\ttr: HTMLAttributes<HTMLTableRowElement>;\n\ttrack: HTMLTrackAttributes;\n\tu: HTMLAttributes<HTMLElement>;\n\tul: HTMLAttributes<HTMLUListElement>;\n\tvar: HTMLAttributes<HTMLElement>;\n\tvideo: HTMLVideoAttributes;\n\twbr: HTMLAttributes<HTMLElement>;\n\twebview: HTMLWebViewAttributes;\n\t// SVG\n\tsvg: SVGAttributes<SVGSVGElement>;\n\n\tanimate: SVGAttributes<SVGAnimateElement>;\n\tanimateMotion: SVGAttributes<SVGElement>;\n\tanimateTransform: SVGAttributes<SVGAnimateTransformElement>;\n\tcircle: SVGAttributes<SVGCircleElement>;\n\tclipPath: SVGAttributes<SVGClipPathElement>;\n\tdefs: SVGAttributes<SVGDefsElement>;\n\tdesc: SVGAttributes<SVGDescElement>;\n\tellipse: SVGAttributes<SVGEllipseElement>;\n\tfeBlend: SVGAttributes<SVGFEBlendElement>;\n\tfeColorMatrix: SVGAttributes<SVGFEColorMatrixElement>;\n\tfeComponentTransfer: SVGAttributes<SVGFEComponentTransferElement>;\n\tfeComposite: SVGAttributes<SVGFECompositeElement>;\n\tfeConvolveMatrix: SVGAttributes<SVGFEConvolveMatrixElement>;\n\tfeDiffuseLighting: SVGAttributes<SVGFEDiffuseLightingElement>;\n\tfeDisplacementMap: SVGAttributes<SVGFEDisplacementMapElement>;\n\tfeDistantLight: SVGAttributes<SVGFEDistantLightElement>;\n\tfeDropShadow: SVGAttributes<SVGFEDropShadowElement>;\n\tfeFlood: SVGAttributes<SVGFEFloodElement>;\n\tfeFuncA: SVGAttributes<SVGFEFuncAElement>;\n\tfeFuncB: SVGAttributes<SVGFEFuncBElement>;\n\tfeFuncG: SVGAttributes<SVGFEFuncGElement>;\n\tfeFuncR: SVGAttributes<SVGFEFuncRElement>;\n\tfeGaussianBlur: SVGAttributes<SVGFEGaussianBlurElement>;\n\tfeImage: SVGAttributes<SVGFEImageElement>;\n\tfeMerge: SVGAttributes<SVGFEMergeElement>;\n\tfeMergeNode: SVGAttributes<SVGFEMergeNodeElement>;\n\tfeMorphology: SVGAttributes<SVGFEMorphologyElement>;\n\tfeOffset: SVGAttributes<SVGFEOffsetElement>;\n\tfePointLight: SVGAttributes<SVGFEPointLightElement>;\n\tfeSpecularLighting: SVGAttributes<SVGFESpecularLightingElement>;\n\tfeSpotLight: SVGAttributes<SVGFESpotLightElement>;\n\tfeTile: SVGAttributes<SVGFETileElement>;\n\tfeTurbulence: SVGAttributes<SVGFETurbulenceElement>;\n\tfilter: SVGAttributes<SVGFilterElement>;\n\tforeignObject: SVGAttributes<SVGForeignObjectElement>;\n\tg: SVGAttributes<SVGGElement>;\n\timage: SVGAttributes<SVGImageElement>;\n\tline: SVGAttributes<SVGLineElement>;\n\tlinearGradient: SVGAttributes<SVGLinearGradientElement>;\n\tmarker: SVGAttributes<SVGMarkerElement>;\n\tmask: SVGAttributes<SVGMaskElement>;\n\tmetadata: SVGAttributes<SVGMetadataElement>;\n\tmpath: SVGAttributes<SVGElement>;\n\tpath: SVGAttributes<SVGPathElement>;\n\tpattern: SVGAttributes<SVGPatternElement>;\n\tpolygon: SVGAttributes<SVGPolygonElement>;\n\tpolyline: SVGAttributes<SVGPolylineElement>;\n\tradialGradient: SVGAttributes<SVGRadialGradientElement>;\n\trect: SVGAttributes<SVGRectElement>;\n\tstop: SVGAttributes<SVGStopElement>;\n\tswitch: SVGAttributes<SVGSwitchElement>;\n\tsymbol: SVGAttributes<SVGSymbolElement>;\n\ttext: SVGAttributes<SVGTextElement>;\n\ttextPath: SVGAttributes<SVGTextPathElement>;\n\ttspan: SVGAttributes<SVGTSpanElement>;\n\tuse: SVGAttributes<SVGUseElement>;\n\tview: SVGAttributes<SVGViewElement>;\n\n\t// Svelte specific\n\t'svelte:window': SvelteWindowAttributes;\n\t'svelte:document': SvelteDocumentAttributes;\n\t'svelte:body': HTMLAttributes<HTMLElement>;\n\t'svelte:fragment': { slot?: string };\n\t'svelte:options': {\n\t\tcustomElement?:\n\t\t\t| string\n\t\t\t| undefined\n\t\t\t| {\n\t\t\t\t\ttag: string;\n\t\t\t\t\tshadow?: 'open' | 'none' | undefined;\n\t\t\t\t\tprops?:\n\t\t\t\t\t\t| Record<\n\t\t\t\t\t\t\t\tstring,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tattribute?: string;\n\t\t\t\t\t\t\t\t\treflect?: boolean;\n\t\t\t\t\t\t\t\t\ttype?: 'String' | 'Boolean' | 'Number' | 'Array' | 'Object';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  >\n\t\t\t\t\t\t| undefined;\n\t\t\t\t\textend?: (\n\t\t\t\t\t\tsvelteCustomElementClass: new () => HTMLElement\n\t\t\t\t\t) => new () => HTMLElement | undefined;\n\t\t\t  };\n\t\timmutable?: boolean | undefined;\n\t\taccessors?: boolean | undefined;\n\t\tnamespace?: string | undefined;\n\t\t[name: string]: any;\n\t};\n\t'svelte:head': { [name: string]: any };\n\n\t[name: string]: { [name: string]: any };\n}\n",
  "/node_modules/svelte/index.d.ts": "import './types/index.js';",
  "/node_modules/svelte/motion.d.ts": "import './types/index.js';",
  "/node_modules/svelte/store.d.ts": "import './types/index.js';",
  "/node_modules/svelte/transition.d.ts": "import './types/index.js';",
  "/node_modules/svelte/types/index.d.ts": "declare module 'svelte' {\n\texport interface ComponentConstructorOptions<\n\t\tProps extends Record<string, any> = Record<string, any>\n\t> {\n\t\ttarget: Element | Document | ShadowRoot;\n\t\tanchor?: Element;\n\t\tprops?: Props;\n\t\tcontext?: Map<any, any>;\n\t\thydrate?: boolean;\n\t\tintro?: boolean;\n\t\t$$inline?: boolean;\n\t}\n\n\t/**\n\t * Convenience type to get the events the given component expects. Example:\n\t * ```html\n\t * <script lang=\"ts\">\n\t *    import type { ComponentEvents } from 'svelte';\n\t *    import Component from './Component.svelte';\n\t *\n\t *    function handleCloseEvent(event: ComponentEvents<Component>['close']) {\n\t *       console.log(event.detail);\n\t *    }\n\t * </script>\n\t *\n\t * <Component on:close={handleCloseEvent} />\n\t * ```\n\t */\n\texport type ComponentEvents<Component extends SvelteComponent_1> =\n\t\tComponent extends SvelteComponent<any, infer Events> ? Events : never;\n\n\t/**\n\t * Convenience type to get the props the given component expects. Example:\n\t * ```html\n\t * <script lang=\"ts\">\n\t * \timport type { ComponentProps } from 'svelte';\n\t * \timport Component from './Component.svelte';\n\t *\n\t * \tconst props: ComponentProps<Component> = { foo: 'bar' }; // Errors if these aren't the correct props\n\t * </script>\n\t * ```\n\t */\n\texport type ComponentProps<Component extends SvelteComponent_1> =\n\t\tComponent extends SvelteComponent<infer Props> ? Props : never;\n\n\t/**\n\t * Convenience type to get the type of a Svelte component. Useful for example in combination with\n\t * dynamic components using `<svelte:component>`.\n\t *\n\t * Example:\n\t * ```html\n\t * <script lang=\"ts\">\n\t * \timport type { ComponentType, SvelteComponent } from 'svelte';\n\t * \timport Component1 from './Component1.svelte';\n\t * \timport Component2 from './Component2.svelte';\n\t *\n\t * \tconst component: ComponentType = someLogic() ? Component1 : Component2;\n\t * \tconst componentOfCertainSubType: ComponentType<SvelteComponent<{ needsThisProp: string }>> = someLogic() ? Component1 : Component2;\n\t * </script>\n\t *\n\t * <svelte:component this={component} />\n\t * <svelte:component this={componentOfCertainSubType} needsThisProp=\"hello\" />\n\t * ```\n\t */\n\texport type ComponentType<Component extends SvelteComponent = SvelteComponent> = (new (\n\t\toptions: ComponentConstructorOptions<\n\t\t\tComponent extends SvelteComponent<infer Props> ? Props : Record<string, any>\n\t\t>\n\t) => Component) & {\n\t\t/** The custom element version of the component. Only present if compiled with the `customElement` compiler option */\n\t\telement?: typeof HTMLElement;\n\t};\n\n\tinterface DispatchOptions {\n\t\tcancelable?: boolean;\n\t}\n\n\tinterface EventDispatcher<EventMap extends Record<string, any>> {\n\t\t// Implementation notes:\n\t\t// - undefined extends X instead of X extends undefined makes this work better with both strict and nonstrict mode\n\t\t// - | null | undefined is added for convenience, as they are equivalent for the custom event constructor (both result in a null detail)\n\t\t<Type extends keyof EventMap>(\n\t\t\t...args: null extends EventMap[Type]\n\t\t\t\t? [type: Type, parameter?: EventMap[Type] | null | undefined, options?: DispatchOptions]\n\t\t\t\t: undefined extends EventMap[Type]\n\t\t\t\t? [type: Type, parameter?: EventMap[Type] | null | undefined, options?: DispatchOptions]\n\t\t\t\t: [type: Type, parameter: EventMap[Type], options?: DispatchOptions]\n\t\t): boolean;\n\t}\n\t/**\n\t * Base class for Svelte components. Used when dev=false.\n\t *\n\t * \n\t */\n\tclass SvelteComponent_1<Props extends Record<string, any> = any, Events extends Record<string, any> = any> {\n\t\t/**\n\t\t * ### PRIVATE API\n\t\t *\n\t\t * Do not use, may change at any time\n\t\t *\n\t\t * */\n\t\t$$: any;\n\t\t/**\n\t\t * ### PRIVATE API\n\t\t *\n\t\t * Do not use, may change at any time\n\t\t *\n\t\t * */\n\t\t$$set: any;\n\t\t\n\t\t$destroy(): void;\n\t\t\n\t\t$on<K extends Extract<keyof Events, string>>(type: K, callback: ((e: Events[K]) => void) | null | undefined): () => void;\n\t\t\n\t\t$set(props: Partial<Props>): void;\n\t}\n\t/**\n\t * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n\t *\n\t * Can be used to create strongly typed Svelte components.\n\t *\n\t * #### Example:\n\t *\n\t * You have component library on npm called `component-library`, from which\n\t * you export a component called `MyComponent`. For Svelte+TypeScript users,\n\t * you want to provide typings. Therefore you create a `index.d.ts`:\n\t * ```ts\n\t * import { SvelteComponent } from \"svelte\";\n\t * export class MyComponent extends SvelteComponent<{foo: string}> {}\n\t * ```\n\t * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n\t * to provide intellisense and to use the component like this in a Svelte file\n\t * with TypeScript:\n\t * ```svelte\n\t * <script lang=\"ts\">\n\t * \timport { MyComponent } from \"component-library\";\n\t * </script>\n\t * <MyComponent foo={'bar'} />\n\t * ```\n\t * \n\t */\n\texport class SvelteComponent<Props extends Record<string, any> = any, Events extends Record<string, any> = any, Slots extends Record<string, any> = any> extends SvelteComponent_1<Props, Events> { [prop: string]: any;\n\t\t\n\t\tconstructor(options: ComponentConstructorOptions<Props>);\n\t\t/**\n\t\t * For type checking capabilities only.\n\t\t * Does not exist at runtime.\n\t\t * ### DO NOT USE!\n\t\t *\n\t\t * */\n\t\t$$prop_def: Props;\n\t\t/**\n\t\t * For type checking capabilities only.\n\t\t * Does not exist at runtime.\n\t\t * ### DO NOT USE!\n\t\t *\n\t\t * */\n\t\t$$events_def: Events;\n\t\t/**\n\t\t * For type checking capabilities only.\n\t\t * Does not exist at runtime.\n\t\t * ### DO NOT USE!\n\t\t *\n\t\t * */\n\t\t$$slot_def: Slots;\n\t\t\n\t\t$capture_state(): void;\n\t\t\n\t\t$inject_state(): void;\n\t}\n\t/**\n\t * @deprecated Use `SvelteComponent` instead. See PR for more information: https://github.com/sveltejs/svelte/pull/8512\n\t * \n\t */\n\texport class SvelteComponentTyped<Props extends Record<string, any> = any, Events extends Record<string, any> = any, Slots extends Record<string, any> = any> extends SvelteComponent<Props, Events, Slots> {\n\t}\n\t/**\n\t * Schedules a callback to run immediately before the component is updated after any state change.\n\t *\n\t * The first time the callback runs will be before the initial `onMount`\n\t *\n\t * https://svelte.dev/docs/svelte#beforeupdate\n\t * */\n\texport function beforeUpdate(fn: () => any): void;\n\t/**\n\t * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n\t * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n\t * it can be called from an external module).\n\t *\n\t * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n\t *\n\t * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n\t *\n\t * https://svelte.dev/docs/svelte#onmount\n\t * */\n\texport function onMount<T>(fn: () => NotFunction<T> | Promise<NotFunction<T>> | (() => any)): void;\n\t/**\n\t * Schedules a callback to run immediately after the component has been updated.\n\t *\n\t * The first time the callback runs will be after the initial `onMount`\n\t *\n\t * https://svelte.dev/docs/svelte#afterupdate\n\t * */\n\texport function afterUpdate(fn: () => any): void;\n\t/**\n\t * Schedules a callback to run immediately before the component is unmounted.\n\t *\n\t * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n\t * only one that runs inside a server-side component.\n\t *\n\t * https://svelte.dev/docs/svelte#ondestroy\n\t * */\n\texport function onDestroy(fn: () => any): void;\n\t/**\n\t * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n\t * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n\t *\n\t * Component events created with `createEventDispatcher` create a\n\t * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n\t * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n\t * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n\t * property and can contain any type of data.\n\t *\n\t * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n\t * ```ts\n\t * const dispatch = createEventDispatcher<{\n\t *  loaded: never; // does not take a detail argument\n\t *  change: string; // takes a detail argument of type string, which is required\n\t *  optional: number | null; // takes an optional detail argument of type number\n\t * }>();\n\t * ```\n\t *\n\t * https://svelte.dev/docs/svelte#createeventdispatcher\n\t * */\n\texport function createEventDispatcher<EventMap extends Record<string, any> = any>(): EventDispatcher<EventMap>;\n\t/**\n\t * Associates an arbitrary `context` object with the current component and the specified `key`\n\t * and returns that object. The context is then available to children of the component\n\t * (including slotted content) with `getContext`.\n\t *\n\t * Like lifecycle functions, this must be called during component initialisation.\n\t *\n\t * https://svelte.dev/docs/svelte#setcontext\n\t * */\n\texport function setContext<T>(key: any, context: T): T;\n\t/**\n\t * Retrieves the context that belongs to the closest parent component with the specified `key`.\n\t * Must be called during component initialisation.\n\t *\n\t * https://svelte.dev/docs/svelte#getcontext\n\t * */\n\texport function getContext<T>(key: any): T;\n\t/**\n\t * Retrieves the whole context map that belongs to the closest parent component.\n\t * Must be called during component initialisation. Useful, for example, if you\n\t * programmatically create a component and want to pass the existing context to it.\n\t *\n\t * https://svelte.dev/docs/svelte#getallcontexts\n\t * */\n\texport function getAllContexts<T extends Map<any, any> = Map<any, any>>(): T;\n\t/**\n\t * Checks whether a given `key` has been set in the context of a parent component.\n\t * Must be called during component initialisation.\n\t *\n\t * https://svelte.dev/docs/svelte#hascontext\n\t * */\n\texport function hasContext(key: any): boolean;\n\texport function tick(): Promise<void>;\n\t/**\n\t * Anything except a function\n\t */\n\ttype NotFunction<T> = T extends Function ? never : T;\n}\n\ndeclare module 'svelte/compiler' {\n\timport type { AssignmentExpression, Node, Program } from 'estree';\n\timport type { SourceMap } from 'magic-string';\n\texport { walk } from 'estree-walker';\n\tinterface BaseNode {\n\t\tstart: number;\n\t\tend: number;\n\t\ttype: string;\n\t\tchildren?: TemplateNode[];\n\t\t[prop_name: string]: any;\n\t}\n\n\tinterface Text extends BaseNode {\n\t\ttype: 'Text';\n\t\tdata: string;\n\t}\n\n\tinterface MustacheTag extends BaseNode {\n\t\ttype: 'MustacheTag' | 'RawMustacheTag';\n\t\texpression: Node;\n\t}\n\n\tinterface Comment extends BaseNode {\n\t\ttype: 'Comment';\n\t\tdata: string;\n\t\tignores: string[];\n\t}\n\n\tinterface ConstTag extends BaseNode {\n\t\ttype: 'ConstTag';\n\t\texpression: AssignmentExpression;\n\t}\n\n\tinterface DebugTag extends BaseNode {\n\t\ttype: 'DebugTag';\n\t\tidentifiers: Node[];\n\t}\n\n\ttype DirectiveType =\n\t\t| 'Action'\n\t\t| 'Animation'\n\t\t| 'Binding'\n\t\t| 'Class'\n\t\t| 'StyleDirective'\n\t\t| 'EventHandler'\n\t\t| 'Let'\n\t\t| 'Ref'\n\t\t| 'Transition';\n\n\tinterface BaseDirective extends BaseNode {\n\t\ttype: DirectiveType;\n\t\tname: string;\n\t}\n\n\tinterface BaseExpressionDirective extends BaseDirective {\n\t\ttype: DirectiveType;\n\t\texpression: null | Node;\n\t\tname: string;\n\t\tmodifiers: string[];\n\t}\n\n\tinterface Element extends BaseNode {\n\t\ttype:\n\t\t\t| 'InlineComponent'\n\t\t\t| 'SlotTemplate'\n\t\t\t| 'Title'\n\t\t\t| 'Slot'\n\t\t\t| 'Element'\n\t\t\t| 'Head'\n\t\t\t| 'Options'\n\t\t\t| 'Window'\n\t\t\t| 'Document'\n\t\t\t| 'Body';\n\t\tattributes: Array<BaseDirective | Attribute | SpreadAttribute>;\n\t\tname: string;\n\t}\n\n\tinterface Attribute extends BaseNode {\n\t\ttype: 'Attribute';\n\t\tname: string;\n\t\tvalue: any[];\n\t}\n\n\tinterface SpreadAttribute extends BaseNode {\n\t\ttype: 'Spread';\n\t\texpression: Node;\n\t}\n\n\tinterface Transition extends BaseExpressionDirective {\n\t\ttype: 'Transition';\n\t\tintro: boolean;\n\t\toutro: boolean;\n\t}\n\n\ttype Directive = BaseDirective | BaseExpressionDirective | Transition;\n\n\ttype TemplateNode =\n\t\t| Text\n\t\t| ConstTag\n\t\t| DebugTag\n\t\t| MustacheTag\n\t\t| BaseNode\n\t\t| Element\n\t\t| Attribute\n\t\t| SpreadAttribute\n\t\t| Directive\n\t\t| Transition\n\t\t| Comment;\n\n\tinterface Script extends BaseNode {\n\t\ttype: 'Script';\n\t\tcontext: string;\n\t\tcontent: Program;\n\t}\n\n\tinterface Style extends BaseNode {\n\t\ttype: 'Style';\n\t\tattributes: any[]; // TODO\n\t\tchildren: any[]; // TODO add CSS node types\n\t\tcontent: {\n\t\t\tstart: number;\n\t\t\tend: number;\n\t\t\tstyles: string;\n\t\t};\n\t}\n\n\tinterface Ast {\n\t\thtml: TemplateNode;\n\t\tcss?: Style;\n\t\tinstance?: Script;\n\t\tmodule?: Script;\n\t}\n\n\tinterface Warning {\n\t\tstart?: { line: number; column: number; pos?: number };\n\t\tend?: { line: number; column: number };\n\t\tpos?: number;\n\t\tcode: string;\n\t\tmessage: string;\n\t\tfilename?: string;\n\t\tframe?: string;\n\t\ttoString: () => string;\n\t}\n\n\texport type EnableSourcemap = boolean | { js: boolean; css: boolean };\n\n\texport type CssHashGetter = (args: {\n\t\tname: string;\n\t\tfilename: string | undefined;\n\t\tcss: string;\n\t\thash: (input: string) => string;\n\t}) => string;\n\n\texport interface CompileOptions {\n\t\t/**\n\t\t * Sets the name of the resulting JavaScript class (though the compiler will rename it if it would otherwise conflict with other variables in scope).\n\t\t * It will normally be inferred from `filename`\n\t\t *\n\t\t * @default 'Component'\n\t\t */\n\t\tname?: string;\n\n\t\t/**\n\t\t * Used for debugging hints and sourcemaps. Your bundler plugin will set it automatically.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tfilename?: string;\n\n\t\t/**\n\t\t * If `\"dom\"`, Svelte emits a JavaScript class for mounting to the DOM.\n\t\t * If `\"ssr\"`, Svelte emits an object with a `render` method suitable for server-side rendering.\n\t\t * If `false`, no JavaScript or CSS is returned; just metadata.\n\t\t *\n\t\t * @default 'dom'\n\t\t */\n\t\tgenerate?: 'dom' | 'ssr' | false;\n\n\t\t/**\n\t\t * If `\"throw\"`, Svelte throws when a compilation error occurred.\n\t\t * If `\"warn\"`, Svelte will treat errors as warnings and add them to the warning report.\n\t\t *\n\t\t * @default 'throw'\n\t\t */\n\t\terrorMode?: 'throw' | 'warn';\n\n\t\t/**\n\t\t * If `\"strict\"`, Svelte returns a variables report with only variables that are not globals nor internals.\n\t\t * If `\"full\"`, Svelte returns a variables report with all detected variables.\n\t\t * If `false`, no variables report is returned.\n\t\t *\n\t\t * @default 'strict'\n\t\t */\n\t\tvarsReport?: 'full' | 'strict' | false;\n\n\t\t/**\n\t\t * An initial sourcemap that will be merged into the final output sourcemap.\n\t\t * This is usually the preprocessor sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tsourcemap?: object | string;\n\n\t\t/**\n\t\t * If `true`, Svelte generate sourcemaps for components.\n\t\t * Use an object with `js` or `css` for more granular control of sourcemap generation.\n\t\t *\n\t\t * @default true\n\t\t */\n\t\tenableSourcemap?: EnableSourcemap;\n\n\t\t/**\n\t\t * Used for your JavaScript sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\toutputFilename?: string;\n\n\t\t/**\n\t\t * Used for your CSS sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tcssOutputFilename?: string;\n\n\t\t/**\n\t\t * The location of the `svelte` package.\n\t\t * Any imports from `svelte` or `svelte/[module]` will be modified accordingly.\n\t\t *\n\t\t * @default 'svelte'\n\t\t */\n\t\tsveltePath?: string;\n\n\t\t/**\n\t\t * If `true`, causes extra code to be added to components that will perform runtime checks and provide debugging information during development.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tdev?: boolean;\n\n\t\t/**\n\t\t * If `true`, getters and setters will be created for the component's props. If `false`, they will only be created for readonly exported values (i.e. those declared with `const`, `class` and `function`). If compiling with `customElement: true` this option defaults to `true`.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\taccessors?: boolean;\n\n\t\t/**\n\t\t * If `true`, tells the compiler that you promise not to mutate any objects.\n\t\t * This allows it to be less conservative about checking whether values have changed.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\timmutable?: boolean;\n\n\t\t/**\n\t\t * If `true` when generating DOM code, enables the `hydrate: true` runtime option, which allows a component to upgrade existing DOM rather than creating new DOM from scratch.\n\t\t * When generating SSR code, this adds markers to `<head>` elements so that hydration knows which to replace.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\thydratable?: boolean;\n\n\t\t/**\n\t\t * If `true`, generates code that will work in IE9 and IE10, which don't support things like `element.dataset`.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tlegacy?: boolean;\n\n\t\t/**\n\t\t * If `true`, tells the compiler to generate a custom element constructor instead of a regular Svelte component.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tcustomElement?: boolean;\n\n\t\t/**\n\t\t * A `string` that tells Svelte what tag name to register the custom element with.\n\t\t * It must be a lowercase alphanumeric string with at least one hyphen, e.g. `\"my-element\"`.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\ttag?: string;\n\n\t\t/**\n\t\t * - `'injected'` (formerly `true`), styles will be included in the JavaScript class and injected at runtime for the components actually rendered.\n\t\t * - `'external'` (formerly `false`), the CSS will be returned in the `css` field of the compilation result. Most Svelte bundler plugins will set this to `'external'` and use the CSS that is statically generated for better performance, as it will result in smaller JavaScript bundles and the output can be served as cacheable `.css` files.\n\t\t * - `'none'`, styles are completely avoided and no CSS output is generated.\n\t\t */\n\t\tcss?: 'injected' | 'external' | 'none' | boolean;\n\n\t\t/**\n\t\t * A `number` that tells Svelte to break the loop if it blocks the thread for more than `loopGuardTimeout` ms.\n\t\t * This is useful to prevent infinite loops.\n\t\t * **Only available when `dev: true`**.\n\t\t *\n\t\t * @default 0\n\t\t */\n\t\tloopGuardTimeout?: number;\n\n\t\t/**\n\t\t * The namespace of the element; e.g., `\"mathml\"`, `\"svg\"`, `\"foreign\"`.\n\t\t *\n\t\t * @default 'html'\n\t\t */\n\t\tnamespace?: string;\n\n\t\t/**\n\t\t * A function that takes a `{ hash, css, name, filename }` argument and returns the string that is used as a classname for scoped CSS.\n\t\t * It defaults to returning `svelte-${hash(css)}`.\n\t\t *\n\t\t * @default undefined\n\t\t */\n\t\tcssHash?: CssHashGetter;\n\n\t\t/**\n\t\t * If `true`, your HTML comments will be preserved during server-side rendering. By default, they are stripped out.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tpreserveComments?: boolean;\n\n\t\t/**\n\t\t *  If `true`, whitespace inside and between elements is kept as you typed it, rather than removed or collapsed to a single space where possible.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tpreserveWhitespace?: boolean;\n\t\t/**\n\t\t *  If `true`, exposes the Svelte major version on the global `window` object in the browser.\n\t\t *\n\t\t * @default true\n\t\t */\n\t\tdiscloseVersion?: boolean;\n\t}\n\n\tinterface ParserOptions {\n\t\tfilename?: string;\n\t\tcustomElement?: boolean;\n\t\tcss?: 'injected' | 'external' | 'none' | boolean;\n\t}\n\n\tinterface Var {\n\t\tname: string;\n\t\t/** the `bar` in `export { foo as bar }` or `export let bar` */\n\t\texport_name?: string;\n\t\t/** true if assigned a boolean default value (`export let foo = true`) */\n\t\tis_boolean?: boolean;\n\t\tinjected?: boolean;\n\t\tmodule?: boolean;\n\t\tmutated?: boolean;\n\t\treassigned?: boolean;\n\t\treferenced?: boolean; // referenced from template scope\n\t\treferenced_from_script?: boolean; // referenced from script\n\t\twritable?: boolean;\n\n\t\t// used internally, but not exposed\n\t\tglobal?: boolean;\n\t\tinternal?: boolean; // event handlers, bindings\n\t\tinitialised?: boolean;\n\t\thoistable?: boolean;\n\t\tsubscribable?: boolean;\n\t\tis_reactive_dependency?: boolean;\n\t\timported?: boolean;\n\t}\n\n\tinterface CssResult {\n\t\tcode: string;\n\t\tmap: SourceMap;\n\t}\n\n\t/** The returned shape of `compile` from `svelte/compiler` */\n\texport interface CompileResult {\n\t\t/** The resulting JavaScript code from compling the component */\n\t\tjs: {\n\t\t\t/** Code as a string */\n\t\t\tcode: string;\n\t\t\t/** A source map */\n\t\t\tmap: any;\n\t\t};\n\t\t/** The resulting CSS code from compling the component */\n\t\tcss: CssResult;\n\t\t/** The abstract syntax tree representing the structure of the component */\n\t\tast: Ast;\n\t\t/**\n\t\t * An array of warning objects that were generated during compilation. Each warning has several properties:\n\t\t * - code is a string identifying the category of warning\n\t\t * - message describes the issue in human-readable terms\n\t\t * - start and end, if the warning relates to a specific location, are objects with line, column and character properties\n\t\t * - frame, if applicable, is a string highlighting the offending code with line numbers\n\t\t * */\n\t\twarnings: Warning[];\n\t\t/** An array of the component's declarations used by tooling in the ecosystem (like our ESLint plugin) to infer more information */\n\t\tvars: Var[];\n\t\t/** An object used by the Svelte developer team for diagnosing the compiler. Avoid relying on it to stay the same! */\n\t\tstats: {\n\t\t\ttimings: {\n\t\t\t\ttotal: number;\n\t\t\t};\n\t\t};\n\t}\n\t/**\n\t * The result of a preprocessor run. If the preprocessor does not return a result, it is assumed that the code is unchanged.\n\t */\n\texport interface Processed {\n\t\t/**\n\t\t * The new code\n\t\t */\n\t\tcode: string;\n\t\t/**\n\t\t * A source map mapping back to the original code\n\t\t */\n\t\tmap?: string | object; // we are opaque with the type here to avoid dependency on the remapping module for our public types.\n\t\t/**\n\t\t * A list of additional files to watch for changes\n\t\t */\n\t\tdependencies?: string[];\n\t\t/**\n\t\t * Only for script/style preprocessors: The updated attributes to set on the tag. If undefined, attributes stay unchanged.\n\t\t */\n\t\tattributes?: Record<string, string | boolean>;\n\t\ttoString?: () => string;\n\t}\n\n\t/**\n\t * A markup preprocessor that takes a string of code and returns a processed version.\n\t */\n\texport type MarkupPreprocessor = (options: {\n\t\t/**\n\t\t * The whole Svelte file content\n\t\t */\n\t\tcontent: string;\n\t\t/**\n\t\t * The filename of the Svelte file\n\t\t */\n\t\tfilename?: string;\n\t}) => Processed | void | Promise<Processed | void>;\n\n\t/**\n\t * A script/style preprocessor that takes a string of code and returns a processed version.\n\t */\n\texport type Preprocessor = (options: {\n\t\t/**\n\t\t * The script/style tag content\n\t\t */\n\t\tcontent: string;\n\t\t/**\n\t\t * The attributes on the script/style tag\n\t\t */\n\t\tattributes: Record<string, string | boolean>;\n\t\t/**\n\t\t * The whole Svelte file content\n\t\t */\n\t\tmarkup: string;\n\t\t/**\n\t\t * The filename of the Svelte file\n\t\t */\n\t\tfilename?: string;\n\t}) => Processed | void | Promise<Processed | void>;\n\n\t/**\n\t * A preprocessor group is a set of preprocessors that are applied to a Svelte file.\n\t */\n\texport interface PreprocessorGroup {\n\t\t/** Name of the preprocessor. Will be a required option in the next major version */\n\t\tname?: string;\n\t\tmarkup?: MarkupPreprocessor;\n\t\tstyle?: Preprocessor;\n\t\tscript?: Preprocessor;\n\t}\n\n\t/**\n\t * Utility type to extract the type of a preprocessor from a preprocessor group\n\t */\n\texport interface SveltePreprocessor<\n\t\tPreprocessorType extends keyof PreprocessorGroup,\n\t\tOptions = any\n\t> {\n\t\t(options?: Options): Required<Pick<PreprocessorGroup, PreprocessorType>>;\n\t}\n\t/**\n\t * `compile` takes your component source code, and turns it into a JavaScript module that exports a class.\n\t *\n\t * https://svelte.dev/docs/svelte-compiler#svelte-compile\n\t * */\n\texport function compile(source: string, options?: CompileOptions): CompileResult;\n\t/**\n\t * The parse function parses a component, returning only its abstract syntax tree.\n\t *\n\t * https://svelte.dev/docs/svelte-compiler#svelte-parse\n\t * */\n\texport function parse(template: string, options?: ParserOptions): Ast;\n\t/**\n\t * The preprocess function provides convenient hooks for arbitrarily transforming component source code.\n\t * For example, it can be used to convert a <style lang=\"sass\"> block into vanilla CSS.\n\t *\n\t * https://svelte.dev/docs/svelte-compiler#svelte-preprocess\n\t * */\n\texport function preprocess(source: string, preprocessor: PreprocessorGroup | PreprocessorGroup[], options?: {\n\t\tfilename?: string | undefined;\n\t} | undefined): Promise<Processed>;\n\t/**\n\t * The current version, as set in package.json.\n\t *\n\t * https://svelte.dev/docs/svelte-compiler#svelte-version\n\t * */\n\texport const VERSION: string;\n}\n\ndeclare module 'svelte/types/compiler/preprocess' {\n\t/**\n\t * The result of a preprocessor run. If the preprocessor does not return a result, it is assumed that the code is unchanged.\n\t */\n\texport interface Processed {\n\t\t/**\n\t\t * The new code\n\t\t */\n\t\tcode: string;\n\t\t/**\n\t\t * A source map mapping back to the original code\n\t\t */\n\t\tmap?: string | object; // we are opaque with the type here to avoid dependency on the remapping module for our public types.\n\t\t/**\n\t\t * A list of additional files to watch for changes\n\t\t */\n\t\tdependencies?: string[];\n\t\t/**\n\t\t * Only for script/style preprocessors: The updated attributes to set on the tag. If undefined, attributes stay unchanged.\n\t\t */\n\t\tattributes?: Record<string, string | boolean>;\n\t\ttoString?: () => string;\n\t}\n\n\t/**\n\t * A markup preprocessor that takes a string of code and returns a processed version.\n\t */\n\texport type MarkupPreprocessor = (options: {\n\t\t/**\n\t\t * The whole Svelte file content\n\t\t */\n\t\tcontent: string;\n\t\t/**\n\t\t * The filename of the Svelte file\n\t\t */\n\t\tfilename?: string;\n\t}) => Processed | void | Promise<Processed | void>;\n\n\t/**\n\t * A script/style preprocessor that takes a string of code and returns a processed version.\n\t */\n\texport type Preprocessor = (options: {\n\t\t/**\n\t\t * The script/style tag content\n\t\t */\n\t\tcontent: string;\n\t\t/**\n\t\t * The attributes on the script/style tag\n\t\t */\n\t\tattributes: Record<string, string | boolean>;\n\t\t/**\n\t\t * The whole Svelte file content\n\t\t */\n\t\tmarkup: string;\n\t\t/**\n\t\t * The filename of the Svelte file\n\t\t */\n\t\tfilename?: string;\n\t}) => Processed | void | Promise<Processed | void>;\n\n\t/**\n\t * A preprocessor group is a set of preprocessors that are applied to a Svelte file.\n\t */\n\texport interface PreprocessorGroup {\n\t\t/** Name of the preprocessor. Will be a required option in the next major version */\n\t\tname?: string;\n\t\tmarkup?: MarkupPreprocessor;\n\t\tstyle?: Preprocessor;\n\t\tscript?: Preprocessor;\n\t}\n\n\t/**\n\t * Utility type to extract the type of a preprocessor from a preprocessor group\n\t */\n\texport interface SveltePreprocessor<\n\t\tPreprocessorType extends keyof PreprocessorGroup,\n\t\tOptions = any\n\t> {\n\t\t(options?: Options): Required<Pick<PreprocessorGroup, PreprocessorType>>;\n\t}\n}\n\ndeclare module 'svelte/types/compiler/interfaces' {\n\timport type { AssignmentExpression, Node, Program } from 'estree';\n\timport type { SourceMap } from 'magic-string';\n\tinterface BaseNode {\n\t\tstart: number;\n\t\tend: number;\n\t\ttype: string;\n\t\tchildren?: TemplateNode[];\n\t\t[prop_name: string]: any;\n\t}\n\n\texport interface Fragment extends BaseNode {\n\t\ttype: 'Fragment';\n\t\tchildren: TemplateNode[];\n\t}\n\n\texport interface Text extends BaseNode {\n\t\ttype: 'Text';\n\t\tdata: string;\n\t}\n\n\texport interface MustacheTag extends BaseNode {\n\t\ttype: 'MustacheTag' | 'RawMustacheTag';\n\t\texpression: Node;\n\t}\n\n\texport interface Comment extends BaseNode {\n\t\ttype: 'Comment';\n\t\tdata: string;\n\t\tignores: string[];\n\t}\n\n\texport interface ConstTag extends BaseNode {\n\t\ttype: 'ConstTag';\n\t\texpression: AssignmentExpression;\n\t}\n\n\tinterface DebugTag extends BaseNode {\n\t\ttype: 'DebugTag';\n\t\tidentifiers: Node[];\n\t}\n\n\texport type DirectiveType =\n\t\t| 'Action'\n\t\t| 'Animation'\n\t\t| 'Binding'\n\t\t| 'Class'\n\t\t| 'StyleDirective'\n\t\t| 'EventHandler'\n\t\t| 'Let'\n\t\t| 'Ref'\n\t\t| 'Transition';\n\n\texport interface BaseDirective extends BaseNode {\n\t\ttype: DirectiveType;\n\t\tname: string;\n\t}\n\n\tinterface BaseExpressionDirective extends BaseDirective {\n\t\ttype: DirectiveType;\n\t\texpression: null | Node;\n\t\tname: string;\n\t\tmodifiers: string[];\n\t}\n\n\texport interface Element extends BaseNode {\n\t\ttype:\n\t\t\t| 'InlineComponent'\n\t\t\t| 'SlotTemplate'\n\t\t\t| 'Title'\n\t\t\t| 'Slot'\n\t\t\t| 'Element'\n\t\t\t| 'Head'\n\t\t\t| 'Options'\n\t\t\t| 'Window'\n\t\t\t| 'Document'\n\t\t\t| 'Body';\n\t\tattributes: Array<BaseDirective | Attribute | SpreadAttribute>;\n\t\tname: string;\n\t}\n\n\texport interface Attribute extends BaseNode {\n\t\ttype: 'Attribute';\n\t\tname: string;\n\t\tvalue: any[];\n\t}\n\n\texport interface SpreadAttribute extends BaseNode {\n\t\ttype: 'Spread';\n\t\texpression: Node;\n\t}\n\n\texport interface Transition extends BaseExpressionDirective {\n\t\ttype: 'Transition';\n\t\tintro: boolean;\n\t\toutro: boolean;\n\t}\n\n\texport type Directive = BaseDirective | BaseExpressionDirective | Transition;\n\n\texport type TemplateNode =\n\t\t| Text\n\t\t| ConstTag\n\t\t| DebugTag\n\t\t| MustacheTag\n\t\t| BaseNode\n\t\t| Element\n\t\t| Attribute\n\t\t| SpreadAttribute\n\t\t| Directive\n\t\t| Transition\n\t\t| Comment;\n\n\texport interface Parser {\n\t\treadonly template: string;\n\t\treadonly filename?: string;\n\n\t\tindex: number;\n\t\tstack: Node[];\n\n\t\thtml: Node;\n\t\tcss: Node;\n\t\tjs: Node;\n\t\tmeta_tags: {};\n\t}\n\n\texport interface Script extends BaseNode {\n\t\ttype: 'Script';\n\t\tcontext: string;\n\t\tcontent: Program;\n\t}\n\n\texport interface Style extends BaseNode {\n\t\ttype: 'Style';\n\t\tattributes: any[]; // TODO\n\t\tchildren: any[]; // TODO add CSS node types\n\t\tcontent: {\n\t\t\tstart: number;\n\t\t\tend: number;\n\t\t\tstyles: string;\n\t\t};\n\t}\n\n\texport interface Ast {\n\t\thtml: TemplateNode;\n\t\tcss?: Style;\n\t\tinstance?: Script;\n\t\tmodule?: Script;\n\t}\n\n\texport interface Warning {\n\t\tstart?: { line: number; column: number; pos?: number };\n\t\tend?: { line: number; column: number };\n\t\tpos?: number;\n\t\tcode: string;\n\t\tmessage: string;\n\t\tfilename?: string;\n\t\tframe?: string;\n\t\ttoString: () => string;\n\t}\n\n\texport type EnableSourcemap = boolean | { js: boolean; css: boolean };\n\n\texport type CssHashGetter = (args: {\n\t\tname: string;\n\t\tfilename: string | undefined;\n\t\tcss: string;\n\t\thash: (input: string) => string;\n\t}) => string;\n\n\texport interface CompileOptions {\n\t\t/**\n\t\t * Sets the name of the resulting JavaScript class (though the compiler will rename it if it would otherwise conflict with other variables in scope).\n\t\t * It will normally be inferred from `filename`\n\t\t *\n\t\t * @default 'Component'\n\t\t */\n\t\tname?: string;\n\n\t\t/**\n\t\t * Used for debugging hints and sourcemaps. Your bundler plugin will set it automatically.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tfilename?: string;\n\n\t\t/**\n\t\t * If `\"dom\"`, Svelte emits a JavaScript class for mounting to the DOM.\n\t\t * If `\"ssr\"`, Svelte emits an object with a `render` method suitable for server-side rendering.\n\t\t * If `false`, no JavaScript or CSS is returned; just metadata.\n\t\t *\n\t\t * @default 'dom'\n\t\t */\n\t\tgenerate?: 'dom' | 'ssr' | false;\n\n\t\t/**\n\t\t * If `\"throw\"`, Svelte throws when a compilation error occurred.\n\t\t * If `\"warn\"`, Svelte will treat errors as warnings and add them to the warning report.\n\t\t *\n\t\t * @default 'throw'\n\t\t */\n\t\terrorMode?: 'throw' | 'warn';\n\n\t\t/**\n\t\t * If `\"strict\"`, Svelte returns a variables report with only variables that are not globals nor internals.\n\t\t * If `\"full\"`, Svelte returns a variables report with all detected variables.\n\t\t * If `false`, no variables report is returned.\n\t\t *\n\t\t * @default 'strict'\n\t\t */\n\t\tvarsReport?: 'full' | 'strict' | false;\n\n\t\t/**\n\t\t * An initial sourcemap that will be merged into the final output sourcemap.\n\t\t * This is usually the preprocessor sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tsourcemap?: object | string;\n\n\t\t/**\n\t\t * If `true`, Svelte generate sourcemaps for components.\n\t\t * Use an object with `js` or `css` for more granular control of sourcemap generation.\n\t\t *\n\t\t * @default true\n\t\t */\n\t\tenableSourcemap?: EnableSourcemap;\n\n\t\t/**\n\t\t * Used for your JavaScript sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\toutputFilename?: string;\n\n\t\t/**\n\t\t * Used for your CSS sourcemap.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\tcssOutputFilename?: string;\n\n\t\t/**\n\t\t * The location of the `svelte` package.\n\t\t * Any imports from `svelte` or `svelte/[module]` will be modified accordingly.\n\t\t *\n\t\t * @default 'svelte'\n\t\t */\n\t\tsveltePath?: string;\n\n\t\t/**\n\t\t * If `true`, causes extra code to be added to components that will perform runtime checks and provide debugging information during development.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tdev?: boolean;\n\n\t\t/**\n\t\t * If `true`, getters and setters will be created for the component's props. If `false`, they will only be created for readonly exported values (i.e. those declared with `const`, `class` and `function`). If compiling with `customElement: true` this option defaults to `true`.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\taccessors?: boolean;\n\n\t\t/**\n\t\t * If `true`, tells the compiler that you promise not to mutate any objects.\n\t\t * This allows it to be less conservative about checking whether values have changed.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\timmutable?: boolean;\n\n\t\t/**\n\t\t * If `true` when generating DOM code, enables the `hydrate: true` runtime option, which allows a component to upgrade existing DOM rather than creating new DOM from scratch.\n\t\t * When generating SSR code, this adds markers to `<head>` elements so that hydration knows which to replace.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\thydratable?: boolean;\n\n\t\t/**\n\t\t * If `true`, generates code that will work in IE9 and IE10, which don't support things like `element.dataset`.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tlegacy?: boolean;\n\n\t\t/**\n\t\t * If `true`, tells the compiler to generate a custom element constructor instead of a regular Svelte component.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tcustomElement?: boolean;\n\n\t\t/**\n\t\t * A `string` that tells Svelte what tag name to register the custom element with.\n\t\t * It must be a lowercase alphanumeric string with at least one hyphen, e.g. `\"my-element\"`.\n\t\t *\n\t\t * @default null\n\t\t */\n\t\ttag?: string;\n\n\t\t/**\n\t\t * - `'injected'` (formerly `true`), styles will be included in the JavaScript class and injected at runtime for the components actually rendered.\n\t\t * - `'external'` (formerly `false`), the CSS will be returned in the `css` field of the compilation result. Most Svelte bundler plugins will set this to `'external'` and use the CSS that is statically generated for better performance, as it will result in smaller JavaScript bundles and the output can be served as cacheable `.css` files.\n\t\t * - `'none'`, styles are completely avoided and no CSS output is generated.\n\t\t */\n\t\tcss?: 'injected' | 'external' | 'none' | boolean;\n\n\t\t/**\n\t\t * A `number` that tells Svelte to break the loop if it blocks the thread for more than `loopGuardTimeout` ms.\n\t\t * This is useful to prevent infinite loops.\n\t\t * **Only available when `dev: true`**.\n\t\t *\n\t\t * @default 0\n\t\t */\n\t\tloopGuardTimeout?: number;\n\n\t\t/**\n\t\t * The namespace of the element; e.g., `\"mathml\"`, `\"svg\"`, `\"foreign\"`.\n\t\t *\n\t\t * @default 'html'\n\t\t */\n\t\tnamespace?: string;\n\n\t\t/**\n\t\t * A function that takes a `{ hash, css, name, filename }` argument and returns the string that is used as a classname for scoped CSS.\n\t\t * It defaults to returning `svelte-${hash(css)}`.\n\t\t *\n\t\t * @default undefined\n\t\t */\n\t\tcssHash?: CssHashGetter;\n\n\t\t/**\n\t\t * If `true`, your HTML comments will be preserved during server-side rendering. By default, they are stripped out.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tpreserveComments?: boolean;\n\n\t\t/**\n\t\t *  If `true`, whitespace inside and between elements is kept as you typed it, rather than removed or collapsed to a single space where possible.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tpreserveWhitespace?: boolean;\n\t\t/**\n\t\t *  If `true`, exposes the Svelte major version on the global `window` object in the browser.\n\t\t *\n\t\t * @default true\n\t\t */\n\t\tdiscloseVersion?: boolean;\n\t}\n\n\texport interface ParserOptions {\n\t\tfilename?: string;\n\t\tcustomElement?: boolean;\n\t\tcss?: 'injected' | 'external' | 'none' | boolean;\n\t}\n\n\texport interface Visitor {\n\t\tenter: (node: Node) => void;\n\t\tleave?: (node: Node) => void;\n\t}\n\n\texport interface AppendTarget {\n\t\tslots: Record<string, string>;\n\t\tslot_stack: string[];\n\t}\n\n\texport interface Var {\n\t\tname: string;\n\t\t/** the `bar` in `export { foo as bar }` or `export let bar` */\n\t\texport_name?: string;\n\t\t/** true if assigned a boolean default value (`export let foo = true`) */\n\t\tis_boolean?: boolean;\n\t\tinjected?: boolean;\n\t\tmodule?: boolean;\n\t\tmutated?: boolean;\n\t\treassigned?: boolean;\n\t\treferenced?: boolean; // referenced from template scope\n\t\treferenced_from_script?: boolean; // referenced from script\n\t\twritable?: boolean;\n\n\t\t// used internally, but not exposed\n\t\tglobal?: boolean;\n\t\tinternal?: boolean; // event handlers, bindings\n\t\tinitialised?: boolean;\n\t\thoistable?: boolean;\n\t\tsubscribable?: boolean;\n\t\tis_reactive_dependency?: boolean;\n\t\timported?: boolean;\n\t}\n\n\texport interface CssResult {\n\t\tcode: string;\n\t\tmap: SourceMap;\n\t}\n\n\t/** The returned shape of `compile` from `svelte/compiler` */\n\texport interface CompileResult {\n\t\t/** The resulting JavaScript code from compling the component */\n\t\tjs: {\n\t\t\t/** Code as a string */\n\t\t\tcode: string;\n\t\t\t/** A source map */\n\t\t\tmap: any;\n\t\t};\n\t\t/** The resulting CSS code from compling the component */\n\t\tcss: CssResult;\n\t\t/** The abstract syntax tree representing the structure of the component */\n\t\tast: Ast;\n\t\t/**\n\t\t * An array of warning objects that were generated during compilation. Each warning has several properties:\n\t\t * - code is a string identifying the category of warning\n\t\t * - message describes the issue in human-readable terms\n\t\t * - start and end, if the warning relates to a specific location, are objects with line, column and character properties\n\t\t * - frame, if applicable, is a string highlighting the offending code with line numbers\n\t\t * */\n\t\twarnings: Warning[];\n\t\t/** An array of the component's declarations used by tooling in the ecosystem (like our ESLint plugin) to infer more information */\n\t\tvars: Var[];\n\t\t/** An object used by the Svelte developer team for diagnosing the compiler. Avoid relying on it to stay the same! */\n\t\tstats: {\n\t\t\ttimings: {\n\t\t\t\ttotal: number;\n\t\t\t};\n\t\t};\n\t}\n}\n\ndeclare module 'svelte/action' {\n\t/**\n\t * Actions can return an object containing the two properties defined in this interface. Both are optional.\n\t * - update: An action can have a parameter. This method will be called whenever that parameter changes,\n\t *   immediately after Svelte has applied updates to the markup. `ActionReturn` and `ActionReturn<undefined>` both\n\t *   mean that the action accepts no parameters.\n\t * - destroy: Method that is called after the element is unmounted\n\t *\n\t * Additionally, you can specify which additional attributes and events the action enables on the applied element.\n\t * This applies to TypeScript typings only and has no effect at runtime.\n\t *\n\t * Example usage:\n\t * ```ts\n\t * interface Attributes {\n\t * \tnewprop?: string;\n\t * \t'on:event': (e: CustomEvent<boolean>) => void;\n\t * }\n\t *\n\t * export function myAction(node: HTMLElement, parameter: Parameter): ActionReturn<Parameter, Attributes> {\n\t * \t// ...\n\t * \treturn {\n\t * \t\tupdate: (updatedParameter) => {...},\n\t * \t\tdestroy: () => {...}\n\t * \t};\n\t * }\n\t * ```\n\t *\n\t * Docs: https://svelte.dev/docs/svelte-action\n\t */\n\texport interface ActionReturn<\n\t\tParameter = undefined,\n\t\tAttributes extends Record<string, any> = Record<never, any>\n\t> {\n\t\tupdate?: (parameter: Parameter) => void;\n\t\tdestroy?: () => void;\n\t\t/**\n\t\t * ### DO NOT USE THIS\n\t\t * This exists solely for type-checking and has no effect at runtime.\n\t\t * Set this through the `Attributes` generic instead.\n\t\t */\n\t\t$$_attributes?: Attributes;\n\t}\n\n\t/**\n\t * Actions are functions that are called when an element is created.\n\t * You can use this interface to type such actions.\n\t * The following example defines an action that only works on `<div>` elements\n\t * and optionally accepts a parameter which it has a default value for:\n\t * ```ts\n\t * export const myAction: Action<HTMLDivElement, { someProperty: boolean } | undefined> = (node, param = { someProperty: true }) => {\n\t *   // ...\n\t * }\n\t * ```\n\t * `Action<HTMLDivElement>` and `Action<HTMLDiveElement, undefined>` both signal that the action accepts no parameters.\n\t *\n\t * You can return an object with methods `update` and `destroy` from the function and type which additional attributes and events it has.\n\t * See interface `ActionReturn` for more details.\n\t *\n\t * Docs: https://svelte.dev/docs/svelte-action\n\t */\n\texport interface Action<\n\t\tElement = HTMLElement,\n\t\tParameter = undefined,\n\t\tAttributes extends Record<string, any> = Record<never, any>\n\t> {\n\t\t<Node extends Element>(\n\t\t\t...args: undefined extends Parameter\n\t\t\t\t? [node: Node, parameter?: Parameter]\n\t\t\t\t: [node: Node, parameter: Parameter]\n\t\t): void | ActionReturn<Parameter, Attributes>;\n\t}\n\n\t// Implementation notes:\n\t// - undefined extends X instead of X extends undefined makes this work better with both strict and nonstrict mode\n}\n\ndeclare module 'svelte/animate' {\n\t// todo: same as Transition, should it be shared?\n\texport interface AnimationConfig {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: (t: number) => number;\n\t\tcss?: (t: number, u: number) => string;\n\t\ttick?: (t: number, u: number) => void;\n\t}\n\n\texport interface FlipParams {\n\t\tdelay?: number;\n\t\tduration?: number | ((len: number) => number);\n\t\teasing?: (t: number) => number;\n\t}\n\t/**\n\t * The flip function calculates the start and end position of an element and animates between them, translating the x and y values.\n\t * `flip` stands for [First, Last, Invert, Play](https://aerotwist.com/blog/flip-your-animations/).\n\t *\n\t * https://svelte.dev/docs/svelte-animate#flip\n\t * */\n\texport function flip(node: Element, { from, to }: {\n\t\tfrom: DOMRect;\n\t\tto: DOMRect;\n\t}, params?: FlipParams): AnimationConfig;\n}\n\ndeclare module 'svelte/easing' {\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function backInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function backIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function backOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function bounceOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function bounceInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function bounceIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function circInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function circIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function circOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function cubicInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function cubicIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function cubicOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function elasticInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function elasticIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function elasticOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function expoInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function expoIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function expoOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quadInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quadIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quadOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quartInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quartIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quartOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quintInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quintIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function quintOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function sineInOut(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function sineIn(t: number): number;\n\t/**\n\t * https://svelte.dev/docs/svelte-easing\n\t * */\n\texport function sineOut(t: number): number;\n\texport function linear(x: any): any;\n}\n\ndeclare module 'svelte/motion' {\n\texport interface Spring<T> extends Readable<T> {\n\t\tset: (new_value: T, opts?: SpringUpdateOpts) => Promise<void>;\n\t\tupdate: (fn: Updater<T>, opts?: SpringUpdateOpts) => Promise<void>;\n\t\tprecision: number;\n\t\tdamping: number;\n\t\tstiffness: number;\n\t}\n\n\texport interface Tweened<T> extends Readable<T> {\n\t\tset(value: T, opts?: TweenedOptions<T>): Promise<void>;\n\t\tupdate(updater: Updater<T>, opts?: TweenedOptions<T>): Promise<void>;\n\t}\n\t/** Callback to inform of a value updates. */\n\ttype Subscriber<T> = (value: T) => void;\n\n\t/** Unsubscribes from value updates. */\n\ttype Unsubscriber = () => void;\n\n\t/** Readable interface for subscribing. */\n\tinterface Readable<T> {\n\t\t/**\n\t\t * Subscribe on value changes.\n\t\t * @param run subscription callback\n\t\t * @param invalidate cleanup callback\n\t\t */\n\t\tsubscribe(this: void, run: Subscriber<T>, invalidate?: Invalidator<T>): Unsubscriber;\n\t}\n\tinterface SpringOpts {\n\t\tstiffness?: number;\n\t\tdamping?: number;\n\t\tprecision?: number;\n\t}\n\n\tinterface SpringUpdateOpts {\n\t\thard?: any;\n\t\tsoft?: string | number | boolean;\n\t}\n\n\ttype Updater<T> = (target_value: T, value: T) => T;\n\n\tinterface TweenedOptions<T> {\n\t\tdelay?: number;\n\t\tduration?: number | ((from: T, to: T) => number);\n\t\teasing?: (t: number) => number;\n\t\tinterpolate?: (a: T, b: T) => (t: number) => T;\n\t}\n\t/** Cleanup logic callback. */\n\ttype Invalidator<T> = (value?: T) => void;\n\t/**\n\t * The spring function in Svelte creates a store whose value is animated, with a motion that simulates the behavior of a spring. This means when the value changes, instead of transitioning at a steady rate, it \"bounces\" like a spring would, depending on the physics parameters provided. This adds a level of realism to the transitions and can enhance the user experience.\n\t *\n\t * https://svelte.dev/docs/svelte-motion#spring\n\t * */\n\texport function spring<T = any>(value?: T | undefined, opts?: SpringOpts | undefined): Spring<T>;\n\t/**\n\t * A tweened store in Svelte is a special type of store that provides smooth transitions between state values over time.\n\t *\n\t * https://svelte.dev/docs/svelte-motion#tweened\n\t * */\n\texport function tweened<T>(value?: T | undefined, defaults?: TweenedOptions<T> | undefined): Tweened<T>;\n}\n\ndeclare module 'svelte/store' {\n\t/** Callback to inform of a value updates. */\n\texport type Subscriber<T> = (value: T) => void;\n\n\t/** Unsubscribes from value updates. */\n\texport type Unsubscriber = () => void;\n\n\t/** Callback to update a value. */\n\texport type Updater<T> = (value: T) => T;\n\n\t/**\n\t * Start and stop notification callbacks.\n\t * This function is called when the first subscriber subscribes.\n\t *\n\t * @param set Function that sets the value of the store.\n\t * @param update Function that sets the value of the store after passing the current value to the update function.\n\t * @returns Optionally, a cleanup function that is called when the last remaining\n\t * subscriber unsubscribes.\n\t */\n\texport type StartStopNotifier<T> = (\n\t\tset: (value: T) => void,\n\t\tupdate: (fn: Updater<T>) => void\n\t) => void | (() => void);\n\n\t/** Readable interface for subscribing. */\n\texport interface Readable<T> {\n\t\t/**\n\t\t * Subscribe on value changes.\n\t\t * @param run subscription callback\n\t\t * @param invalidate cleanup callback\n\t\t */\n\t\tsubscribe(this: void, run: Subscriber<T>, invalidate?: Invalidator<T>): Unsubscriber;\n\t}\n\n\t/** Writable interface for both updating and subscribing. */\n\texport interface Writable<T> extends Readable<T> {\n\t\t/**\n\t\t * Set value and inform subscribers.\n\t\t * @param value to set\n\t\t */\n\t\tset(this: void, value: T): void;\n\n\t\t/**\n\t\t * Update value using callback and inform subscribers.\n\t\t * @param updater callback\n\t\t */\n\t\tupdate(this: void, updater: Updater<T>): void;\n\t}\n\t/** Cleanup logic callback. */\n\ttype Invalidator<T> = (value?: T) => void;\n\n\t/** One or more `Readable`s. */\n\ttype Stores =\n\t\t| Readable<any>\n\t\t| [Readable<any>, ...Array<Readable<any>>]\n\t\t| Array<Readable<any>>;\n\n\t/** One or more values from `Readable` stores. */\n\ttype StoresValues<T> = T extends Readable<infer U>\n\t\t? U\n\t\t: { [K in keyof T]: T[K] extends Readable<infer U> ? U : never };\n\t/**\n\t * Creates a `Readable` store that allows reading by subscription.\n\t *\n\t * https://svelte.dev/docs/svelte-store#readable\n\t * @param value initial value\n\t * */\n\texport function readable<T>(value?: T | undefined, start?: StartStopNotifier<T> | undefined): Readable<T>;\n\t/**\n\t * Create a `Writable` store that allows both updating and reading by subscription.\n\t *\n\t * https://svelte.dev/docs/svelte-store#writable\n\t * @param value initial value\n\t * */\n\texport function writable<T>(value?: T | undefined, start?: StartStopNotifier<T> | undefined): Writable<T>;\n\texport function derived<S extends Stores, T>(stores: S, fn: (values: StoresValues<S>, set: (value: T) => void, update: (fn: Updater<T>) => void) => Unsubscriber | void, initial_value?: T | undefined): Readable<T>;\n\texport function derived<S extends Stores, T>(stores: S, fn: (values: StoresValues<S>) => T, initial_value?: T | undefined): Readable<T>;\n\t/**\n\t * Takes a store and returns a new one derived from the old one that is readable.\n\t *\n\t * https://svelte.dev/docs/svelte-store#readonly\n\t * @param store  - store to make readonly\n\t * */\n\texport function readonly<T>(store: Readable<T>): Readable<T>;\n\t/**\n\t * Get the current value from a store by subscribing and immediately unsubscribing.\n\t *\n\t * https://svelte.dev/docs/svelte-store#get\n\t * */\n\texport function get<T>(store: Readable<T>): T;\n}\n\ndeclare module 'svelte/transition' {\n\texport type EasingFunction = (t: number) => number;\n\n\texport interface TransitionConfig {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t\tcss?: (t: number, u: number) => string;\n\t\ttick?: (t: number, u: number) => void;\n\t}\n\n\texport interface BlurParams {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t\tamount?: number | string;\n\t\topacity?: number;\n\t}\n\n\texport interface FadeParams {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t}\n\n\texport interface FlyParams {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t\tx?: number | string;\n\t\ty?: number | string;\n\t\topacity?: number;\n\t}\n\n\texport interface SlideParams {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t\taxis?: 'x' | 'y';\n\t}\n\n\texport interface ScaleParams {\n\t\tdelay?: number;\n\t\tduration?: number;\n\t\teasing?: EasingFunction;\n\t\tstart?: number;\n\t\topacity?: number;\n\t}\n\n\texport interface DrawParams {\n\t\tdelay?: number;\n\t\tspeed?: number;\n\t\tduration?: number | ((len: number) => number);\n\t\teasing?: EasingFunction;\n\t}\n\n\texport interface CrossfadeParams {\n\t\tdelay?: number;\n\t\tduration?: number | ((len: number) => number);\n\t\teasing?: EasingFunction;\n\t}\n\t/**\n\t * Animates a `blur` filter alongside an element's opacity.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#blur\n\t * */\n\texport function blur(node: Element, { delay, duration, easing, amount, opacity }?: BlurParams | undefined): TransitionConfig;\n\t/**\n\t * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#fade\n\t * */\n\texport function fade(node: Element, { delay, duration, easing }?: FadeParams | undefined): TransitionConfig;\n\t/**\n\t * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#fly\n\t * */\n\texport function fly(node: Element, { delay, duration, easing, x, y, opacity }?: FlyParams | undefined): TransitionConfig;\n\t/**\n\t * Slides an element in and out.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#slide\n\t * */\n\texport function slide(node: Element, { delay, duration, easing, axis }?: SlideParams | undefined): TransitionConfig;\n\t/**\n\t * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#scale\n\t * */\n\texport function scale(node: Element, { delay, duration, easing, start, opacity }?: ScaleParams | undefined): TransitionConfig;\n\t/**\n\t * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#draw\n\t * */\n\texport function draw(node: SVGElement & {\n\t\tgetTotalLength(): number;\n\t}, { delay, speed, duration, easing }?: DrawParams | undefined): TransitionConfig;\n\t/**\n\t * The `crossfade` function creates a pair of [transitions](/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n\t *\n\t * https://svelte.dev/docs/svelte-transition#crossfade\n\t * */\n\texport function crossfade({ fallback, ...defaults }: CrossfadeParams & {\n\t\tfallback?: ((node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig) | undefined;\n\t}): [(node: any, params: CrossfadeParams & {\n\t\tkey: any;\n\t}) => () => TransitionConfig, (node: any, params: CrossfadeParams & {\n\t\tkey: any;\n\t}) => () => TransitionConfig];\n}declare module '*.svelte' {\n\texport { SvelteComponent as default } from 'svelte';\n}\n\n//# sourceMappingURL=index.d.ts.map",
  "/node_modules/svelte/src/compiler/interfaces.d.ts": "import { AssignmentExpression, Node, Program } from 'estree';\nimport { SourceMap } from 'magic-string';\n\ninterface BaseNode {\n\tstart: number;\n\tend: number;\n\ttype: string;\n\tchildren?: TemplateNode[];\n\t[prop_name: string]: any;\n}\n\nexport interface Fragment extends BaseNode {\n\ttype: 'Fragment';\n\tchildren: TemplateNode[];\n}\n\nexport interface Text extends BaseNode {\n\ttype: 'Text';\n\tdata: string;\n}\n\nexport interface MustacheTag extends BaseNode {\n\ttype: 'MustacheTag' | 'RawMustacheTag';\n\texpression: Node;\n}\n\nexport interface Comment extends BaseNode {\n\ttype: 'Comment';\n\tdata: string;\n\tignores: string[];\n}\n\nexport interface ConstTag extends BaseNode {\n\ttype: 'ConstTag';\n\texpression: AssignmentExpression;\n}\n\ninterface DebugTag extends BaseNode {\n\ttype: 'DebugTag';\n\tidentifiers: Node[];\n}\n\nexport type DirectiveType =\n\t| 'Action'\n\t| 'Animation'\n\t| 'Binding'\n\t| 'Class'\n\t| 'StyleDirective'\n\t| 'EventHandler'\n\t| 'Let'\n\t| 'Ref'\n\t| 'Transition';\n\nexport interface BaseDirective extends BaseNode {\n\ttype: DirectiveType;\n\tname: string;\n}\n\ninterface BaseExpressionDirective extends BaseDirective {\n\ttype: DirectiveType;\n\texpression: null | Node;\n\tname: string;\n\tmodifiers: string[];\n}\n\nexport interface Element extends BaseNode {\n\ttype:\n\t\t| 'InlineComponent'\n\t\t| 'SlotTemplate'\n\t\t| 'Title'\n\t\t| 'Slot'\n\t\t| 'Element'\n\t\t| 'Head'\n\t\t| 'Options'\n\t\t| 'Window'\n\t\t| 'Document'\n\t\t| 'Body';\n\tattributes: Array<BaseDirective | Attribute | SpreadAttribute>;\n\tname: string;\n}\n\nexport interface Attribute extends BaseNode {\n\ttype: 'Attribute';\n\tname: string;\n\tvalue: any[];\n}\n\nexport interface SpreadAttribute extends BaseNode {\n\ttype: 'Spread';\n\texpression: Node;\n}\n\nexport interface Transition extends BaseExpressionDirective {\n\ttype: 'Transition';\n\tintro: boolean;\n\toutro: boolean;\n}\n\nexport type Directive = BaseDirective | BaseExpressionDirective | Transition;\n\nexport type TemplateNode =\n\t| Text\n\t| ConstTag\n\t| DebugTag\n\t| MustacheTag\n\t| BaseNode\n\t| Element\n\t| Attribute\n\t| SpreadAttribute\n\t| Directive\n\t| Transition\n\t| Comment;\n\nexport interface Parser {\n\treadonly template: string;\n\treadonly filename?: string;\n\n\tindex: number;\n\tstack: Node[];\n\n\thtml: Node;\n\tcss: Node;\n\tjs: Node;\n\tmeta_tags: {};\n}\n\nexport interface Script extends BaseNode {\n\ttype: 'Script';\n\tcontext: string;\n\tcontent: Program;\n}\n\nexport interface Style extends BaseNode {\n\ttype: 'Style';\n\tattributes: any[]; // TODO\n\tchildren: any[]; // TODO add CSS node types\n\tcontent: {\n\t\tstart: number;\n\t\tend: number;\n\t\tstyles: string;\n\t};\n}\n\nexport interface Ast {\n\thtml: TemplateNode;\n\tcss?: Style;\n\tinstance?: Script;\n\tmodule?: Script;\n}\n\nexport interface Warning {\n\tstart?: { line: number; column: number; pos?: number };\n\tend?: { line: number; column: number };\n\tpos?: number;\n\tcode: string;\n\tmessage: string;\n\tfilename?: string;\n\tframe?: string;\n\ttoString: () => string;\n}\n\nexport type EnableSourcemap = boolean | { js: boolean; css: boolean };\n\nexport type CssHashGetter = (args: {\n\tname: string;\n\tfilename: string | undefined;\n\tcss: string;\n\thash: (input: string) => string;\n}) => string;\n\nexport interface CompileOptions {\n\t/**\n\t * Sets the name of the resulting JavaScript class (though the compiler will rename it if it would otherwise conflict with other variables in scope).\n\t * It will normally be inferred from `filename`\n\t *\n\t * @default 'Component'\n\t */\n\tname?: string;\n\n\t/**\n\t * Used for debugging hints and sourcemaps. Your bundler plugin will set it automatically.\n\t *\n\t * @default null\n\t */\n\tfilename?: string;\n\n\t/**\n\t * If `\"dom\"`, Svelte emits a JavaScript class for mounting to the DOM.\n\t * If `\"ssr\"`, Svelte emits an object with a `render` method suitable for server-side rendering.\n\t * If `false`, no JavaScript or CSS is returned; just metadata.\n\t *\n\t * @default 'dom'\n\t */\n\tgenerate?: 'dom' | 'ssr' | false;\n\n\t/**\n\t * If `\"throw\"`, Svelte throws when a compilation error occurred.\n\t * If `\"warn\"`, Svelte will treat errors as warnings and add them to the warning report.\n\t *\n\t * @default 'throw'\n\t */\n\terrorMode?: 'throw' | 'warn';\n\n\t/**\n\t * If `\"strict\"`, Svelte returns a variables report with only variables that are not globals nor internals.\n\t * If `\"full\"`, Svelte returns a variables report with all detected variables.\n\t * If `false`, no variables report is returned.\n\t *\n\t * @default 'strict'\n\t */\n\tvarsReport?: 'full' | 'strict' | false;\n\n\t/**\n\t * An initial sourcemap that will be merged into the final output sourcemap.\n\t * This is usually the preprocessor sourcemap.\n\t *\n\t * @default null\n\t */\n\tsourcemap?: object | string;\n\n\t/**\n\t * If `true`, Svelte generate sourcemaps for components.\n\t * Use an object with `js` or `css` for more granular control of sourcemap generation.\n\t *\n\t * @default true\n\t */\n\tenableSourcemap?: EnableSourcemap;\n\n\t/**\n\t * Used for your JavaScript sourcemap.\n\t *\n\t * @default null\n\t */\n\toutputFilename?: string;\n\n\t/**\n\t * Used for your CSS sourcemap.\n\t *\n\t * @default null\n\t */\n\tcssOutputFilename?: string;\n\n\t/**\n\t * The location of the `svelte` package.\n\t * Any imports from `svelte` or `svelte/[module]` will be modified accordingly.\n\t *\n\t * @default 'svelte'\n\t */\n\tsveltePath?: string;\n\n\t/**\n\t * If `true`, causes extra code to be added to components that will perform runtime checks and provide debugging information during development.\n\t *\n\t * @default false\n\t */\n\tdev?: boolean;\n\n\t/**\n\t * If `true`, getters and setters will be created for the component's props. If `false`, they will only be created for readonly exported values (i.e. those declared with `const`, `class` and `function`). If compiling with `customElement: true` this option defaults to `true`.\n\t *\n\t * @default false\n\t */\n\taccessors?: boolean;\n\n\t/**\n\t * If `true`, tells the compiler that you promise not to mutate any objects.\n\t * This allows it to be less conservative about checking whether values have changed.\n\t *\n\t * @default false\n\t */\n\timmutable?: boolean;\n\n\t/**\n\t * If `true` when generating DOM code, enables the `hydrate: true` runtime option, which allows a component to upgrade existing DOM rather than creating new DOM from scratch.\n\t * When generating SSR code, this adds markers to `<head>` elements so that hydration knows which to replace.\n\t *\n\t * @default false\n\t */\n\thydratable?: boolean;\n\n\t/**\n\t * If `true`, generates code that will work in IE9 and IE10, which don't support things like `element.dataset`.\n\t *\n\t * @default false\n\t */\n\tlegacy?: boolean;\n\n\t/**\n\t * If `true`, tells the compiler to generate a custom element constructor instead of a regular Svelte component.\n\t *\n\t * @default false\n\t */\n\tcustomElement?: boolean;\n\n\t/**\n\t * A `string` that tells Svelte what tag name to register the custom element with.\n\t * It must be a lowercase alphanumeric string with at least one hyphen, e.g. `\"my-element\"`.\n\t *\n\t * @default null\n\t */\n\ttag?: string;\n\n\t/**\n\t * - `'injected'` (formerly `true`), styles will be included in the JavaScript class and injected at runtime for the components actually rendered.\n\t * - `'external'` (formerly `false`), the CSS will be returned in the `css` field of the compilation result. Most Svelte bundler plugins will set this to `'external'` and use the CSS that is statically generated for better performance, as it will result in smaller JavaScript bundles and the output can be served as cacheable `.css` files.\n\t * - `'none'`, styles are completely avoided and no CSS output is generated.\n\t */\n\tcss?: 'injected' | 'external' | 'none' | boolean;\n\n\t/**\n\t * A `number` that tells Svelte to break the loop if it blocks the thread for more than `loopGuardTimeout` ms.\n\t * This is useful to prevent infinite loops.\n\t * **Only available when `dev: true`**.\n\t *\n\t * @default 0\n\t */\n\tloopGuardTimeout?: number;\n\n\t/**\n\t * The namespace of the element; e.g., `\"mathml\"`, `\"svg\"`, `\"foreign\"`.\n\t *\n\t * @default 'html'\n\t */\n\tnamespace?: string;\n\n\t/**\n\t * A function that takes a `{ hash, css, name, filename }` argument and returns the string that is used as a classname for scoped CSS.\n\t * It defaults to returning `svelte-${hash(css)}`.\n\t *\n\t * @default undefined\n\t */\n\tcssHash?: CssHashGetter;\n\n\t/**\n\t * If `true`, your HTML comments will be preserved during server-side rendering. By default, they are stripped out.\n\t *\n\t * @default false\n\t */\n\tpreserveComments?: boolean;\n\n\t/**\n\t *  If `true`, whitespace inside and between elements is kept as you typed it, rather than removed or collapsed to a single space where possible.\n\t *\n\t * @default false\n\t */\n\tpreserveWhitespace?: boolean;\n\t/**\n\t *  If `true`, exposes the Svelte major version on the global `window` object in the browser.\n\t *\n\t * @default true\n\t */\n\tdiscloseVersion?: boolean;\n}\n\nexport interface ParserOptions {\n\tfilename?: string;\n\tcustomElement?: boolean;\n\tcss?: 'injected' | 'external' | 'none' | boolean;\n}\n\nexport interface Visitor {\n\tenter: (node: Node) => void;\n\tleave?: (node: Node) => void;\n}\n\nexport interface AppendTarget {\n\tslots: Record<string, string>;\n\tslot_stack: string[];\n}\n\nexport interface Var {\n\tname: string;\n\t/** the `bar` in `export { foo as bar }` or `export let bar` */\n\texport_name?: string;\n\t/** true if assigned a boolean default value (`export let foo = true`) */\n\tis_boolean?: boolean;\n\tinjected?: boolean;\n\tmodule?: boolean;\n\tmutated?: boolean;\n\treassigned?: boolean;\n\treferenced?: boolean; // referenced from template scope\n\treferenced_from_script?: boolean; // referenced from script\n\twritable?: boolean;\n\n\t// used internally, but not exposed\n\tglobal?: boolean;\n\tinternal?: boolean; // event handlers, bindings\n\tinitialised?: boolean;\n\thoistable?: boolean;\n\tsubscribable?: boolean;\n\tis_reactive_dependency?: boolean;\n\timported?: boolean;\n}\n\nexport interface CssResult {\n\tcode: string;\n\tmap: SourceMap;\n}\n\n/** The returned shape of `compile` from `svelte/compiler` */\nexport interface CompileResult {\n\t/** The resulting JavaScript code from compling the component */\n\tjs: {\n\t\t/** Code as a string */\n\t\tcode: string;\n\t\t/** A source map */\n\t\tmap: any;\n\t};\n\t/** The resulting CSS code from compling the component */\n\tcss: CssResult;\n\t/** The abstract syntax tree representing the structure of the component */\n\tast: Ast;\n\t/**\n\t * An array of warning objects that were generated during compilation. Each warning has several properties:\n\t * - code is a string identifying the category of warning\n\t * - message describes the issue in human-readable terms\n\t * - start and end, if the warning relates to a specific location, are objects with line, column and character properties\n\t * - frame, if applicable, is a string highlighting the offending code with line numbers\n\t * */\n\twarnings: Warning[];\n\t/** An array of the component's declarations used by tooling in the ecosystem (like our ESLint plugin) to infer more information */\n\tvars: Var[];\n\t/** An object used by the Svelte developer team for diagnosing the compiler. Avoid relying on it to stay the same! */\n\tstats: {\n\t\ttimings: {\n\t\t\ttotal: number;\n\t\t};\n\t};\n}\n",
  "/node_modules/svelte/src/compiler/public.d.ts": "export { CompileOptions, CompileResult, EnableSourcemap, CssHashGetter } from './interfaces';\nexport * from './preprocess/public.js';\nexport * from './index.js';\n",
  "/node_modules/svelte/src/runtime/ambient.d.ts": "declare module '*.svelte' {\n\texport { SvelteComponent as default } from 'svelte';\n}\n",
  "/node_modules/svelte/src/runtime/public.d.ts": "import './ambient.js';\n\n// Types written in this particular order to work around a dts-buddy bug where it doesn't handle the\n// SvelteComponentDev as SvelteComponent alias correctly.\n// If that's fixed, we  can do export * from './index.js' instead.\n\nexport {\n\tSvelteComponent,\n\tSvelteComponentTyped,\n\tonMount,\n\tonDestroy,\n\tbeforeUpdate,\n\tafterUpdate,\n\tsetContext,\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\ttick,\n\tcreateEventDispatcher\n} from './index.js';\n\nexport type {\n\tComponentConstructorOptions,\n\tComponentEvents,\n\tComponentProps,\n\tComponentType\n} from './internal/public.js';\n",
  "/node_modules/svelte/types/compiler/interfaces.d.ts": "import '../index.js';",
  "/node_modules/svelte/types/compiler/preprocess.d.ts": "import '../index.js';",
  "/node_modules/svelte/src/compiler/preprocess/private.d.ts": "import { DecodedSourceMap } from '@ampproject/remapping';\nimport { Location } from 'locate-character';\nimport { MappedCode } from '../utils/mapped_code.js';\n\nexport interface Source {\n\tsource: string;\n\tget_location: (search: number) => Location;\n\tfile_basename: string;\n\tfilename?: string;\n}\n\nexport interface SourceUpdate {\n\tstring?: string;\n\tmap?: DecodedSourceMap;\n\tdependencies?: string[];\n}\n\nexport interface Replacement {\n\toffset: number;\n\tlength: number;\n\treplacement: MappedCode;\n}\n",
  "/node_modules/svelte/src/compiler/preprocess/public.d.ts": "/**\n * The result of a preprocessor run. If the preprocessor does not return a result, it is assumed that the code is unchanged.\n */\nexport interface Processed {\n\t/**\n\t * The new code\n\t */\n\tcode: string;\n\t/**\n\t * A source map mapping back to the original code\n\t */\n\tmap?: string | object; // we are opaque with the type here to avoid dependency on the remapping module for our public types.\n\t/**\n\t * A list of additional files to watch for changes\n\t */\n\tdependencies?: string[];\n\t/**\n\t * Only for script/style preprocessors: The updated attributes to set on the tag. If undefined, attributes stay unchanged.\n\t */\n\tattributes?: Record<string, string | boolean>;\n\ttoString?: () => string;\n}\n\n/**\n * A markup preprocessor that takes a string of code and returns a processed version.\n */\nexport type MarkupPreprocessor = (options: {\n\t/**\n\t * The whole Svelte file content\n\t */\n\tcontent: string;\n\t/**\n\t * The filename of the Svelte file\n\t */\n\tfilename?: string;\n}) => Processed | void | Promise<Processed | void>;\n\n/**\n * A script/style preprocessor that takes a string of code and returns a processed version.\n */\nexport type Preprocessor = (options: {\n\t/**\n\t * The script/style tag content\n\t */\n\tcontent: string;\n\t/**\n\t * The attributes on the script/style tag\n\t */\n\tattributes: Record<string, string | boolean>;\n\t/**\n\t * The whole Svelte file content\n\t */\n\tmarkup: string;\n\t/**\n\t * The filename of the Svelte file\n\t */\n\tfilename?: string;\n}) => Processed | void | Promise<Processed | void>;\n\n/**\n * A preprocessor group is a set of preprocessors that are applied to a Svelte file.\n */\nexport interface PreprocessorGroup {\n\t/** Name of the preprocessor. Will be a required option in the next major version */\n\tname?: string;\n\tmarkup?: MarkupPreprocessor;\n\tstyle?: Preprocessor;\n\tscript?: Preprocessor;\n}\n\n/**\n * Utility type to extract the type of a preprocessor from a preprocessor group\n */\nexport interface SveltePreprocessor<\n\tPreprocessorType extends keyof PreprocessorGroup,\n\tOptions = any\n> {\n\t(options?: Options): Required<Pick<PreprocessorGroup, PreprocessorType>>;\n}\n",
  "/node_modules/svelte/src/runtime/action/public.d.ts": "/**\n * Actions can return an object containing the two properties defined in this interface. Both are optional.\n * - update: An action can have a parameter. This method will be called whenever that parameter changes,\n *   immediately after Svelte has applied updates to the markup. `ActionReturn` and `ActionReturn<undefined>` both\n *   mean that the action accepts no parameters.\n * - destroy: Method that is called after the element is unmounted\n *\n * Additionally, you can specify which additional attributes and events the action enables on the applied element.\n * This applies to TypeScript typings only and has no effect at runtime.\n *\n * Example usage:\n * ```ts\n * interface Attributes {\n * \tnewprop?: string;\n * \t'on:event': (e: CustomEvent<boolean>) => void;\n * }\n *\n * export function myAction(node: HTMLElement, parameter: Parameter): ActionReturn<Parameter, Attributes> {\n * \t// ...\n * \treturn {\n * \t\tupdate: (updatedParameter) => {...},\n * \t\tdestroy: () => {...}\n * \t};\n * }\n * ```\n *\n * Docs: https://svelte.dev/docs/svelte-action\n */\nexport interface ActionReturn<\n\tParameter = undefined,\n\tAttributes extends Record<string, any> = Record<never, any>\n> {\n\tupdate?: (parameter: Parameter) => void;\n\tdestroy?: () => void;\n\t/**\n\t * ### DO NOT USE THIS\n\t * This exists solely for type-checking and has no effect at runtime.\n\t * Set this through the `Attributes` generic instead.\n\t */\n\t$$_attributes?: Attributes;\n}\n\n/**\n * Actions are functions that are called when an element is created.\n * You can use this interface to type such actions.\n * The following example defines an action that only works on `<div>` elements\n * and optionally accepts a parameter which it has a default value for:\n * ```ts\n * export const myAction: Action<HTMLDivElement, { someProperty: boolean } | undefined> = (node, param = { someProperty: true }) => {\n *   // ...\n * }\n * ```\n * `Action<HTMLDivElement>` and `Action<HTMLDiveElement, undefined>` both signal that the action accepts no parameters.\n *\n * You can return an object with methods `update` and `destroy` from the function and type which additional attributes and events it has.\n * See interface `ActionReturn` for more details.\n *\n * Docs: https://svelte.dev/docs/svelte-action\n */\nexport interface Action<\n\tElement = HTMLElement,\n\tParameter = undefined,\n\tAttributes extends Record<string, any> = Record<never, any>\n> {\n\t<Node extends Element>(\n\t\t...args: undefined extends Parameter\n\t\t\t? [node: Node, parameter?: Parameter]\n\t\t\t: [node: Node, parameter: Parameter]\n\t): void | ActionReturn<Parameter, Attributes>;\n}\n\n// Implementation notes:\n// - undefined extends X instead of X extends undefined makes this work better with both strict and nonstrict mode\n",
  "/node_modules/svelte/src/runtime/animate/public.d.ts": "// todo: same as Transition, should it be shared?\nexport interface AnimationConfig {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: (t: number) => number;\n\tcss?: (t: number, u: number) => string;\n\ttick?: (t: number, u: number) => void;\n}\n\nexport interface FlipParams {\n\tdelay?: number;\n\tduration?: number | ((len: number) => number);\n\teasing?: (t: number) => number;\n}\n\nexport * from './index.js';\n",
  "/node_modules/svelte/src/runtime/internal/private.d.ts": "import type { AnimationConfig } from '../animate/public.js';\n\nexport type AnimationFn = (\n\tnode: Element,\n\t{ from, to }: { from: PositionRect; to: PositionRect },\n\tparams: any\n) => AnimationConfig;\n\nexport type Listener = (entry: ResizeObserverEntry) => any;\n\n//todo: documentation says it is DOMRect, but in IE it would be ClientRect\nexport type PositionRect = DOMRect | ClientRect;\n\nexport interface PromiseInfo<T> {\n\tctx: null | any;\n\t// unique object instance as a key to compare different promises\n\ttoken: {};\n\thasCatch: boolean;\n\tpending: FragmentFactory;\n\tthen: FragmentFactory;\n\tcatch: FragmentFactory;\n\t// ctx index for resolved value and rejected error\n\tvalue: number;\n\terror: number;\n\t// resolved value or rejected error\n\tresolved?: T;\n\t// the current factory function for creating the fragment\n\tcurrent: FragmentFactory | null;\n\t// the current fragment\n\tblock: Fragment | null;\n\t// tuple of the pending, then, catch fragment\n\tblocks: [null | Fragment, null | Fragment, null | Fragment];\n\t// DOM elements to mount and anchor on for the {#await} block\n\tmount: () => HTMLElement;\n\tanchor: HTMLElement;\n}\n\n// TODO: Remove this\nexport interface ResizeObserverSize {\n\treadonly blockSize: number;\n\treadonly inlineSize: number;\n}\n\nexport interface ResizeObserverEntry {\n\treadonly borderBoxSize: readonly ResizeObserverSize[];\n\treadonly contentBoxSize: readonly ResizeObserverSize[];\n\treadonly contentRect: DOMRectReadOnly;\n\treadonly devicePixelContentBoxSize: readonly ResizeObserverSize[];\n\treadonly target: Element;\n}\n\nexport type ResizeObserverBoxOptions = 'border-box' | 'content-box' | 'device-pixel-content-box';\n\nexport interface ResizeObserverOptions {\n\tbox?: ResizeObserverBoxOptions;\n}\n\nexport interface ResizeObserver {\n\tdisconnect(): void;\n\tobserve(target: Element, options?: ResizeObserverOptions): void;\n\tunobserve(target: Element): void;\n}\n\nexport interface ResizeObserverCallback {\n\t(entries: ResizeObserverEntry[], observer: ResizeObserver): void;\n}\n\nexport declare let ResizeObserver: {\n\tprototype: ResizeObserver;\n\tnew (callback: ResizeObserverCallback): ResizeObserver;\n};\n\nexport interface StyleInformation {\n\tstylesheet: CSSStyleSheet;\n\trules: Record<string, true>;\n}\n\nexport type TaskCallback = (now: number) => boolean | void;\n\nexport type TaskEntry = { c: TaskCallback; f: () => void };\n\n/**\n * INTERNAL, DO NOT USE. Code may change at any time.\n */\nexport interface Fragment {\n\tkey: string | null;\n\tfirst: null;\n\t/* create  */ c: () => void;\n\t/* claim   */ l: (nodes: any) => void;\n\t/* hydrate */ h: () => void;\n\t/* mount   */ m: (target: HTMLElement, anchor: any) => void;\n\t/* update  */ p: (ctx: T$$['ctx'], dirty: T$$['dirty']) => void;\n\t/* measure */ r: () => void;\n\t/* fix     */ f: () => void;\n\t/* animate */ a: () => void;\n\t/* intro   */ i: (local: any) => void;\n\t/* outro   */ o: (local: any) => void;\n\t/* destroy */ d: (detaching: 0 | 1) => void;\n}\n\nexport type FragmentFactory = (ctx: any) => Fragment;\n\nexport interface T$$ {\n\tdirty: number[];\n\tctx: any[];\n\tbound: any;\n\tupdate: () => void;\n\tcallbacks: any;\n\tafter_update: any[];\n\tprops: Record<string, 0 | string>;\n\tfragment: null | false | Fragment;\n\tnot_equal: any;\n\tbefore_update: any[];\n\tcontext: Map<any, any>;\n\ton_mount: any[];\n\ton_destroy: any[];\n\tskip_bound: boolean;\n\ton_disconnect: any[];\n\troot: Element | ShadowRoot;\n}\n\nexport interface Task {\n\tabort(): void;\n\tpromise: Promise<void>;\n}\n\n/**\n * Anything except a function\n */\ntype NotFunction<T> = T extends Function ? never : T;\n",
  "/node_modules/svelte/src/runtime/internal/public.d.ts": "import { SvelteComponent } from './Component.js';\nimport { SvelteComponentDev } from './dev.js';\n\nexport interface ComponentConstructorOptions<\n\tProps extends Record<string, any> = Record<string, any>\n> {\n\ttarget: Element | Document | ShadowRoot;\n\tanchor?: Element;\n\tprops?: Props;\n\tcontext?: Map<any, any>;\n\thydrate?: boolean;\n\tintro?: boolean;\n\t$$inline?: boolean;\n}\n\n/**\n * Convenience type to get the events the given component expects. Example:\n * ```html\n * <script lang=\"ts\">\n *    import type { ComponentEvents } from 'svelte';\n *    import Component from './Component.svelte';\n *\n *    function handleCloseEvent(event: ComponentEvents<Component>['close']) {\n *       console.log(event.detail);\n *    }\n * </script>\n *\n * <Component on:close={handleCloseEvent} />\n * ```\n */\nexport type ComponentEvents<Component extends SvelteComponent> =\n\tComponent extends SvelteComponentDev<any, infer Events> ? Events : never;\n\n/**\n * Convenience type to get the props the given component expects. Example:\n * ```html\n * <script lang=\"ts\">\n * \timport type { ComponentProps } from 'svelte';\n * \timport Component from './Component.svelte';\n *\n * \tconst props: ComponentProps<Component> = { foo: 'bar' }; // Errors if these aren't the correct props\n * </script>\n * ```\n */\nexport type ComponentProps<Component extends SvelteComponent> =\n\tComponent extends SvelteComponentDev<infer Props> ? Props : never;\n\n/**\n * Convenience type to get the type of a Svelte component. Useful for example in combination with\n * dynamic components using `<svelte:component>`.\n *\n * Example:\n * ```html\n * <script lang=\"ts\">\n * \timport type { ComponentType, SvelteComponent } from 'svelte';\n * \timport Component1 from './Component1.svelte';\n * \timport Component2 from './Component2.svelte';\n *\n * \tconst component: ComponentType = someLogic() ? Component1 : Component2;\n * \tconst componentOfCertainSubType: ComponentType<SvelteComponent<{ needsThisProp: string }>> = someLogic() ? Component1 : Component2;\n * </script>\n *\n * <svelte:component this={component} />\n * <svelte:component this={componentOfCertainSubType} needsThisProp=\"hello\" />\n * ```\n */\nexport type ComponentType<Component extends SvelteComponentDev = SvelteComponentDev> = (new (\n\toptions: ComponentConstructorOptions<\n\t\tComponent extends SvelteComponentDev<infer Props> ? Props : Record<string, any>\n\t>\n) => Component) & {\n\t/** The custom element version of the component. Only present if compiled with the `customElement` compiler option */\n\telement?: typeof HTMLElement;\n};\n\nexport interface DispatchOptions {\n\tcancelable?: boolean;\n}\n\nexport interface EventDispatcher<EventMap extends Record<string, any>> {\n\t// Implementation notes:\n\t// - undefined extends X instead of X extends undefined makes this work better with both strict and nonstrict mode\n\t// - | null | undefined is added for convenience, as they are equivalent for the custom event constructor (both result in a null detail)\n\t<Type extends keyof EventMap>(\n\t\t...args: null extends EventMap[Type]\n\t\t\t? [type: Type, parameter?: EventMap[Type] | null | undefined, options?: DispatchOptions]\n\t\t\t: undefined extends EventMap[Type]\n\t\t\t? [type: Type, parameter?: EventMap[Type] | null | undefined, options?: DispatchOptions]\n\t\t\t: [type: Type, parameter: EventMap[Type], options?: DispatchOptions]\n\t): boolean;\n}\n",
  "/node_modules/svelte/src/runtime/motion/private.d.ts": "import { Spring } from './public';\n\nexport interface TickContext<T> {\n\tinv_mass: number;\n\tdt: number;\n\topts: Spring<T>;\n\tsettled: boolean;\n}\n\nexport interface SpringOpts {\n\tstiffness?: number;\n\tdamping?: number;\n\tprecision?: number;\n}\n\nexport interface SpringUpdateOpts {\n\thard?: any;\n\tsoft?: string | number | boolean;\n}\n\nexport type Updater<T> = (target_value: T, value: T) => T;\n\nexport interface TweenedOptions<T> {\n\tdelay?: number;\n\tduration?: number | ((from: T, to: T) => number);\n\teasing?: (t: number) => number;\n\tinterpolate?: (a: T, b: T) => (t: number) => T;\n}\n",
  "/node_modules/svelte/src/runtime/motion/public.d.ts": "import { Readable } from '../store/public.js';\nimport { SpringUpdateOpts, TweenedOptions, Updater } from './private';\n\nexport interface Spring<T> extends Readable<T> {\n\tset: (new_value: T, opts?: SpringUpdateOpts) => Promise<void>;\n\tupdate: (fn: Updater<T>, opts?: SpringUpdateOpts) => Promise<void>;\n\tprecision: number;\n\tdamping: number;\n\tstiffness: number;\n}\n\nexport interface Tweened<T> extends Readable<T> {\n\tset(value: T, opts?: TweenedOptions<T>): Promise<void>;\n\tupdate(updater: Updater<T>, opts?: TweenedOptions<T>): Promise<void>;\n}\n\nexport * from './index.js';\n",
  "/node_modules/svelte/src/runtime/store/private.d.ts": "import { Readable, Subscriber } from './public.js';\n\n/** Cleanup logic callback. */\nexport type Invalidator<T> = (value?: T) => void;\n\n/** Pair of subscriber and invalidator. */\nexport type SubscribeInvalidateTuple<T> = [Subscriber<T>, Invalidator<T>];\n\n/** One or more `Readable`s. */\nexport type Stores =\n\t| Readable<any>\n\t| [Readable<any>, ...Array<Readable<any>>]\n\t| Array<Readable<any>>;\n\n/** One or more values from `Readable` stores. */\nexport type StoresValues<T> = T extends Readable<infer U>\n\t? U\n\t: { [K in keyof T]: T[K] extends Readable<infer U> ? U : never };\n",
  "/node_modules/svelte/src/runtime/store/public.d.ts": "import { Invalidator } from './private.js';\n\n/** Callback to inform of a value updates. */\nexport type Subscriber<T> = (value: T) => void;\n\n/** Unsubscribes from value updates. */\nexport type Unsubscriber = () => void;\n\n/** Callback to update a value. */\nexport type Updater<T> = (value: T) => T;\n\n/**\n * Start and stop notification callbacks.\n * This function is called when the first subscriber subscribes.\n *\n * @param {(value: T) => void} set Function that sets the value of the store.\n * @param {(value: Updater<T>) => void} update Function that sets the value of the store after passing the current value to the update function.\n * @returns {void | (() => void)} Optionally, a cleanup function that is called when the last remaining\n * subscriber unsubscribes.\n */\nexport type StartStopNotifier<T> = (\n\tset: (value: T) => void,\n\tupdate: (fn: Updater<T>) => void\n) => void | (() => void);\n\n/** Readable interface for subscribing. */\nexport interface Readable<T> {\n\t/**\n\t * Subscribe on value changes.\n\t * @param run subscription callback\n\t * @param invalidate cleanup callback\n\t */\n\tsubscribe(this: void, run: Subscriber<T>, invalidate?: Invalidator<T>): Unsubscriber;\n}\n\n/** Writable interface for both updating and subscribing. */\nexport interface Writable<T> extends Readable<T> {\n\t/**\n\t * Set value and inform subscribers.\n\t * @param value to set\n\t */\n\tset(this: void, value: T): void;\n\n\t/**\n\t * Update value using callback and inform subscribers.\n\t * @param updater callback\n\t */\n\tupdate(this: void, updater: Updater<T>): void;\n}\n\nexport * from './index.js';\n",
  "/node_modules/svelte/src/runtime/transition/public.d.ts": "export type EasingFunction = (t: number) => number;\n\nexport interface TransitionConfig {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n\tcss?: (t: number, u: number) => string;\n\ttick?: (t: number, u: number) => void;\n}\n\nexport interface BlurParams {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n\tamount?: number | string;\n\topacity?: number;\n}\n\nexport interface FadeParams {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n}\n\nexport interface FlyParams {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n\tx?: number | string;\n\ty?: number | string;\n\topacity?: number;\n}\n\nexport interface SlideParams {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n\taxis?: 'x' | 'y';\n}\n\nexport interface ScaleParams {\n\tdelay?: number;\n\tduration?: number;\n\teasing?: EasingFunction;\n\tstart?: number;\n\topacity?: number;\n}\n\nexport interface DrawParams {\n\tdelay?: number;\n\tspeed?: number;\n\tduration?: number | ((len: number) => number);\n\teasing?: EasingFunction;\n}\n\nexport interface CrossfadeParams {\n\tdelay?: number;\n\tduration?: number | ((len: number) => number);\n\teasing?: EasingFunction;\n}\n\nexport * from './index.js';\n",
  "/node_modules/svelte/src/compiler/compile/css/private.d.ts": "export interface CssNode {\n\ttype: string;\n\tstart: number;\n\tend: number;\n\t[prop_name: string]: any;\n}\n",
  "/node_modules/svelte/src/compiler/compile/nodes/interfaces.d.ts": "import Tag from './shared/Tag';\nimport Action from './Action';\nimport Animation from './Animation';\nimport Attribute from './Attribute';\nimport AwaitBlock from './AwaitBlock';\nimport Binding from './Binding';\nimport Body from './Body';\nimport CatchBlock from './CatchBlock';\nimport Class from './Class';\nimport StyleDirective from './StyleDirective';\nimport Comment from './Comment';\nimport ConstTag from './ConstTag';\nimport DebugTag from './DebugTag';\nimport Document from './Document';\nimport EachBlock from './EachBlock';\nimport Element from './Element';\nimport ElseBlock from './ElseBlock';\nimport EventHandler from './EventHandler';\nimport Fragment from './Fragment';\nimport Head from './Head';\nimport IfBlock from './IfBlock';\nimport InlineComponent from './InlineComponent';\nimport KeyBlock from './KeyBlock';\nimport Let from './Let';\nimport MustacheTag from './MustacheTag';\nimport Options from './Options';\nimport PendingBlock from './PendingBlock';\nimport RawMustacheTag from './RawMustacheTag';\nimport Slot from './Slot';\nimport SlotTemplate from './SlotTemplate';\nimport Text from './Text';\nimport ThenBlock from './ThenBlock';\nimport Title from './Title';\nimport Transition from './Transition';\nimport Window from './Window';\n\n// note: to write less types each of types in union below should have type defined as literal\n// https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#discriminating-unions\nexport type INode =\n\t| Action\n\t| Animation\n\t| Attribute\n\t| AwaitBlock\n\t| Binding\n\t| Body\n\t| CatchBlock\n\t| Class\n\t| Comment\n\t| ConstTag\n\t| DebugTag\n\t| Document\n\t| EachBlock\n\t| Element\n\t| ElseBlock\n\t| EventHandler\n\t| Fragment\n\t| Head\n\t| IfBlock\n\t| InlineComponent\n\t| KeyBlock\n\t| Let\n\t| MustacheTag\n\t| Options\n\t| PendingBlock\n\t| RawMustacheTag\n\t| Slot\n\t| SlotTemplate\n\t| StyleDirective\n\t| Tag\n\t| Text\n\t| ThenBlock\n\t| Title\n\t| Transition\n\t| Window;\n\nexport type INodeAllowConstTag =\n\t| IfBlock\n\t| ElseBlock\n\t| EachBlock\n\t| CatchBlock\n\t| ThenBlock\n\t| InlineComponent\n\t| SlotTemplate;\n",
  "/node_modules/svelte/src/compiler/compile/render_ssr/private.d.ts": "import { CompileOptions } from '../../interfaces.js';\n\nexport interface RenderOptions extends CompileOptions {\n\tlocate: (c: number) => { line: number; column: number };\n\thead_id?: string;\n\thas_added_svelte_hash?: boolean;\n}\n",
  "/node_modules/svelte/node_modules/@jridgewell/sourcemap-codec/dist/types/sourcemap-codec.d.ts": "export declare type SourceMapSegment = [number] | [number, number, number, number] | [number, number, number, number, number];\nexport declare type SourceMapLine = SourceMapSegment[];\nexport declare type SourceMapMappings = SourceMapLine[];\nexport declare function decode(mappings: string): SourceMapMappings;\nexport declare function encode(decoded: SourceMapMappings): string;\nexport declare function encode(decoded: Readonly<SourceMapMappings>): string;\n",
  "/node_modules/svelte2tsx/index.d.ts": "import ts from 'typescript';\n\nexport interface SvelteCompiledToTsx {\n    code: string;\n    map: import(\"magic-string\").SourceMap;\n    exportedNames: IExportedNames;\n    /**\n     * @deprecated Use TypeScript's `TypeChecker` to get the type information instead. This only covers literal typings.\n     */\n    events: ComponentEvents;\n}\n\nexport interface IExportedNames {\n    has(name: string): boolean;\n}\n\n/**\n * @deprecated Use TypeScript's `TypeChecker` to get the type information instead. This only covers literal typings.\n */\nexport interface ComponentEvents {\n    getAll(): { name: string; type: string; doc?: string }[];\n}\n\nexport function svelte2tsx(\n    svelte: string,\n    options?: {\n        /**\n         * Path of the file\n         */\n        filename?: string;\n        /**\n         * If the given file uses TypeScript inside script.\n         * This cannot be inferred from `svelte2tsx` by looking\n         * at the attributes of the script tag because the\n         * user may have set a default-language through\n         * `svelte-preprocess`.\n         */\n        isTsFile?: boolean;\n        /**\n         * Whether to try emitting result when there's a syntax error in the template\n         */\n        emitOnTemplateError?: boolean;\n        /**\n         * The namespace option from svelte config\n         * see https://svelte.dev/docs#svelte_compile for more info\n         */\n        namespace?: string;\n        /**\n         * When setting this to 'dts', all ts/js code and the template code will be thrown out.\n         * Only the `code` property will be set on the returned element.\n         * Use this as an intermediate step to generate type definitions from a component.\n         * It is expected to pass the result to TypeScript which should handle emitting the d.ts files.\n         * The shims need to be provided by the user ambient-style,\n         * for example through `filenames.push(require.resolve('svelte2tsx/svelte-shims.d.ts'))`.\n         * If you pass 'ts', it uses the regular Svelte->TS/JS transformation.\n         * \n         * @default 'ts'\n         */\n        mode?: 'ts' | 'dts',\n        /**\n         * Tells svelte2tsx from which namespace some specific functions to use.\n         * \n         * Example: 'svelteHTML' -> svelteHTML.createElement<..>(..)\n         * \n         * A namespace needs to implement the following functions:\n         * - `createElement(str: string, validAttributes: ..): Element`\n         * - `mapElementTag<Key extends keyof YourElements>(str: Key): YourElements[Key]`\n         * \n         * @default 'svelteHTML'\n         */\n        typingsNamespace?: string;\n        /**\n         * The accessor option from svelte config. \n         * Would be overridden by the same config in the svelte:option element if exist\n         * see https://svelte.dev/docs#svelte_compile for more info\n         */\n        accessors?: boolean\n    }\n): SvelteCompiledToTsx\n\nexport interface EmitDtsConfig {\n    /**\n     * Where to output the declaration files\n     */\n    declarationDir: string;\n    /**\n     * Path to `svelte-shims.d.ts` of `svelte2tsx`.\n     * Example: `require.resolve('svelte2tsx/svelte-shims.d.ts')`\n     * \n     * If a path is given that points to `svelte-shims-v4.d.ts`,\n     * the `SvelteComponent` import is used instead of\n     * `SvelteComponentTyped` which is deprecated in Svelte v4.\n     */\n    svelteShimsPath: string;\n    /**\n     * If you want to emit types only for part of your project,\n     * then set this to the folder for which the types should be emitted.\n     * Most of the time you don't need this. For SvelteKit, this is for example\n     * set to `src/lib` by default.\n     */\n    libRoot?: string;\n}\n\n// to make typo fix non-breaking, continue to export the old name but mark it as deprecated\n/**@deprecated*/\nexport interface EmitDtsConig extends EmitDtsConfig {}\n\n/**\n * Searches for a jsconfig or tsconfig starting at `root` and emits d.ts files\n * into `declarationDir` using the ambient file from `svelteShimsPath`.\n * Note: Handwritten `d.ts` files are not copied over; TypeScript does not\n * touch these files.\n */\nexport function emitDts(config: EmitDtsConfig): Promise<void>;\n\n\n/**\n * ## Internal, do not use! This is subject to change at any time.\n *\n * Implementation notice: If one of the methods use a TypeScript function which is not from the\n * static top level `ts` namespace, it must be passed as a parameter.\n */\nexport const internalHelpers: {\n    isKitFile: (\n        fileName: string,\n        options: InternalHelpers.KitFilesSettings\n    ) => boolean;\n    isKitRouteFile: (basename: string) => boolean,\n    isClientHooksFile: (\n        fileName: string,\n        basename: string,\n        clientHooksPath: string\n    ) =>boolean,\n    isServerHooksFile: (\n        fileName: string,\n        basename: string,\n        serverHooksPath: string\n    )=> boolean,\n    isParamsFile: (fileName: string, basename: string, paramsPath: string) =>boolean,\n    upsertKitFile: (\n        _ts: typeof ts,\n        fileName: string,\n        kitFilesSettings: InternalHelpers.KitFilesSettings,\n        getSource: () => ts.SourceFile | undefined,\n        surround?: (code: string) => string\n    ) => { text: string; addedCode: InternalHelpers.AddedCode[] } | undefined,\n    toVirtualPos: (pos: number, addedCode: InternalHelpers.AddedCode[]) => number,\n    toOriginalPos: (pos: number, addedCode: InternalHelpers.AddedCode[]) => {pos: number; inGenerated: boolean},\n    findExports: (_ts: typeof ts, source: ts.SourceFile, isTsFile: boolean) => Map<\n        string,\n        | {\n            type: 'function';\n            node: ts.FunctionDeclaration | ts.ArrowFunction | ts.FunctionExpression;\n            hasTypeDefinition: boolean;\n        }\n        | {\n            type: 'var';\n            node: ts.VariableDeclaration;\n            hasTypeDefinition: boolean;\n        }\n    >,\n};\n\n/**\n * ## Internal, do not use! This is subject to change at any time.\n */\nexport namespace InternalHelpers {\n    export interface AddedCode {\n        generatedPos: number;\n        originalPos: number;\n        length: number;\n        total: number;\n        inserted: string;\n    }\n\n    export interface KitFilesSettings {\n        serverHooksPath: string;\n        clientHooksPath: string;\n        paramsPath: string;\n    }\n}\n",
  "/node_modules/svelte2tsx/svelte-jsx-v4.d.ts": "/// <reference lib=\"dom\" />\n\ndeclare namespace svelteHTML {\n\n  // Every namespace eligible for use needs to implement the following two functions\n  /**\n   * @internal do not use\n   */\n  function mapElementTag<K extends keyof ElementTagNameMap>(\n    tag: K\n  ): ElementTagNameMap[K];\n  function mapElementTag<K extends keyof SVGElementTagNameMap>(\n    tag: K\n  ): SVGElementTagNameMap[K];\n  function mapElementTag(\n    tag: any\n  ): any; // needs to be any because used in context of <svelte:element>\n\n  /**\n   * @internal do not use\n   */\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrs: string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrsEnhancers: T, attrs: (string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]) & T\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n\n  // For backwards-compatibility and ease-of-use, in case someone enhanced the typings from import('svelte/elements').HTMLAttributes/SVGAttributes\n  interface HTMLAttributes<T extends EventTarget = any> {}\n  interface SVGAttributes<T extends EventTarget = any> {}\n\n  /**\n   * @internal do not use\n   */\n  type HTMLProps<Property extends string, Override> =\n    Omit<import('svelte/elements').SvelteHTMLElements[Property], keyof Override> & Override;\n\n  interface IntrinsicElements {\n    a: HTMLProps<'a', HTMLAttributes>;\n    abbr: HTMLProps<'abbr', HTMLAttributes>;\n    address: HTMLProps<'address', HTMLAttributes>;\n    area: HTMLProps<'area', HTMLAttributes>;\n    article: HTMLProps<'article', HTMLAttributes>;\n    aside: HTMLProps<'aside', HTMLAttributes>;\n    audio: HTMLProps<'audio', HTMLAttributes>;\n    b: HTMLProps<'b', HTMLAttributes>;\n    base: HTMLProps<'base', HTMLAttributes>;\n    bdi: HTMLProps<'bdi', HTMLAttributes>;\n    bdo: HTMLProps<'bdo', HTMLAttributes>;\n    big: HTMLProps<'big', HTMLAttributes>;\n    blockquote: HTMLProps<'blockquote', HTMLAttributes>;\n    body: HTMLProps<'body', HTMLAttributes>;\n    br: HTMLProps<'br', HTMLAttributes>;\n    button: HTMLProps<'button', HTMLAttributes>;\n    canvas: HTMLProps<'canvas', HTMLAttributes>;\n    caption: HTMLProps<'caption', HTMLAttributes>;\n    cite: HTMLProps<'cite', HTMLAttributes>;\n    code: HTMLProps<'code', HTMLAttributes>;\n    col: HTMLProps<'col', HTMLAttributes>;\n    colgroup: HTMLProps<'colgroup', HTMLAttributes>;\n    data: HTMLProps<'data', HTMLAttributes>;\n    datalist: HTMLProps<'datalist', HTMLAttributes>;\n    dd: HTMLProps<'dd', HTMLAttributes>;\n    del: HTMLProps<'del', HTMLAttributes>;\n    details: HTMLProps<'details', HTMLAttributes>;\n    dfn: HTMLProps<'dfn', HTMLAttributes>;\n    dialog: HTMLProps<'dialog', HTMLAttributes>;\n    div: HTMLProps<'div', HTMLAttributes>;\n    dl: HTMLProps<'dl', HTMLAttributes>;\n    dt: HTMLProps<'dt', HTMLAttributes>;\n    em: HTMLProps<'em', HTMLAttributes>;\n    embed: HTMLProps<'embed', HTMLAttributes>;\n    fieldset: HTMLProps<'fieldset', HTMLAttributes>;\n    figcaption: HTMLProps<'figcaption', HTMLAttributes>;\n    figure: HTMLProps<'figure', HTMLAttributes>;\n    footer: HTMLProps<'footer', HTMLAttributes>;\n    form: HTMLProps<'form', HTMLAttributes>;\n    h1: HTMLProps<'h1', HTMLAttributes>;\n    h2: HTMLProps<'h2', HTMLAttributes>;\n    h3: HTMLProps<'h3', HTMLAttributes>;\n    h4: HTMLProps<'h4', HTMLAttributes>;\n    h5: HTMLProps<'h5', HTMLAttributes>;\n    h6: HTMLProps<'h6', HTMLAttributes>;\n    head: HTMLProps<'head', HTMLAttributes>;\n    header: HTMLProps<'header', HTMLAttributes>;\n    hgroup: HTMLProps<'hgroup', HTMLAttributes>;\n    hr: HTMLProps<'hr', HTMLAttributes>;\n    html: HTMLProps<'html', HTMLAttributes>;\n    i: HTMLProps<'i', HTMLAttributes>;\n    iframe: HTMLProps<'iframe', HTMLAttributes>;\n    img: HTMLProps<'img', HTMLAttributes>;\n    input: HTMLProps<'input', HTMLAttributes>;\n    ins: HTMLProps<'ins', HTMLAttributes>;\n    kbd: HTMLProps<'kbd', HTMLAttributes>;\n    keygen: HTMLProps<'keygen', HTMLAttributes>;\n    label: HTMLProps<'label', HTMLAttributes>;\n    legend: HTMLProps<'legend', HTMLAttributes>;\n    li: HTMLProps<'li', HTMLAttributes>;\n    link: HTMLProps<'link', HTMLAttributes>;\n    main: HTMLProps<'main', HTMLAttributes>;\n    map: HTMLProps<'map', HTMLAttributes>;\n    mark: HTMLProps<'mark', HTMLAttributes>;\n    menu: HTMLProps<'menu', HTMLAttributes>;\n    menuitem: HTMLProps<'menuitem', HTMLAttributes>;\n    meta: HTMLProps<'meta', HTMLAttributes>;\n    meter: HTMLProps<'meter', HTMLAttributes>;\n    nav: HTMLProps<'nav', HTMLAttributes>;\n    noscript: HTMLProps<'noscript', HTMLAttributes>;\n    object: HTMLProps<'object', HTMLAttributes>;\n    ol: HTMLProps<'ol', HTMLAttributes>;\n    optgroup: HTMLProps<'optgroup', HTMLAttributes>;\n    option: HTMLProps<'option', HTMLAttributes>;\n    output: HTMLProps<'output', HTMLAttributes>;\n    p: HTMLProps<'p', HTMLAttributes>;\n    param: HTMLProps<'param', HTMLAttributes>;\n    picture: HTMLProps<'picture', HTMLAttributes>;\n    pre: HTMLProps<'pre', HTMLAttributes>;\n    progress: HTMLProps<'progress', HTMLAttributes>;\n    q: HTMLProps<'q', HTMLAttributes>;\n    rp: HTMLProps<'rp', HTMLAttributes>;\n    rt: HTMLProps<'rt', HTMLAttributes>;\n    ruby: HTMLProps<'ruby', HTMLAttributes>;\n    s: HTMLProps<'s', HTMLAttributes>;\n    samp: HTMLProps<'samp', HTMLAttributes>;\n    slot: HTMLProps<'slot', HTMLAttributes>;\n    script: HTMLProps<'script', HTMLAttributes>;\n    section: HTMLProps<'section', HTMLAttributes>;\n    select: HTMLProps<'select', HTMLAttributes>;\n    small: HTMLProps<'small', HTMLAttributes>;\n    source: HTMLProps<'source', HTMLAttributes>;\n    span: HTMLProps<'span', HTMLAttributes>;\n    strong: HTMLProps<'strong', HTMLAttributes>;\n    style: HTMLProps<'style', HTMLAttributes>;\n    sub: HTMLProps<'sub', HTMLAttributes>;\n    summary: HTMLProps<'summary', HTMLAttributes>;\n    sup: HTMLProps<'sup', HTMLAttributes>;\n    table: HTMLProps<'table', HTMLAttributes>;\n    template: HTMLProps<'template', HTMLAttributes>;\n    tbody: HTMLProps<'tbody', HTMLAttributes>;\n    td: HTMLProps<'td', HTMLAttributes>;\n    textarea: HTMLProps<'textarea', HTMLAttributes>;\n    tfoot: HTMLProps<'tfoot', HTMLAttributes>;\n    th: HTMLProps<'th', HTMLAttributes>;\n    thead: HTMLProps<'thead', HTMLAttributes>;\n    time: HTMLProps<'time', HTMLAttributes>;\n    title: HTMLProps<'title', HTMLAttributes>;\n    tr: HTMLProps<'tr', HTMLAttributes>;\n    track: HTMLProps<'track', HTMLAttributes>;\n    u: HTMLProps<'u', HTMLAttributes>;\n    ul: HTMLProps<'ul', HTMLAttributes>;\n    var: HTMLProps<'var', HTMLAttributes>;\n    video: HTMLProps<'video', HTMLAttributes>;\n    wbr: HTMLProps<'wbr', HTMLAttributes>;\n    webview: HTMLProps<'webview', HTMLAttributes>;\n    // SVG\n    svg: HTMLProps<'svg', SVGAttributes>;\n\n    animate: HTMLProps<'animate', SVGAttributes>;\n    animateMotion: HTMLProps<'animateMotion', SVGAttributes>;\n    animateTransform: HTMLProps<'animateTransform', SVGAttributes>;\n    circle: HTMLProps<'circle', SVGAttributes>;\n    clipPath: HTMLProps<'clipPath', SVGAttributes>;\n    defs: HTMLProps<'defs', SVGAttributes>;\n    desc: HTMLProps<'desc', SVGAttributes>;\n    ellipse: HTMLProps<'ellipse', SVGAttributes>;\n    feBlend: HTMLProps<'feBlend', SVGAttributes>;\n    feColorMatrix: HTMLProps<'feColorMatrix', SVGAttributes>;\n    feComponentTransfer: HTMLProps<'feComponentTransfer', SVGAttributes>;\n    feComposite: HTMLProps<'feComposite', SVGAttributes>;\n    feConvolveMatrix: HTMLProps<'feConvolveMatrix', SVGAttributes>;\n    feDiffuseLighting: HTMLProps<'feDiffuseLighting', SVGAttributes>;\n    feDisplacementMap: HTMLProps<'feDisplacementMap', SVGAttributes>;\n    feDistantLight: HTMLProps<'feDistantLight', SVGAttributes>;\n    feDropShadow: HTMLProps<'feDropShadow', SVGAttributes>;\n    feFlood: HTMLProps<'feFlood', SVGAttributes>;\n    feFuncA: HTMLProps<'feFuncA', SVGAttributes>;\n    feFuncB: HTMLProps<'feFuncB', SVGAttributes>;\n    feFuncG: HTMLProps<'feFuncG', SVGAttributes>;\n    feFuncR: HTMLProps<'feFuncR', SVGAttributes>;\n    feGaussianBlur: HTMLProps<'feGaussianBlur', SVGAttributes>;\n    feImage: HTMLProps<'feImage', SVGAttributes>;\n    feMerge: HTMLProps<'feMerge', SVGAttributes>;\n    feMergeNode: HTMLProps<'feMergeNode', SVGAttributes>;\n    feMorphology: HTMLProps<'feMorphology', SVGAttributes>;\n    feOffset: HTMLProps<'feOffset', SVGAttributes>;\n    fePointLight: HTMLProps<'fePointLight', SVGAttributes>;\n    feSpecularLighting: HTMLProps<'feSpecularLighting', SVGAttributes>;\n    feSpotLight: HTMLProps<'feSpotLight', SVGAttributes>;\n    feTile: HTMLProps<'feTile', SVGAttributes>;\n    feTurbulence: HTMLProps<'feTurbulence', SVGAttributes>;\n    filter: HTMLProps<'filter', SVGAttributes>;\n    foreignObject: HTMLProps<'foreignObject', SVGAttributes>;\n    g: HTMLProps<'g', SVGAttributes>;\n    image: HTMLProps<'image', SVGAttributes>;\n    line: HTMLProps<'line', SVGAttributes>;\n    linearGradient: HTMLProps<'linearGradient', SVGAttributes>;\n    marker: HTMLProps<'marker', SVGAttributes>;\n    mask: HTMLProps<'mask', SVGAttributes>;\n    metadata: HTMLProps<'metadata', SVGAttributes>;\n    mpath: HTMLProps<'mpath', SVGAttributes>;\n    path: HTMLProps<'path', SVGAttributes>;\n    pattern: HTMLProps<'pattern', SVGAttributes>;\n    polygon: HTMLProps<'polygon', SVGAttributes>;\n    polyline: HTMLProps<'polyline', SVGAttributes>;\n    radialGradient: HTMLProps<'radialGradient', SVGAttributes>;\n    rect: HTMLProps<'rect', SVGAttributes>;\n    stop: HTMLProps<'stop', SVGAttributes>;\n    switch: HTMLProps<'switch', SVGAttributes>;\n    symbol: HTMLProps<'symbol', SVGAttributes>;\n    text: HTMLProps<'text', SVGAttributes>;\n    textPath: HTMLProps<'textPath', SVGAttributes>;\n    tspan: HTMLProps<'tspan', SVGAttributes>;\n    use: HTMLProps<'use', SVGAttributes>;\n    view: HTMLProps<'view', SVGAttributes>;\n\n    // Svelte specific\n    'svelte:window': HTMLProps<'svelte:window', HTMLAttributes>;\n    'svelte:body': HTMLProps<'svelte:body', HTMLAttributes>;\n    'svelte:fragment': { slot?: string };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n\n    [name: string]: { [name: string]: any };\n  }\n\n}\n",
  "/node_modules/svelte2tsx/svelte-jsx.d.ts": "/// <reference lib=\"dom\" />\n\ndeclare namespace svelteHTML {\n\n  // Every namespace eligible for use needs to implement the following two functions\n  /**\n   * @internal do not use\n   */\n  function mapElementTag<K extends keyof ElementTagNameMap>(\n    tag: K\n  ): ElementTagNameMap[K];\n  function mapElementTag<K extends keyof SVGElementTagNameMap>(\n    tag: K\n  ): SVGElementTagNameMap[K];\n  function mapElementTag(\n    tag: any\n  ): any; // needs to be any because used in context of <svelte:element>\n\n  /**\n   * @internal do not use\n   */\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrs: string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrsEnhancers: T, attrs: (string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]) & T\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n\n  // For backwards-compatibility and ease-of-use, in case someone enhanced the typings from import('svelte/elements').HTMLAttributes/SVGAttributes\n  interface HTMLAttributes<T extends EventTarget = any> {}\n  interface SVGAttributes<T extends EventTarget = any> {}\n\n  /**\n   * @internal do not use\n   */\n  type EventsWithColon<T> = {[Property in keyof T as Property extends `on${infer Key}` ? `on:${Key}` : Property]?: T[Property] }\n  /**\n   * @internal do not use\n   */\n  type HTMLProps<Property extends string, Override> =\n    // This omit chain ensures that properties manually defined in the new transformation take precedence\n    // over those manually defined in the old, taking precendence over the defaults, to make sth like this possible\n    // https://github.com/sveltejs/language-tools/issues/1352#issuecomment-1248627516\n    // The AttributeNames Omit is necessary because the old transformation only has HTMLAttributes on which types for all\n    // elements are defined, which would silence type errors in the new transformation.\n    Omit<\n      Omit<import('svelte/elements').SvelteHTMLElements[Property], keyof EventsWithColon<Omit<svelte.JSX.IntrinsicElements[Property & string], svelte.JSX.AttributeNames>>> & EventsWithColon<Omit<svelte.JSX.IntrinsicElements[Property & string], svelte.JSX.AttributeNames>>,\n      keyof Override\n    > & Override;\n  /**\n   * @internal do not use\n   */\n  type RemoveIndex<T> = {\n    [ K in keyof T as string extends K ? never : K ] : T[K]\n  };\n\n  // the following type construct makes sure that we can use the new typings while maintaining backwards-compatibility in case someone enhanced the old typings\n  interface IntrinsicElements extends Omit<RemoveIndex<svelte.JSX.IntrinsicElements>, keyof RemoveIndex<import('svelte/elements').SvelteHTMLElements>> {\n    a: HTMLProps<'a', HTMLAttributes>;\n    abbr: HTMLProps<'abbr', HTMLAttributes>;\n    address: HTMLProps<'address', HTMLAttributes>;\n    area: HTMLProps<'area', HTMLAttributes>;\n    article: HTMLProps<'article', HTMLAttributes>;\n    aside: HTMLProps<'aside', HTMLAttributes>;\n    audio: HTMLProps<'audio', HTMLAttributes>;\n    b: HTMLProps<'b', HTMLAttributes>;\n    base: HTMLProps<'base', HTMLAttributes>;\n    bdi: HTMLProps<'bdi', HTMLAttributes>;\n    bdo: HTMLProps<'bdo', HTMLAttributes>;\n    big: HTMLProps<'big', HTMLAttributes>;\n    blockquote: HTMLProps<'blockquote', HTMLAttributes>;\n    body: HTMLProps<'body', HTMLAttributes>;\n    br: HTMLProps<'br', HTMLAttributes>;\n    button: HTMLProps<'button', HTMLAttributes>;\n    canvas: HTMLProps<'canvas', HTMLAttributes>;\n    caption: HTMLProps<'caption', HTMLAttributes>;\n    cite: HTMLProps<'cite', HTMLAttributes>;\n    code: HTMLProps<'code', HTMLAttributes>;\n    col: HTMLProps<'col', HTMLAttributes>;\n    colgroup: HTMLProps<'colgroup', HTMLAttributes>;\n    data: HTMLProps<'data', HTMLAttributes>;\n    datalist: HTMLProps<'datalist', HTMLAttributes>;\n    dd: HTMLProps<'dd', HTMLAttributes>;\n    del: HTMLProps<'del', HTMLAttributes>;\n    details: HTMLProps<'details', HTMLAttributes>;\n    dfn: HTMLProps<'dfn', HTMLAttributes>;\n    dialog: HTMLProps<'dialog', HTMLAttributes>;\n    div: HTMLProps<'div', HTMLAttributes>;\n    dl: HTMLProps<'dl', HTMLAttributes>;\n    dt: HTMLProps<'dt', HTMLAttributes>;\n    em: HTMLProps<'em', HTMLAttributes>;\n    embed: HTMLProps<'embed', HTMLAttributes>;\n    fieldset: HTMLProps<'fieldset', HTMLAttributes>;\n    figcaption: HTMLProps<'figcaption', HTMLAttributes>;\n    figure: HTMLProps<'figure', HTMLAttributes>;\n    footer: HTMLProps<'footer', HTMLAttributes>;\n    form: HTMLProps<'form', HTMLAttributes>;\n    h1: HTMLProps<'h1', HTMLAttributes>;\n    h2: HTMLProps<'h2', HTMLAttributes>;\n    h3: HTMLProps<'h3', HTMLAttributes>;\n    h4: HTMLProps<'h4', HTMLAttributes>;\n    h5: HTMLProps<'h5', HTMLAttributes>;\n    h6: HTMLProps<'h6', HTMLAttributes>;\n    head: HTMLProps<'head', HTMLAttributes>;\n    header: HTMLProps<'header', HTMLAttributes>;\n    hgroup: HTMLProps<'hgroup', HTMLAttributes>;\n    hr: HTMLProps<'hr', HTMLAttributes>;\n    html: HTMLProps<'html', HTMLAttributes>;\n    i: HTMLProps<'i', HTMLAttributes>;\n    iframe: HTMLProps<'iframe', HTMLAttributes>;\n    img: HTMLProps<'img', HTMLAttributes>;\n    input: HTMLProps<'input', HTMLAttributes>;\n    ins: HTMLProps<'ins', HTMLAttributes>;\n    kbd: HTMLProps<'kbd', HTMLAttributes>;\n    keygen: HTMLProps<'keygen', HTMLAttributes>;\n    label: HTMLProps<'label', HTMLAttributes>;\n    legend: HTMLProps<'legend', HTMLAttributes>;\n    li: HTMLProps<'li', HTMLAttributes>;\n    link: HTMLProps<'link', HTMLAttributes>;\n    main: HTMLProps<'main', HTMLAttributes>;\n    map: HTMLProps<'map', HTMLAttributes>;\n    mark: HTMLProps<'mark', HTMLAttributes>;\n    menu: HTMLProps<'menu', HTMLAttributes>;\n    menuitem: HTMLProps<'menuitem', HTMLAttributes>;\n    meta: HTMLProps<'meta', HTMLAttributes>;\n    meter: HTMLProps<'meter', HTMLAttributes>;\n    nav: HTMLProps<'nav', HTMLAttributes>;\n    noscript: HTMLProps<'noscript', HTMLAttributes>;\n    object: HTMLProps<'object', HTMLAttributes>;\n    ol: HTMLProps<'ol', HTMLAttributes>;\n    optgroup: HTMLProps<'optgroup', HTMLAttributes>;\n    option: HTMLProps<'option', HTMLAttributes>;\n    output: HTMLProps<'output', HTMLAttributes>;\n    p: HTMLProps<'p', HTMLAttributes>;\n    param: HTMLProps<'param', HTMLAttributes>;\n    picture: HTMLProps<'picture', HTMLAttributes>;\n    pre: HTMLProps<'pre', HTMLAttributes>;\n    progress: HTMLProps<'progress', HTMLAttributes>;\n    q: HTMLProps<'q', HTMLAttributes>;\n    rp: HTMLProps<'rp', HTMLAttributes>;\n    rt: HTMLProps<'rt', HTMLAttributes>;\n    ruby: HTMLProps<'ruby', HTMLAttributes>;\n    s: HTMLProps<'s', HTMLAttributes>;\n    samp: HTMLProps<'samp', HTMLAttributes>;\n    slot: HTMLProps<'slot', HTMLAttributes>;\n    script: HTMLProps<'script', HTMLAttributes>;\n    section: HTMLProps<'section', HTMLAttributes>;\n    select: HTMLProps<'select', HTMLAttributes>;\n    small: HTMLProps<'small', HTMLAttributes>;\n    source: HTMLProps<'source', HTMLAttributes>;\n    span: HTMLProps<'span', HTMLAttributes>;\n    strong: HTMLProps<'strong', HTMLAttributes>;\n    style: HTMLProps<'style', HTMLAttributes>;\n    sub: HTMLProps<'sub', HTMLAttributes>;\n    summary: HTMLProps<'summary', HTMLAttributes>;\n    sup: HTMLProps<'sup', HTMLAttributes>;\n    table: HTMLProps<'table', HTMLAttributes>;\n    template: HTMLProps<'template', HTMLAttributes>;\n    tbody: HTMLProps<'tbody', HTMLAttributes>;\n    td: HTMLProps<'td', HTMLAttributes>;\n    textarea: HTMLProps<'textarea', HTMLAttributes>;\n    tfoot: HTMLProps<'tfoot', HTMLAttributes>;\n    th: HTMLProps<'th', HTMLAttributes>;\n    thead: HTMLProps<'thead', HTMLAttributes>;\n    time: HTMLProps<'time', HTMLAttributes>;\n    title: HTMLProps<'title', HTMLAttributes>;\n    tr: HTMLProps<'tr', HTMLAttributes>;\n    track: HTMLProps<'track', HTMLAttributes>;\n    u: HTMLProps<'u', HTMLAttributes>;\n    ul: HTMLProps<'ul', HTMLAttributes>;\n    var: HTMLProps<'var', HTMLAttributes>;\n    video: HTMLProps<'video', HTMLAttributes>;\n    wbr: HTMLProps<'wbr', HTMLAttributes>;\n    webview: HTMLProps<'webview', HTMLAttributes>;\n    // SVG\n    svg: HTMLProps<'svg', SVGAttributes>;\n\n    animate: HTMLProps<'animate', SVGAttributes>;\n    animateMotion: HTMLProps<'animateMotion', SVGAttributes>;\n    animateTransform: HTMLProps<'animateTransform', SVGAttributes>;\n    circle: HTMLProps<'circle', SVGAttributes>;\n    clipPath: HTMLProps<'clipPath', SVGAttributes>;\n    defs: HTMLProps<'defs', SVGAttributes>;\n    desc: HTMLProps<'desc', SVGAttributes>;\n    ellipse: HTMLProps<'ellipse', SVGAttributes>;\n    feBlend: HTMLProps<'feBlend', SVGAttributes>;\n    feColorMatrix: HTMLProps<'feColorMatrix', SVGAttributes>;\n    feComponentTransfer: HTMLProps<'feComponentTransfer', SVGAttributes>;\n    feComposite: HTMLProps<'feComposite', SVGAttributes>;\n    feConvolveMatrix: HTMLProps<'feConvolveMatrix', SVGAttributes>;\n    feDiffuseLighting: HTMLProps<'feDiffuseLighting', SVGAttributes>;\n    feDisplacementMap: HTMLProps<'feDisplacementMap', SVGAttributes>;\n    feDistantLight: HTMLProps<'feDistantLight', SVGAttributes>;\n    feDropShadow: HTMLProps<'feDropShadow', SVGAttributes>;\n    feFlood: HTMLProps<'feFlood', SVGAttributes>;\n    feFuncA: HTMLProps<'feFuncA', SVGAttributes>;\n    feFuncB: HTMLProps<'feFuncB', SVGAttributes>;\n    feFuncG: HTMLProps<'feFuncG', SVGAttributes>;\n    feFuncR: HTMLProps<'feFuncR', SVGAttributes>;\n    feGaussianBlur: HTMLProps<'feGaussianBlur', SVGAttributes>;\n    feImage: HTMLProps<'feImage', SVGAttributes>;\n    feMerge: HTMLProps<'feMerge', SVGAttributes>;\n    feMergeNode: HTMLProps<'feMergeNode', SVGAttributes>;\n    feMorphology: HTMLProps<'feMorphology', SVGAttributes>;\n    feOffset: HTMLProps<'feOffset', SVGAttributes>;\n    fePointLight: HTMLProps<'fePointLight', SVGAttributes>;\n    feSpecularLighting: HTMLProps<'feSpecularLighting', SVGAttributes>;\n    feSpotLight: HTMLProps<'feSpotLight', SVGAttributes>;\n    feTile: HTMLProps<'feTile', SVGAttributes>;\n    feTurbulence: HTMLProps<'feTurbulence', SVGAttributes>;\n    filter: HTMLProps<'filter', SVGAttributes>;\n    foreignObject: HTMLProps<'foreignObject', SVGAttributes>;\n    g: HTMLProps<'g', SVGAttributes>;\n    image: HTMLProps<'image', SVGAttributes>;\n    line: HTMLProps<'line', SVGAttributes>;\n    linearGradient: HTMLProps<'linearGradient', SVGAttributes>;\n    marker: HTMLProps<'marker', SVGAttributes>;\n    mask: HTMLProps<'mask', SVGAttributes>;\n    metadata: HTMLProps<'metadata', SVGAttributes>;\n    mpath: HTMLProps<'mpath', SVGAttributes>;\n    path: HTMLProps<'path', SVGAttributes>;\n    pattern: HTMLProps<'pattern', SVGAttributes>;\n    polygon: HTMLProps<'polygon', SVGAttributes>;\n    polyline: HTMLProps<'polyline', SVGAttributes>;\n    radialGradient: HTMLProps<'radialGradient', SVGAttributes>;\n    rect: HTMLProps<'rect', SVGAttributes>;\n    stop: HTMLProps<'stop', SVGAttributes>;\n    switch: HTMLProps<'switch', SVGAttributes>;\n    symbol: HTMLProps<'symbol', SVGAttributes>;\n    text: HTMLProps<'text', SVGAttributes>;\n    textPath: HTMLProps<'textPath', SVGAttributes>;\n    tspan: HTMLProps<'tspan', SVGAttributes>;\n    use: HTMLProps<'use', SVGAttributes>;\n    view: HTMLProps<'view', SVGAttributes>;\n\n    // Svelte specific\n    'svelte:window': HTMLProps<'svelte:window', HTMLAttributes>;\n    'svelte:body': HTMLProps<'svelte:body', HTMLAttributes>;\n    'svelte:fragment': { slot?: string };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n\n    [name: string]: { [name: string]: any };\n  }\n\n}\n\n// Keep svelte.JSX for backwards compatibility, in case someone enhanced it with their own typings,\n// which we can transform to the new svelteHTML namespace.\n/**\n * @deprecated use the types from `svelte/elements` instead, or the `svelteHTML` namespace.\n * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n */\ndeclare namespace svelte.JSX {\n\n  /* svelte specific */\n  interface ElementClass {\n      $$prop_def: any;\n  }\n\n  interface ElementAttributesProperty {\n      $$prop_def: any; // specify the property name to use\n  }\n\n  /* html jsx */\n\n  interface IntrinsicAttributes {\n    slot?: string;\n  }\n\n  //\n  // Event Handler Types\n  // ----------------------------------------------------------------------\n  type EventHandler<E extends Event = Event, T extends EventTarget = HTMLElement> =\n    (event: E & { currentTarget: EventTarget & T}) => any;\n\n  type ClipboardEventHandler<T extends EventTarget> = EventHandler<ClipboardEvent, T>;\n  type CompositionEventHandler<T extends EventTarget> = EventHandler<CompositionEvent, T>;\n  type DragEventHandler<T extends EventTarget> = EventHandler<DragEvent, T>;\n  type FocusEventHandler<T extends EventTarget> = EventHandler<FocusEvent, T>;\n  type FormEventHandler<T extends EventTarget> = EventHandler<Event, T>;\n  type ChangeEventHandler<T extends EventTarget> = EventHandler<Event, T>;\n  type KeyboardEventHandler<T extends EventTarget> = EventHandler<KeyboardEvent, T>;\n  type MouseEventHandler<T extends EventTarget> = EventHandler<MouseEvent, T>;\n  type TouchEventHandler<T extends EventTarget> = EventHandler<TouchEvent, T>;\n  type PointerEventHandler<T extends EventTarget> = EventHandler<PointerEvent, T>;\n  type UIEventHandler<T extends EventTarget> = EventHandler<UIEvent, T>;\n  type WheelEventHandler<T extends EventTarget> = EventHandler<WheelEvent, T>;\n  type AnimationEventHandler<T extends EventTarget> = EventHandler<AnimationEvent, T>;\n  type TransitionEventHandler<T extends EventTarget> = EventHandler<TransitionEvent, T>;\n  type MessageEventHandler<T extends EventTarget> = EventHandler<MessageEvent, T>;\n\n  /** @deprecated DO NOT USE, WILL BE REMOVED SOON */\n  type AttributeNames =\n  |'oncopy'\n  |'oncut'\n  |'onpaste'\n  |'oncompositionend'\n  |'oncompositionstart'\n  |'oncompositionupdate'\n  |'onfocus'\n  |'onfocusin'\n  |'onfocusout'\n  |'onblur'\n  |'onchange'\n  |'oninput'\n  |'onreset'\n  |'onsubmit'\n  |'oninvalid'\n  |'onbeforeinput'\n  |'onload'\n  |'onerror'\n  |'ontoggle'\n  |'onkeydown'\n  |'onkeypress'\n  |'onkeyup'\n  |'onabort'\n  |'oncanplay'\n  |'oncanplaythrough'\n  |'oncuechange'\n  |'ondurationchange'\n  |'onemptied'\n  |'onencrypted'\n  |'onended'\n  |'onloadeddata'\n  |'onloadedmetadata'\n  |'onloadstart'\n  |'onpause'\n  |'onplay'\n  |'onplaying'\n  |'onprogress'\n  |'onratechange'\n  |'onseeked'\n  |'onseeking'\n  |'onstalled'\n  |'onsuspend'\n  |'ontimeupdate'\n  |'onvolumechange'\n  |'onwaiting'\n  |'onauxclick'\n  |'onclick'\n  |'oncontextmenu'\n  |'ondblclick'\n  |'ondrag'\n  |'ondragend'\n  |'ondragenter'\n  |'ondragexit'\n  |'ondragleave'\n  |'ondragover'\n  |'ondragstart'\n  |'ondrop'\n  |'onmousedown'\n  |'onmouseenter'\n  |'onmouseleave'\n  |'onmousemove'\n  |'onmouseout'\n  |'onmouseover'\n  |'onmouseup'\n  |'onselect'\n  |'onselectionchange'\n  |'onselectstart'\n  |'ontouchcancel'\n  |'ontouchend'\n  |'ontouchmove'\n  |'ontouchstart'\n  |'ongotpointercapture'\n  |'onpointercancel'\n  |'onpointerdown'\n  |'onpointerenter'\n  |'onpointerleave'\n  |'onpointermove'\n  |'onpointerout'\n  |'onpointerover'\n  |'onpointerup'\n  |'onlostpointercapture'\n  |'onscroll'\n  |'onresize'\n  |'onwheel'\n  |'onanimationstart'\n  |'onanimationend'\n  |'onanimationiteration'\n  |'ontransitionstart'\n  |'ontransitionrun'\n  |'ontransitionend'\n  |'ontransitioncancel'\n  |'onoutrostart'\n  |'onoutroend'\n  |'onintrostart'\n  |'onintroend'\n  |'onmessage'\n  |'onmessageerror'\n  |'oncancel'\n  |'onclose'\n  |'onfullscreenchange'\n  |'onfullscreenerror'\n  |'class'\n  |'dataset'\n  |'accept'\n  |'acceptcharset'\n  |'accesskey'\n  |'action'\n  |'allow'\n  |'allowfullscreen'\n  |'allowtransparency'\n  |'allowpaymentrequest'\n  |'alt'\n  |'as'\n  |'async'\n  |'autocomplete'\n  |'autofocus'\n  |'autoplay'\n  |'capture'\n  |'cellpadding'\n  |'cellspacing'\n  |'charset'\n  |'challenge'\n  |'checked'\n  |'cite'\n  |'classid'\n  |'cols'\n  |'colspan'\n  |'content'\n  |'contenteditable'\n  |'innerHTML'\n  |'textContent'\n  |'contextmenu'\n  |'controls'\n  |'coords'\n  |'crossorigin'\n  |'currenttime'\n  |'decoding'\n  |'data'\n  |'datetime'\n  |'default'\n  |'defaultmuted'\n  |'defaultplaybackrate'\n  |'defer'\n  |'dir'\n  |'dirname'\n  |'disabled'\n  |'download'\n  |'draggable'\n  |'enctype'\n  |'enterkeyhint'\n  |'for'\n  |'form'\n  |'formaction'\n  |'formenctype'\n  |'formmethod'\n  |'formnovalidate'\n  |'formtarget'\n  |'frameborder'\n  |'headers'\n  |'height'\n  |'hidden'\n  |'high'\n  |'href'\n  |'hreflang'\n  |'htmlfor'\n  |'httpequiv'\n  |'id'\n  |'inputmode'\n  |'integrity'\n  |'is'\n  |'ismap'\n  |'keyparams'\n  |'keytype'\n  |'kind'\n  |'label'\n  |'lang'\n  |'list'\n  |'loading'\n  |'loop'\n  |'low'\n  |'manifest'\n  |'marginheight'\n  |'marginwidth'\n  |'max'\n  |'maxlength'\n  |'media'\n  |'mediagroup'\n  |'method'\n  |'min'\n  |'minlength'\n  |'multiple'\n  |'muted'\n  |'name'\n  |'nonce'\n  |'novalidate'\n  |'open'\n  |'optimum'\n  |'part'\n  |'pattern'\n  |'placeholder'\n  |'playsinline'\n  |'ping'\n  |'poster'\n  |'preload'\n  |'radiogroup'\n  |'readonly'\n  |'referrerpolicy'\n  |'rel'\n  |'required'\n  |'reversed'\n  |'role'\n  |'rows'\n  |'rowspan'\n  |'sandbox'\n  |'scope'\n  |'scoped'\n  |'scrolling'\n  |'seamless'\n  |'selected'\n  |'shape'\n  |'size'\n  |'sizes'\n  |'slot'\n  |'span'\n  |'spellcheck'\n  |'src'\n  |'srcdoc'\n  |'srclang'\n  |'srcset'\n  |'start'\n  |'step'\n  |'style'\n  |'summary'\n  |'tabindex'\n  |'target'\n  |'title'\n  |'translate'\n  |'type'\n  |'usemap'\n  |'value'\n  |'volume'\n  |'width'\n  |'wmode'\n  |'wrap'\n  |'about'\n  |'datatype'\n  |'inlist'\n  |'prefix'\n  |'property'\n  |'resource'\n  |'typeof'\n  |'vocab'\n  |'autocapitalize'\n  |'autocorrect'\n  |'autosave'\n  |'color'\n  |'controlslist'\n  |'inert'\n  |'itemprop'\n  |'itemscope'\n  |'itemtype'\n  |'itemid'\n  |'itemref'\n  |'results'\n  |'security'\n  |'unselectable';\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface DOMAttributes<T extends EventTarget> {\n    oncopy?: ClipboardEventHandler<T> | undefined | null;\n    oncut?: ClipboardEventHandler<T> | undefined | null;\n    onpaste?: ClipboardEventHandler<T> | undefined | null;\n    oncompositionend?: CompositionEventHandler<T> | undefined | null;\n    oncompositionstart?: CompositionEventHandler<T> | undefined | null;\n    oncompositionupdate?: CompositionEventHandler<T> | undefined | null;\n    onfocus?: FocusEventHandler<T> | undefined | null;\n    onfocusin?: FocusEventHandler<T> | undefined | null;\n    onfocusout?: FocusEventHandler<T> | undefined | null;\n    onblur?: FocusEventHandler<T> | undefined | null;\n    onchange?: FormEventHandler<T> | undefined | null;\n    oninput?: FormEventHandler<T> | undefined | null;\n    onreset?: FormEventHandler<T> | undefined | null;\n    onsubmit?: EventHandler<SubmitEvent, T> | undefined | null;\n    oninvalid?: EventHandler<Event, T> | undefined | null;\n    onbeforeinput?: EventHandler<InputEvent, T> | undefined | null;\n    onload?: EventHandler | undefined | null;\n    onerror?: EventHandler | undefined | null; // also a Media Event\n    ontoggle?: EventHandler<Event, T> | undefined | null;\n    onkeydown?: KeyboardEventHandler<T> | undefined | null;\n    onkeypress?: KeyboardEventHandler<T> | undefined | null;\n    onkeyup?: KeyboardEventHandler<T> | undefined | null;\n    onabort?: EventHandler<Event, T> | undefined | null;\n    oncanplay?: EventHandler<Event, T> | undefined | null;\n    oncanplaythrough?: EventHandler<Event, T> | undefined | null;\n    oncuechange?: EventHandler<Event, T> | undefined | null;\n    ondurationchange?: EventHandler<Event, T> | undefined | null;\n    onemptied?: EventHandler<Event, T> | undefined | null;\n    onencrypted?: EventHandler<Event, T> | undefined | null;\n    onended?: EventHandler<Event, T> | undefined | null;\n    onloadeddata?: EventHandler<Event, T> | undefined | null;\n    onloadedmetadata?: EventHandler<Event, T> | undefined | null;\n    onloadstart?: EventHandler<Event, T> | undefined | null;\n    onpause?: EventHandler<Event, T> | undefined | null;\n    onplay?: EventHandler<Event, T> | undefined | null;\n    onplaying?: EventHandler<Event, T> | undefined | null;\n    onprogress?: EventHandler<Event, T> | undefined | null;\n    onratechange?: EventHandler<Event, T> | undefined | null;\n    onseeked?: EventHandler<Event, T> | undefined | null;\n    onseeking?: EventHandler<Event, T> | undefined | null;\n    onstalled?: EventHandler<Event, T> | undefined | null;\n    onsuspend?: EventHandler<Event, T> | undefined | null;\n    ontimeupdate?: EventHandler<Event, T> | undefined | null;\n    onvolumechange?: EventHandler<Event, T> | undefined | null;\n    onwaiting?: EventHandler<Event, T> | undefined | null;\n    onauxclick?: MouseEventHandler<T> | undefined | null;\n    onclick?: MouseEventHandler<T> | undefined | null;\n    oncontextmenu?: MouseEventHandler<T> | undefined | null;\n    ondblclick?: MouseEventHandler<T> | undefined | null;\n    ondrag?: DragEventHandler<T> | undefined | null;\n    ondragend?: DragEventHandler<T> | undefined | null;\n    ondragenter?: DragEventHandler<T> | undefined | null;\n    ondragexit?: DragEventHandler<T> | undefined | null;\n    ondragleave?: DragEventHandler<T> | undefined | null;\n    ondragover?: DragEventHandler<T> | undefined | null;\n    ondragstart?: DragEventHandler<T> | undefined | null;\n    ondrop?: DragEventHandler<T> | undefined | null;\n    onmousedown?: MouseEventHandler<T> | undefined | null;\n    onmouseenter?: MouseEventHandler<T> | undefined | null;\n    onmouseleave?: MouseEventHandler<T> | undefined | null;\n    onmousemove?: MouseEventHandler<T> | undefined | null;\n    onmouseout?: MouseEventHandler<T> | undefined | null;\n    onmouseover?: MouseEventHandler<T> | undefined | null;\n    onmouseup?: MouseEventHandler<T> | undefined | null;\n    onselect?: EventHandler<Event, T> | undefined | null;\n    onselectionchange?: EventHandler<Event, T> | undefined | null;\n    onselectstart?: EventHandler<Event, T> | undefined | null;\n    ontouchcancel?: TouchEventHandler<T> | undefined | null;\n    ontouchend?: TouchEventHandler<T> | undefined | null;\n    ontouchmove?: TouchEventHandler<T> | undefined | null;\n    ontouchstart?: TouchEventHandler<T> | undefined | null;\n    ongotpointercapture?: PointerEventHandler<T> | undefined | null;\n    onpointercancel?: PointerEventHandler<T> | undefined | null;\n    onpointerdown?: PointerEventHandler<T> | undefined | null;\n    onpointerenter?: PointerEventHandler<T> | undefined | null;\n    onpointerleave?: PointerEventHandler<T> | undefined | null;\n    onpointermove?: PointerEventHandler<T> | undefined | null;\n    onpointerout?: PointerEventHandler<T> | undefined | null;\n    onpointerover?: PointerEventHandler<T> | undefined | null;\n    onpointerup?: PointerEventHandler<T> | undefined | null;\n    onlostpointercapture?: PointerEventHandler<T> | undefined | null;\n    onscroll?: UIEventHandler<T> | undefined | null;\n    onresize?: UIEventHandler<T> | undefined | null;\n    onwheel?: WheelEventHandler<T> | undefined | null;\n    onanimationstart?: AnimationEventHandler<T> | undefined | null;\n    onanimationend?: AnimationEventHandler<T> | undefined | null;\n    onanimationiteration?: AnimationEventHandler<T> | undefined | null;\n    ontransitionstart?: TransitionEventHandler<T> | undefined | null;\n    ontransitionrun?: TransitionEventHandler<T> | undefined | null;\n    ontransitionend?: TransitionEventHandler<T> | undefined | null;\n    ontransitioncancel?: TransitionEventHandler<T> | undefined | null;\n    onoutrostart?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onoutroend?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onintrostart?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onintroend?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onmessage?: MessageEventHandler<T> | undefined | null;\n    onmessageerror?: MessageEventHandler<T> | undefined | null;\n    oncancel?: EventHandler<Event, T> | undefined | null;\n    onclose?: EventHandler<Event, T> | undefined | null;\n    onfullscreenchange?: EventHandler<Event, T> | undefined | null;\n    onfullscreenerror?: EventHandler<Event, T> | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface AriaAttributes {\n      'aria-activedescendant'?: string | undefined | null;\n      'aria-atomic'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both' | undefined | null;\n      'aria-busy'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-checked'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n      'aria-colcount'?: number | undefined | null;\n      'aria-colindex'?: number | undefined | null;\n      'aria-colspan'?: number | undefined | null;\n      'aria-controls'?: string | undefined | null;\n      'aria-current'?: boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time' | undefined | null;\n      'aria-describedby'?: string | undefined | null;\n      'aria-details'?: string | undefined | null;\n      'aria-disabled'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined | null;\n      'aria-errormessage'?: string | undefined | null;\n      'aria-expanded'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-flowto'?: string | undefined | null;\n      'aria-grabbed'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-haspopup'?: boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined | null;\n      'aria-hidden'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-invalid'?: boolean | 'false' | 'true' | 'grammar' | 'spelling' | undefined | null;\n      'aria-keyshortcuts'?: string | undefined | null;\n      'aria-label'?: string | undefined | null;\n      'aria-labelledby'?: string | undefined | null;\n      'aria-level'?: number | undefined | null;\n      'aria-live'?: 'off' | 'assertive' | 'polite' | undefined | null;\n      'aria-modal'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-multiline'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-multiselectable'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-orientation'?: 'horizontal' | 'vertical' | undefined | null;\n      'aria-owns'?: string | undefined | null;\n      'aria-placeholder'?: string | undefined | null;\n      'aria-posinset'?: number | undefined | null;\n      'aria-pressed'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n      'aria-readonly'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-relevant'?: 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text' | 'text additions' | 'text removals' | undefined | null;\n      'aria-required'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-roledescription'?: string | undefined | null;\n      'aria-rowcount'?: number | undefined | null;\n      'aria-rowindex'?: number | undefined | null;\n      'aria-rowspan'?: number | undefined | null;\n      'aria-selected'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-setsize'?: number | undefined | null;\n      'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other' | undefined | null;\n      'aria-valuemax'?: number | undefined | null;\n      'aria-valuemin'?: number | undefined | null;\n      'aria-valuenow'?: number | undefined | null;\n      'aria-valuetext'?: string | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface HTMLAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n    class?: string | undefined | null;\n    dataset?: object | undefined | null;\n    accept?: string | undefined | null;\n    acceptcharset?: string | undefined | null;\n    accesskey?: string | undefined | null;\n    action?: string | undefined | null;\n    allow?: string | undefined | null;\n    allowfullscreen?: boolean | undefined | null;\n    allowtransparency?: boolean | undefined | null;\n    allowpaymentrequest?: boolean | undefined | null;\n    alt?: string | undefined | null;\n    as?: string | undefined | null;\n    async?: boolean | undefined | null;\n    autocomplete?: string | undefined | null;\n    autofocus?: boolean | undefined | null;\n    autoplay?: boolean | undefined | null;\n    capture?: 'environment' | 'user' | boolean | undefined | null;\n    cellpadding?: number | string | undefined | null;\n    cellspacing?: number | string | undefined | null;\n    charset?: string | undefined | null;\n    challenge?: string | undefined | null;\n    checked?: boolean | undefined | null;\n    cite?: string | undefined | null;\n    classid?: string | undefined | null;\n    cols?: number | undefined | null;\n    colspan?: number | undefined | null;\n    content?: string | undefined | null;\n    contenteditable?: 'true' | 'false' | boolean | undefined | null;\n    innerHTML?: string | undefined | null;\n    textContent?: string | undefined | null;\n    contextmenu?: string | undefined | null;\n    controls?: boolean | undefined | null;\n    coords?: string | undefined | null;\n    crossorigin?: string | undefined | null;\n    currenttime?: number | undefined | null;\n    decoding?: 'async' | 'sync' | 'auto' | undefined | null;\n    data?: string | undefined | null;\n    datetime?: string | undefined | null;\n    default?: boolean | undefined | null;\n    defaultmuted?: boolean | undefined | null;\n    defaultplaybackrate?: number | undefined | null;\n    defer?: boolean | undefined | null;\n    dir?: string | undefined | null;\n    dirname?: string | undefined | null;\n    disabled?: boolean | undefined | null;\n    download?: any | undefined | null;\n    draggable?: boolean | 'true' | 'false' | undefined | null;\n    enctype?: string | undefined | null;\n    enterkeyhint?: 'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send' | undefined | null;\n    for?: string | undefined | null;\n    form?: string | undefined | null;\n    formaction?: string | undefined | null;\n    formenctype?: string | undefined | null;\n    formmethod?: string | undefined | null;\n    formnovalidate?: boolean | undefined | null;\n    formtarget?: string | undefined | null;\n    frameborder?: number | string | undefined | null;\n    headers?: string | undefined | null;\n    height?: number | string | undefined | null;\n    hidden?: boolean | undefined | null;\n    high?: number | undefined | null;\n    href?: string | undefined | null;\n    hreflang?: string | undefined | null;\n    htmlfor?: string | undefined | null;\n    httpequiv?: string | undefined | null;\n    id?: string | undefined | null;\n    inputmode?: string | undefined | null;\n    integrity?: string | undefined | null;\n    is?: string | undefined | null;\n    ismap?: boolean | undefined | null;\n    keyparams?: string | undefined | null;\n    keytype?: string | undefined | null;\n    kind?: string | undefined | null;\n    label?: string | undefined | null;\n    lang?: string | undefined | null;\n    list?: string | undefined | null;\n    loading?: string | undefined | null;\n    loop?: boolean | undefined | null;\n    low?: number | undefined | null;\n    manifest?: string | undefined | null;\n    marginheight?: number | undefined | null;\n    marginwidth?: number | undefined | null;\n    max?: number | string | undefined | null;\n    maxlength?: number | undefined | null;\n    media?: string | undefined | null;\n    mediagroup?: string | undefined | null;\n    method?: string | undefined | null;\n    min?: number | string | undefined | null;\n    minlength?: number | undefined | null;\n    multiple?: boolean | undefined | null;\n    muted?: boolean | undefined | null;\n    name?: string | undefined | null;\n    nonce?: string | undefined | null;\n    novalidate?: boolean | undefined | null;\n    open?: boolean | undefined | null;\n    optimum?: number | undefined | null;\n    part?: string | undefined | null;\n    pattern?: string | undefined | null;\n    placeholder?: string | undefined | null;\n    playsinline?: boolean | undefined | null;\n    ping?: string | undefined | null;\n    poster?: string | undefined | null;\n    preload?: string | undefined | null;\n    radiogroup?: string | undefined | null;\n    readonly?: boolean | undefined | null;\n    referrerpolicy?: string | undefined | null;\n    rel?: string | undefined | null;\n    required?: boolean | undefined | null;\n    reversed?: boolean | undefined | null;\n    role?: string | undefined | null;\n    rows?: number | undefined | null;\n    rowspan?: number | undefined | null;\n    sandbox?: string | undefined | null;\n    scope?: string | undefined | null;\n    scoped?: boolean | undefined | null;\n    scrolling?: string | undefined | null;\n    seamless?: boolean | undefined | null;\n    selected?: boolean | undefined | null;\n    shape?: string | undefined | null;\n    size?: number | undefined | null;\n    sizes?: string | undefined | null;\n    slot?: string | undefined | null;\n    span?: number | undefined | null;\n    spellcheck?: boolean | 'true' | 'false' | undefined | null;\n    src?: string | undefined | null;\n    srcdoc?: string | undefined | null;\n    srclang?: string | undefined | null;\n    srcset?: string | undefined | null;\n    start?: number | undefined | null;\n    step?: number | string | undefined | null;\n    style?: string | undefined | null;\n    summary?: string | undefined | null;\n    tabindex?: number | undefined | null;\n    target?: string | undefined | null;\n    title?: string | undefined | null;\n    translate?: \"yes\" | \"no\" | \"\" | undefined | null;\n    type?: string | undefined | null;\n    usemap?: string | undefined | null;\n    value?: any | undefined | null;\n    volume?: number | undefined | null;\n    width?: number | string | undefined | null;\n    wmode?: string | undefined | null;\n    wrap?: string | undefined | null;\n    about?: string | undefined | null;\n    datatype?: string | undefined | null;\n    inlist?: any | undefined | null;\n    prefix?: string | undefined | null;\n    property?: string | undefined | null;\n    resource?: string | undefined | null;\n    typeof?: string | undefined | null;\n    vocab?: string | undefined | null;\n    autocapitalize?: string | undefined | null;\n    autocorrect?: string | undefined | null;\n    autosave?: string | undefined | null;\n    color?: string | undefined | null;\n    controlslist?: 'nodownload' | 'nofullscreen' | 'noplaybackrate' | 'noremoteplayback';\n    inert?: boolean | undefined | null;\n    itemprop?: string | undefined | null;\n    itemscope?: boolean | undefined | null;\n    itemtype?: string | undefined | null;\n    itemid?: string | undefined | null;\n    itemref?: string | undefined | null;\n    results?: number | undefined | null;\n    security?: string | undefined | null;\n    unselectable?: boolean | undefined | null;\n\n    'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-preload-code'?: true | '' | 'eager' | 'viewport' | 'hover' | 'tap' | 'off' | undefined | null;\n    'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;\n    'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SVGAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n    className?: string | undefined | null;\n    class?: string | undefined | null;\n    color?: string | undefined | null;\n    height?: number | string | undefined | null;\n    id?: string | undefined | null;\n    lang?: string | undefined | null;\n    max?: number | string | undefined | null;\n    media?: string | undefined | null;\n    method?: string | undefined | null;\n    min?: number | string | undefined | null;\n    name?: string | undefined | null;\n    style?: string | undefined | null;\n    target?: string | undefined | null;\n    type?: string | undefined | null;\n    width?: number | string | undefined | null;\n    role?: string | undefined | null;\n    tabindex?: number | undefined | null;\n    crossorigin?: 'anonymous' | 'use-credentials' | '' | undefined | null;\n    'accent-height'?: number | string | undefined | null;\n    accumulate?: 'none' | 'sum' | undefined | null;\n    additive?: 'replace' | 'sum' | undefined | null;\n    'alignment-baseline'?: 'auto' | 'baseline' | 'before-edge' | 'text-before-edge' | 'middle' |\n      'central' | 'after-edge' | 'text-after-edge' | 'ideographic' | 'alphabetic' | 'hanging' |\n      'mathematical' | 'inherit' | undefined | null;\n    allowReorder?: 'no' | 'yes' | undefined | null;\n    alphabetic?: number | string | undefined | null;\n    amplitude?: number | string | undefined | null;\n    'arabic-form'?: 'initial' | 'medial' | 'terminal' | 'isolated' | undefined | null;\n    ascent?: number | string | undefined | null;\n    attributeName?: string | undefined | null;\n    attributeType?: string | undefined | null;\n    autoReverse?: number | string | undefined | null;\n    azimuth?: number | string | undefined | null;\n    baseFrequency?: number | string | undefined | null;\n    'baseline-shift'?: number | string | undefined | null;\n    baseProfile?: number | string | undefined | null;\n    bbox?: number | string | undefined | null;\n    begin?: number | string | undefined | null;\n    bias?: number | string | undefined | null;\n    by?: number | string | undefined | null;\n    calcMode?: number | string | undefined | null;\n    'cap-height'?: number | string | undefined | null;\n    clip?: number | string | undefined | null;\n    'clip-path'?: string | undefined | null;\n    clipPathUnits?: number | string | undefined | null;\n    'clip-rule'?: number | string | undefined | null;\n    'color-interpolation'?: number | string | undefined | null;\n    'color-interpolation-filters'?: 'auto' | 'sRGB' | 'linearRGB' | 'inherit' | undefined | null;\n    'color-profile'?: number | string | undefined | null;\n    'color-rendering'?: number | string | undefined | null;\n    contentScriptType?: number | string | undefined | null;\n    contentStyleType?: number | string | undefined | null;\n    cursor?: number | string | undefined | null;\n    cx?: number | string | undefined | null;\n    cy?: number | string | undefined | null;\n    d?: string | undefined | null;\n    decelerate?: number | string | undefined | null;\n    descent?: number | string | undefined | null;\n    diffuseConstant?: number | string | undefined | null;\n    direction?: number | string | undefined | null;\n    display?: number | string | undefined | null;\n    divisor?: number | string | undefined | null;\n    'dominant-baseline'?: number | string | undefined | null;\n    dur?: number | string | undefined | null;\n    dx?: number | string | undefined | null;\n    dy?: number | string | undefined | null;\n    edgeMode?: number | string | undefined | null;\n    elevation?: number | string | undefined | null;\n    'enable-background'?: number | string | undefined | null;\n    end?: number | string | undefined | null;\n    exponent?: number | string | undefined | null;\n    externalResourcesRequired?: number | string | undefined | null;\n    fill?: string | undefined | null;\n    'fill-opacity'?: number | string | undefined | null;\n    'fill-rule'?: 'nonzero' | 'evenodd' | 'inherit' | undefined | null;\n    filter?: string | undefined | null;\n    filterRes?: number | string | undefined | null;\n    filterUnits?: number | string | undefined | null;\n    'flood-color'?: number | string | undefined | null;\n    'flood-opacity'?: number | string | undefined | null;\n    focusable?: number | string | undefined | null;\n    'font-family'?: string | undefined | null;\n    'font-size'?: number | string | undefined | null;\n    'font-size-adjust'?: number | string | undefined | null;\n    'font-stretch'?: number | string | undefined | null;\n    'font-style'?: number | string | undefined | null;\n    'font-variant'?: number | string | undefined | null;\n    'font-weight'?: number | string | undefined | null;\n    format?: number | string | undefined | null;\n    from?: number | string | undefined | null;\n    fx?: number | string | undefined | null;\n    fy?: number | string | undefined | null;\n    g1?: number | string | undefined | null;\n    g2?: number | string | undefined | null;\n    'glyph-name'?: number | string | undefined | null;\n    'glyph-orientation-horizontal'?: number | string | undefined | null;\n    'glyph-orientation-vertical'?: number | string | undefined | null;\n    glyphRef?: number | string | undefined | null;\n    gradientTransform?: string | undefined | null;\n    gradientUnits?: string | undefined | null;\n    hanging?: number | string | undefined | null;\n    href?: string | undefined | null;\n    'horiz-adv-x'?: number | string | undefined | null;\n    'horiz-origin-x'?: number | string | undefined | null;\n    ideographic?: number | string | undefined | null;\n    'image-rendering'?: number | string | undefined | null;\n    in2?: number | string | undefined | null;\n    in?: string | undefined | null;\n    intercept?: number | string | undefined | null;\n    k1?: number | string | undefined | null;\n    k2?: number | string | undefined | null;\n    k3?: number | string | undefined | null;\n    k4?: number | string | undefined | null;\n    k?: number | string | undefined | null;\n    kernelMatrix?: number | string | undefined | null;\n    kernelUnitLength?: number | string | undefined | null;\n    kerning?: number | string | undefined | null;\n    keyPoints?: number | string | undefined | null;\n    keySplines?: number | string | undefined | null;\n    keyTimes?: number | string | undefined | null;\n    lengthAdjust?: number | string | undefined | null;\n    'letter-spacing'?: number | string | undefined | null;\n    'lighting-color'?: number | string | undefined | null;\n    limitingConeAngle?: number | string | undefined | null;\n    local?: number | string | undefined | null;\n    'marker-end'?: string | undefined | null;\n    markerHeight?: number | string | undefined | null;\n    'marker-mid'?: string | undefined | null;\n    'marker-start'?: string | undefined | null;\n    markerUnits?: number | string | undefined | null;\n    markerWidth?: number | string | undefined | null;\n    mask?: string | undefined | null;\n    maskContentUnits?: number | string | undefined | null;\n    maskUnits?: number | string | undefined | null;\n    mathematical?: number | string | undefined | null;\n    mode?: number | string | undefined | null;\n    numOctaves?: number | string | undefined | null;\n    offset?: number | string | undefined | null;\n    opacity?: number | string | undefined | null;\n    operator?: number | string | undefined | null;\n    order?: number | string | undefined | null;\n    orient?: number | string | undefined | null;\n    orientation?: number | string | undefined | null;\n    origin?: number | string | undefined | null;\n    overflow?: number | string | undefined | null;\n    'overline-position'?: number | string | undefined | null;\n    'overline-thickness'?: number | string | undefined | null;\n    'paint-order'?: number | string | undefined | null;\n    'panose-1'?: number | string | undefined | null;\n    path?: string | undefined | null;\n    pathLength?: number | string | undefined | null;\n    patternContentUnits?: string | undefined | null;\n    patternTransform?: number | string | undefined | null;\n    patternUnits?: string | undefined | null;\n    'pointer-events'?: number | string | undefined | null;\n    points?: string | undefined | null;\n    pointsAtX?: number | string | undefined | null;\n    pointsAtY?: number | string | undefined | null;\n    pointsAtZ?: number | string | undefined | null;\n    preserveAlpha?: number | string | undefined | null;\n    preserveAspectRatio?: string | undefined | null;\n    primitiveUnits?: number | string | undefined | null;\n    r?: number | string | undefined | null;\n    radius?: number | string | undefined | null;\n    refX?: number | string | undefined | null;\n    refY?: number | string | undefined | null;\n    'rendering-intent'?: number | string | undefined | null;\n    repeatCount?: number | string | undefined | null;\n    repeatDur?: number | string | undefined | null;\n    requiredExtensions?: number | string | undefined | null;\n    requiredFeatures?: number | string | undefined | null;\n    restart?: number | string | undefined | null;\n    result?: string | undefined | null;\n    rotate?: number | string | undefined | null;\n    rx?: number | string | undefined | null;\n    ry?: number | string | undefined | null;\n    scale?: number | string | undefined | null;\n    seed?: number | string | undefined | null;\n    'shape-rendering'?: number | string | undefined | null;\n    slope?: number | string | undefined | null;\n    spacing?: number | string | undefined | null;\n    specularConstant?: number | string | undefined | null;\n    specularExponent?: number | string | undefined | null;\n    speed?: number | string | undefined | null;\n    spreadMethod?: string | undefined | null;\n    startOffset?: number | string | undefined | null;\n    stdDeviation?: number | string | undefined | null;\n    stemh?: number | string | undefined | null;\n    stemv?: number | string | undefined | null;\n    stitchTiles?: number | string | undefined | null;\n    'stop-color'?: string | undefined | null;\n    'stop-opacity'?: number | string | undefined | null;\n    'strikethrough-position'?: number | string | undefined | null;\n    'strikethrough-thickness'?: number | string | undefined | null;\n    string?: number | string | undefined | null;\n    stroke?: string | undefined | null;\n    'stroke-dasharray'?: string | number | undefined | null;\n    'stroke-dashoffset'?: string | number | undefined | null;\n    'stroke-linecap'?: 'butt' | 'round' | 'square' | 'inherit' | undefined | null;\n    'stroke-linejoin'?: 'miter' | 'round' | 'bevel' | 'inherit' | undefined | null;\n    'stroke-miterlimit'?: string | undefined | null;\n    'stroke-opacity'?: number | string | undefined | null;\n    'stroke-width'?: number | string | undefined | null;\n    surfaceScale?: number | string | undefined | null;\n    systemLanguage?: number | string | undefined | null;\n    tableValues?: number | string | undefined | null;\n    targetX?: number | string | undefined | null;\n    targetY?: number | string | undefined | null;\n    'text-anchor'?: string | undefined | null;\n    'text-decoration'?: number | string | undefined | null;\n    textLength?: number | string | undefined | null;\n    'text-rendering'?: number | string | undefined | null;\n    to?: number | string | undefined | null;\n    transform?: string | undefined | null;\n    u1?: number | string | undefined | null;\n    u2?: number | string | undefined | null;\n    'underline-position'?: number | string | undefined | null;\n    'underline-thickness'?: number | string | undefined | null;\n    unicode?: number | string | undefined | null;\n    'unicode-bidi'?: number | string | undefined | null;\n    'unicode-range'?: number | string | undefined | null;\n    'units-per-em'?: number | string | undefined | null;\n    'v-alphabetic'?: number | string | undefined | null;\n    values?: string | undefined | null;\n    'vector-effect'?: number | string | undefined | null;\n    version?: string | undefined | null;\n    'vert-adv-y'?: number | string | undefined | null;\n    'vert-origin-x'?: number | string | undefined | null;\n    'vert-origin-y'?: number | string | undefined | null;\n    'v-hanging'?: number | string | undefined | null;\n    'v-ideographic'?: number | string | undefined | null;\n    viewBox?: string | undefined | null;\n    viewTarget?: number | string | undefined | null;\n    visibility?: number | string | undefined | null;\n    'v-mathematical'?: number | string | undefined | null;\n    widths?: number | string | undefined | null;\n    'word-spacing'?: number | string | undefined | null;\n    'writing-mode'?: number | string | undefined | null;\n    x1?: number | string | undefined | null;\n    x2?: number | string | undefined | null;\n    x?: number | string | undefined | null;\n    xChannelSelector?: string | undefined | null;\n    'x-height'?: number | string | undefined | null;\n    xlinkActuate?: string | undefined | null;\n    xlinkArcrole?: string | undefined | null;\n    xlinkHref?: string | undefined | null;\n    xlinkRole?: string | undefined | null;\n    xlinkShow?: string | undefined | null;\n    xlinkTitle?: string | undefined | null;\n    xlinkType?: string | undefined | null;\n    xmlBase?: string | undefined | null;\n    xmlLang?: string | undefined | null;\n    xmlns?: string | undefined | null;\n    xmlnsXlink?: string | undefined | null;\n    xmlSpace?: string | undefined | null;\n    y1?: number | string | undefined | null;\n    y2?: number | string | undefined | null;\n    y?: number | string | undefined | null;\n    yChannelSelector?: string | undefined | null;\n    z?: number | string | undefined | null;\n    zoomAndPan?: string | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface HTMLProps<T extends EventTarget> extends HTMLAttributes<T> {}\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SVGProps<T extends EventTarget> extends SVGAttributes<T> {}\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteInputProps extends HTMLProps<HTMLInputElement> {\n    group?: any | undefined | null;\n    files?: FileList | undefined | null;\n    indeterminate?: boolean | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteWindowProps  {\n    readonly innerWidth?: Window['innerWidth'] | undefined | null;\n    readonly innerHeight?: Window['innerHeight'] | undefined | null;\n    readonly outerWidth?: Window['outerWidth'] | undefined | null;\n    readonly outerHeight?: Window['outerHeight'] | undefined | null;\n    scrollX?: Window['scrollX'] | undefined | null;\n    scrollY?: Window['scrollY'] | undefined | null;\n    readonly online?: Window['navigator']['onLine'] | undefined | null;\n\n    // Transformed from on:sveltekit:xy\n    'onsveltekit:start'?: EventHandler<CustomEvent, Window> | undefined | null;\n    'onsveltekit:navigation-start'?: EventHandler<CustomEvent, Window> | undefined | null;\n    'onsveltekit:navigation-end'?: EventHandler<CustomEvent, Window> | undefined | null;\n\n    ondevicelight?: EventHandler<Event, Window> | undefined | null;\n    onbeforeinstallprompt?: EventHandler<Event, Window> | undefined | null;\n    ondeviceproximity?: EventHandler<Event, Window> | undefined | null;\n    onpaint?: EventHandler<Event, Window> | undefined | null;\n    onuserproximity?: EventHandler<Event, Window> | undefined | null;\n    onbeforeprint?: EventHandler<Event, Window> | undefined | null;\n    onafterprint?: EventHandler<Event, Window> | undefined | null;\n    onlanguagechange?: EventHandler<Event, Window> | undefined | null;\n    onorientationchange?: EventHandler<Event, Window> | undefined | null;\n    onmessage?: EventHandler<MessageEvent, Window> | undefined | null;\n    onmessageerror?: EventHandler<MessageEvent, Window> | undefined | null;\n    onoffline?: EventHandler<Event, Window> | undefined | null;\n    ononline?: EventHandler<Event, Window> | undefined | null;\n    onbeforeunload?: EventHandler<BeforeUnloadEvent, Window> | undefined | null;\n    onunload?: EventHandler<Event, Window> | undefined | null;\n    onstorage?: EventHandler<StorageEvent, Window> | undefined | null;\n    onhashchange?: EventHandler<HashChangeEvent, Window> | undefined | null;\n    onpagehide?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n    onpageshow?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n    onpopstate?: EventHandler<PopStateEvent, Window> | undefined | null;\n    ondevicemotion?: EventHandler<DeviceMotionEvent> | undefined | null;\n    ondeviceorientation?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n    ondeviceorientationabsolute?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n    onunhandledrejection?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n    onrejectionhandled?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SapperAnchorProps {\n      // transformed from sapper:noscroll so it should be camel case\n      sapperNoscroll?: true | undefined | null;\n      sapperPrefetch?: true | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteMediaTimeRange {\n      start: number;\n      end: number;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteMediaProps {\n      readonly duration?: number | undefined | null;\n      readonly buffered?: SvelteMediaTimeRange[] | undefined | null;\n      readonly played?: SvelteMediaTimeRange[] | undefined | null;\n      readonly seekable?: SvelteMediaTimeRange[] | undefined | null;\n      readonly seeking?: boolean | undefined | null;\n      readonly ended?: boolean | undefined | null;\n\n      /**\n       * the current playback time in the video, in seconds\n       */\n      currentTime?: number | undefined | null;\n      /**\n       * the current playback time in the video, in seconds\n       */\n      currenttime?: number | undefined | null;\n      // Doesn't work when used as HTML Attribute\n      /**\n       * how fast or slow to play the video, where 1 is 'normal'\n       */\n      playbackRate?: number | undefined | null;\n\n      paused?: boolean | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteVideoProps extends SvelteMediaProps {\n      // Binding only, don't need lowercase variant\n      readonly videoWidth?: number | undefined | null;\n      readonly videoHeight?: number | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface IntrinsicElements {\n    // HTML\n    a: HTMLProps<HTMLAnchorElement> & SapperAnchorProps;\n    abbr: HTMLProps<HTMLElement>;\n    address: HTMLProps<HTMLElement>;\n    area: HTMLProps<HTMLAreaElement>;\n    article: HTMLProps<HTMLElement>;\n    aside: HTMLProps<HTMLElement>;\n    audio: HTMLProps<HTMLAudioElement> & SvelteMediaProps;\n    b: HTMLProps<HTMLElement>;\n    base: HTMLProps<HTMLBaseElement>;\n    bdi: HTMLProps<HTMLElement>;\n    bdo: HTMLProps<HTMLElement>;\n    big: HTMLProps<HTMLElement>;\n    blockquote: HTMLProps<HTMLElement>;\n    body: HTMLProps<HTMLBodyElement>;\n    br: HTMLProps<HTMLBRElement>;\n    button: HTMLProps<HTMLButtonElement>;\n    canvas: HTMLProps<HTMLCanvasElement>;\n    caption: HTMLProps<HTMLElement>;\n    cite: HTMLProps<HTMLElement>;\n    code: HTMLProps<HTMLElement>;\n    col: HTMLProps<HTMLTableColElement>;\n    colgroup: HTMLProps<HTMLTableColElement>;\n    data: HTMLProps<HTMLElement>;\n    datalist: HTMLProps<HTMLDataListElement>;\n    dd: HTMLProps<HTMLElement>;\n    del: HTMLProps<HTMLElement>;\n    details: HTMLProps<HTMLElement>;\n    dfn: HTMLProps<HTMLElement>;\n    dialog: HTMLProps<HTMLElement>;\n    div: HTMLProps<HTMLDivElement>;\n    dl: HTMLProps<HTMLDListElement>;\n    dt: HTMLProps<HTMLElement>;\n    em: HTMLProps<HTMLElement>;\n    embed: HTMLProps<HTMLEmbedElement>;\n    fieldset: HTMLProps<HTMLFieldSetElement>;\n    figcaption: HTMLProps<HTMLElement>;\n    figure: HTMLProps<HTMLElement>;\n    footer: HTMLProps<HTMLElement>;\n    form: HTMLProps<HTMLFormElement>;\n    h1: HTMLProps<HTMLHeadingElement>;\n    h2: HTMLProps<HTMLHeadingElement>;\n    h3: HTMLProps<HTMLHeadingElement>;\n    h4: HTMLProps<HTMLHeadingElement>;\n    h5: HTMLProps<HTMLHeadingElement>;\n    h6: HTMLProps<HTMLHeadingElement>;\n    head: HTMLProps<HTMLHeadElement>;\n    header: HTMLProps<HTMLElement>;\n    hgroup: HTMLProps<HTMLElement>;\n    hr: HTMLProps<HTMLHRElement>;\n    html: HTMLProps<HTMLHtmlElement>;\n    i: HTMLProps<HTMLElement>;\n    iframe: HTMLProps<HTMLIFrameElement>;\n    img: HTMLProps<HTMLImageElement>;\n    input: SvelteInputProps;\n    ins: HTMLProps<HTMLModElement>;\n    kbd: HTMLProps<HTMLElement>;\n    keygen: HTMLProps<HTMLElement>;\n    label: HTMLProps<HTMLLabelElement>;\n    legend: HTMLProps<HTMLLegendElement>;\n    li: HTMLProps<HTMLLIElement>;\n    link: HTMLProps<HTMLLinkElement>;\n    main: HTMLProps<HTMLElement>;\n    map: HTMLProps<HTMLMapElement>;\n    mark: HTMLProps<HTMLElement>;\n    menu: HTMLProps<HTMLElement>;\n    menuitem: HTMLProps<HTMLElement>;\n    meta: HTMLProps<HTMLMetaElement>;\n    meter: HTMLProps<HTMLElement>;\n    nav: HTMLProps<HTMLElement>;\n    noindex: HTMLProps<HTMLElement>;\n    noscript: HTMLProps<HTMLElement>;\n    object: HTMLProps<HTMLObjectElement>;\n    ol: HTMLProps<HTMLOListElement>;\n    optgroup: HTMLProps<HTMLOptGroupElement>;\n    option: HTMLProps<HTMLOptionElement>;\n    output: HTMLProps<HTMLElement>;\n    p: HTMLProps<HTMLParagraphElement>;\n    param: HTMLProps<HTMLParamElement>;\n    picture: HTMLProps<HTMLElement>;\n    pre: HTMLProps<HTMLPreElement>;\n    progress: HTMLProps<HTMLProgressElement>;\n    q: HTMLProps<HTMLQuoteElement>;\n    rp: HTMLProps<HTMLElement>;\n    rt: HTMLProps<HTMLElement>;\n    ruby: HTMLProps<HTMLElement>;\n    s: HTMLProps<HTMLElement>;\n    samp: HTMLProps<HTMLElement>;\n    script: HTMLProps<HTMLElement>;\n    section: HTMLProps<HTMLElement>;\n    select: HTMLProps<HTMLSelectElement>;\n    small: HTMLProps<HTMLElement>;\n    source: HTMLProps<HTMLSourceElement>;\n    span: HTMLProps<HTMLSpanElement>;\n    strong: HTMLProps<HTMLElement>;\n    style: HTMLProps<HTMLStyleElement>;\n    sub: HTMLProps<HTMLElement>;\n    summary: HTMLProps<HTMLElement>;\n    sup: HTMLProps<HTMLElement>;\n    table: HTMLProps<HTMLTableElement>;\n    tbody: HTMLProps<HTMLTableSectionElement>;\n    td: HTMLProps<HTMLTableDataCellElement>;\n    textarea: HTMLProps<HTMLTextAreaElement>;\n    tfoot: HTMLProps<HTMLTableSectionElement>;\n    th: HTMLProps<HTMLTableHeaderCellElement>;\n    thead: HTMLProps<HTMLTableSectionElement>;\n    time: HTMLProps<HTMLElement>;\n    title: HTMLProps<HTMLTitleElement>;\n    tr: HTMLProps<HTMLTableRowElement>;\n    track: HTMLProps<HTMLTrackElement>;\n    u: HTMLProps<HTMLElement>;\n    ul: HTMLProps<HTMLUListElement>;\n    var: HTMLProps<HTMLElement>;\n    video: HTMLProps<HTMLVideoElement> & SvelteVideoProps;\n    wbr: HTMLProps<HTMLElement>;\n\n    svg: SVGProps<SVGSVGElement>;\n\n    animate: SVGProps<SVGElement>; // @TODO: It is SVGAnimateElement but not in dom.d.ts for now.\n    circle: SVGProps<SVGCircleElement>;\n    clipPath: SVGProps<SVGClipPathElement>;\n    defs: SVGProps<SVGDefsElement>;\n    desc: SVGProps<SVGDescElement>;\n    ellipse: SVGProps<SVGEllipseElement>;\n    feBlend: SVGProps<SVGFEBlendElement>;\n    feColorMatrix: SVGProps<SVGFEColorMatrixElement>;\n    feComponentTransfer: SVGProps<SVGFEComponentTransferElement>;\n    feComposite: SVGProps<SVGFECompositeElement>;\n    feConvolveMatrix: SVGProps<SVGFEConvolveMatrixElement>;\n    feDiffuseLighting: SVGProps<SVGFEDiffuseLightingElement>;\n    feDisplacementMap: SVGProps<SVGFEDisplacementMapElement>;\n    feDistantLight: SVGProps<SVGFEDistantLightElement>;\n    feFlood: SVGProps<SVGFEFloodElement>;\n    feFuncA: SVGProps<SVGFEFuncAElement>;\n    feFuncB: SVGProps<SVGFEFuncBElement>;\n    feFuncG: SVGProps<SVGFEFuncGElement>;\n    feFuncR: SVGProps<SVGFEFuncRElement>;\n    feGaussianBlur: SVGProps<SVGFEGaussianBlurElement>;\n    feImage: SVGProps<SVGFEImageElement>;\n    feMerge: SVGProps<SVGFEMergeElement>;\n    feMergeNode: SVGProps<SVGFEMergeNodeElement>;\n    feMorphology: SVGProps<SVGFEMorphologyElement>;\n    feOffset: SVGProps<SVGFEOffsetElement>;\n    fePointLight: SVGProps<SVGFEPointLightElement>;\n    feSpecularLighting: SVGProps<SVGFESpecularLightingElement>;\n    feSpotLight: SVGProps<SVGFESpotLightElement>;\n    feTile: SVGProps<SVGFETileElement>;\n    feTurbulence: SVGProps<SVGFETurbulenceElement>;\n    filter: SVGProps<SVGFilterElement>;\n    foreignObject: SVGProps<SVGForeignObjectElement>;\n    g: SVGProps<SVGGElement>;\n    image: SVGProps<SVGImageElement>;\n    line: SVGProps<SVGLineElement>;\n    linearGradient: SVGProps<SVGLinearGradientElement>;\n    marker: SVGProps<SVGMarkerElement>;\n    mask: SVGProps<SVGMaskElement>;\n    metadata: SVGProps<SVGMetadataElement>;\n    path: SVGProps<SVGPathElement>;\n    pattern: SVGProps<SVGPatternElement>;\n    polygon: SVGProps<SVGPolygonElement>;\n    polyline: SVGProps<SVGPolylineElement>;\n    radialGradient: SVGProps<SVGRadialGradientElement>;\n    rect: SVGProps<SVGRectElement>;\n    stop: SVGProps<SVGStopElement>;\n    switch: SVGProps<SVGSwitchElement>;\n    symbol: SVGProps<SVGSymbolElement>;\n    text: SVGProps<SVGTextElement>;\n    textPath: SVGProps<SVGTextPathElement>;\n    tspan: SVGProps<SVGTSpanElement>;\n    use: SVGProps<SVGUseElement>;\n    view: SVGProps<SVGViewElement>;\n\n    // Svelte specific\n    sveltewindow: HTMLProps<Window> & SvelteWindowProps;\n    sveltebody: HTMLProps<HTMLElement>;\n    sveltefragment: { slot?: string; };\n    svelteoptions: { [name: string]: any };\n    sveltehead: { [name: string]: any };\n    svelteelement: { 'this': string | undefined | null; } & HTMLProps<any> & SVGProps<any> & SapperAnchorProps;\n    // Needed due to backwards compatibility type which hits these\n    'svelte:window': HTMLProps<Window> & SvelteWindowProps;\n    'svelte:body': HTMLProps<HTMLElement>;\n    'svelte:fragment': { slot?: string; };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n  }\n}\n",
  "/node_modules/svelte2tsx/svelte-native-jsx.d.ts": "declare namespace svelteNative.JSX {\n\n    // Every namespace eligible for use needs to implement the following two functions\n    function mapElementTag(\n        tag: string\n    ): any;\n\n    function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n        element: Key | undefined | null, attrs: Elements[Key]\n    ): any;\n    function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n        element: Key | undefined | null, attrEnhancers: T, attrs: Elements[Key] & T\n    ): any;\n\n\n    /* svelte specific */\n    interface ElementClass {\n        $$prop_def: any;\n    }\n\n    interface ElementAttributesProperty {\n        $$prop_def: any; // specify the property name to use\n    }\n\n    // Add empty IntrinsicAttributes to prevent fallback to the one in the JSX namespace\n    interface IntrinsicAttributes {\n    }\n\n    interface IntrinsicElements {\n        [name: string]: { [name: string]: any };\n    }\n}",
  "/node_modules/svelte2tsx/svelte-shims-v4.d.ts": "// Whenever a ambient declaration changes, its number should be increased\n// This way, we avoid the situation where multiple ambient versions of svelte2tsx\n// are loaded and their declarations conflict each other\n// See https://github.com/sveltejs/language-tools/issues/1059 for an example bug that stems from it\n// If you change anything in this file, think about whether or not it should be backported to svelte-shims.d.ts\n\ntype AConstructorTypeOf<T, U extends any[] = any[]> = new (...args: U) => T;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteComponentConstructor<T, U extends import('svelte').ComponentConstructorOptions<any>> = new (options: U) => T;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void\n} | void\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionReturnType = SvelteTransitionConfig | (() => SvelteTransitionConfig)\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteWithOptionalProps<Props, Keys extends keyof Props> = Omit<Props, Keys> & Partial<Pick<Props, Keys>>;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAllProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SveltePropsAnyFallback<Props> = {[K in keyof Props]: Props[K] extends never ? never : Props[K] extends undefined ? any : Props[K]}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlotsAnyFallback<Slots> = {[K in keyof Slots]: {[S in keyof Slots[K]]: Slots[K][S] extends undefined ? any : Slots[K][S]}}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteRestProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlots = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteStore<T> = { subscribe: (run: (value: T) => any, invalidate?: any) => any }\n\n// Forces TypeScript to look into the type which results in a better representation of it\n// which helps for error messages and is necessary for d.ts file transformation so that\n// no ambient type references are left in the output\n/** @internal PRIVATE API, DO NOT USE */\ntype Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype KeysMatching<Obj, V> = {[K in keyof Obj]-?: Obj[K] extends V ? K : never}[keyof Obj]\n/** @internal PRIVATE API, DO NOT USE */\ndeclare type __sveltets_2_CustomEvents<T> = {[K in KeysMatching<T, CustomEvent>]: T[K] extends CustomEvent ? T[K]['detail']: T[K]}\n\ndeclare var process: NodeJS.Process & { browser: boolean }\ndeclare function __sveltets_2_ensureRightProps<Props>(props: Props): {};\ndeclare function __sveltets_2_instanceOf<T = any>(type: AConstructorTypeOf<T>): T;\ndeclare function __sveltets_2_allPropsType(): SvelteAllProps\ndeclare function __sveltets_2_restPropsType(): SvelteRestProps\ndeclare function __sveltets_2_slotsType<Slots, Key extends keyof Slots>(slots: Slots): Record<Key, boolean>;\n\n// Overload of the following two functions is necessary.\n// An empty array of optionalProps makes OptionalProps type any, which means we lose the prop typing.\n// optionalProps need to be first or its type cannot be infered correctly.\n\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\n\ndeclare function __sveltets_2_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<Props & SvelteAllProps>, events: Events, slots: Slots }\n\ndeclare function __sveltets_2_with_any_event<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Props, events: Events & {[evt: string]: CustomEvent<any>;}, slots: Slots }\n\ndeclare function __sveltets_2_store_get<T = any>(store: SvelteStore<T>): T\ndeclare function __sveltets_2_store_get<Store extends SvelteStore<any> | undefined | null>(store: Store): Store extends SvelteStore<infer T> ? T : Store;\ndeclare function __sveltets_2_any(dummy: any): any;\ndeclare function __sveltets_2_invalidate<T>(getValue: () => T): T\n\ndeclare function __sveltets_2_mapWindowEvent<K extends keyof HTMLBodyElementEventMap>(\n    event: K\n): HTMLBodyElementEventMap[K];\ndeclare function __sveltets_2_mapBodyEvent<K extends keyof WindowEventMap>(\n    event: K\n): WindowEventMap[K];\ndeclare function __sveltets_2_mapElementEvent<K extends keyof HTMLElementEventMap>(\n    event: K\n): HTMLElementEventMap[K];\n\ndeclare function __sveltets_2_bubbleEventDef<Events, K extends keyof Events>(\n    events: Events, eventKey: K\n): Events[K];\ndeclare function __sveltets_2_bubbleEventDef(\n    events: any, eventKey: string\n): any;\n\ndeclare const __sveltets_2_customEvent: CustomEvent<any>;\ndeclare function __sveltets_2_toEventTypings<Typings>(): {[Key in keyof Typings]: CustomEvent<Typings[Key]>};\n\ndeclare function __sveltets_2_unionType<T1, T2>(t1: T1, t2: T2): T1 | T2;\ndeclare function __sveltets_2_unionType<T1, T2, T3>(t1: T1, t2: T2, t3: T3): T1 | T2 | T3;\ndeclare function __sveltets_2_unionType<T1, T2, T3, T4>(t1: T1, t2: T2, t3: T3, t4: T4): T1 | T2 | T3 | T4;\ndeclare function __sveltets_2_unionType(...types: any[]): any;\n\ndeclare function __sveltets_2_createSvelte2TsxComponent<Props extends {}, Events extends {}, Slots extends {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): SvelteComponentConstructor<import(\"svelte\").SvelteComponent<Props, Events, Slots>,import('svelte').ComponentConstructorOptions<Props>>;\n\ndeclare function __sveltets_2_unwrapArr<T>(arr: ArrayLike<T>): T\ndeclare function __sveltets_2_unwrapPromiseLike<T>(promise: PromiseLike<T> | T): T\n\n// v2\ndeclare function __sveltets_2_createCreateSlot<Slots = Record<string, Record<string, any>>>(): <SlotName extends keyof Slots>(slotName: SlotName, attrs: Slots[SlotName]) => Record<string, any>;\ndeclare function __sveltets_2_createComponentAny(props: Record<string, any>): import(\"svelte\").SvelteComponent<any, any, any>;\n\ndeclare function __sveltets_2_any(...dummy: any[]): any;\ndeclare function __sveltets_2_empty(...dummy: any[]): {};\ndeclare function __sveltets_2_union<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(t1:T1,t2?:T2,t3?:T3,t4?:T4,t5?:T5,t6?:T6,t7?:T7,t8?:T8,t9?:T9,t10?:T10): T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10;\ndeclare function __sveltets_2_nonNullable<T>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_cssProp(prop: Record<string, any>): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\ndeclare var __sveltets_2_AnimationMove: { from: DOMRect, to: DOMRect }\ndeclare function __sveltets_2_ensureAnimation(animationCall: __sveltets_2_SvelteAnimationReturnType): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void,\n    $$_attributes?: Record<string, any>,\n} | void\ndeclare function __sveltets_2_ensureAction<T extends __sveltets_2_SvelteActionReturnType>(actionCall: T): T extends  {$$_attributes?: any} ? T['$$_attributes'] : {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionReturnType = __sveltets_2_SvelteTransitionConfig | (() => __sveltets_2_SvelteTransitionConfig)\ndeclare function __sveltets_2_ensureTransition(transitionCall: __sveltets_2_SvelteTransitionReturnType): {};\n\n// Includes undefined and null for all types as all usages also allow these\ndeclare function __sveltets_2_ensureType<T>(type: AConstructorTypeOf<T>, el: T | undefined | null): {};\ndeclare function __sveltets_2_ensureType<T1, T2>(type1: AConstructorTypeOf<T1>, type2: AConstructorTypeOf<T2>, el: T1 | T2 | undefined | null): {};\n\n// The following is necessary because there are two clashing errors that can't be solved at the same time\n// when using Svelte2TsxComponent, more precisely the event typings in\n// __sveltets_2_ensureComponent<T extends new (..) => _SvelteComponent<any,||any||<-this,any>>(type: T): T;\n// If we type it as \"any\", we have an error when using sth like {a: CustomEvent<any>}\n// If we type it as \"{}\", we have an error when using sth like {[evt: string]: CustomEvent<any>}\n// If we type it as \"unknown\", we get all kinds of follow up errors which we want to avoid\n// Therefore introduce two more base classes just for this case.\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT\n */\ndeclare type ATypedSvelteComponent = {\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: any;\n\n    $on(event: string, handler: ((e: any) => any) | null | undefined): () => void;\n}\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT.\n * \n * If you're looking for the type of a Svelte Component, use `SvelteComponent` and `ComponentType` instead:\n *\n * ```ts\n * import type { ComponentType, SvelteComponent } from \"svelte\";\n * let myComponentConstructor: ComponentType<SvelteComponent> = ..;\n * ```\n */\ndeclare type ConstructorOfATypedSvelteComponent = new (args: {target: any, props?: any}) => ATypedSvelteComponent\ndeclare function __sveltets_2_ensureComponent<T extends ConstructorOfATypedSvelteComponent | null | undefined>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_ensureArray<T extends ArrayLike<unknown> | Iterable<unknown>>(array: T): T extends ArrayLike<infer U> ? U[] : T extends Iterable<infer U> ? Iterable<U> : any[];\n",
  "/node_modules/svelte2tsx/svelte-shims.d.ts": "// Whenever a ambient declaration changes, its number should be increased\n// This way, we avoid the situation where multiple ambient versions of svelte2tsx\n// are loaded and their declarations conflict each other\n// See https://github.com/sveltejs/language-tools/issues/1059 for an example bug that stems from it\n// If you change anything in this file, think about whether or not it should also be added to svelte-shims-v4.d.ts\n\n// -- start svelte-ls-remove --\ndeclare module '*.svelte' {\n    type _SvelteComponent<Props=any,Events=any,Slots=any> = import(\"svelte\").SvelteComponentTyped<Props,Events,Slots>;\n    export default _SvelteComponent\n}\n// -- end svelte-ls-remove --\n\n/**\n * @deprecated This will be removed soon. Use `SvelteComponentTyped` instead:\n * ```ts\n * import type { SvelteComponentTyped } from 'svelte';\n * ```\n */\ndeclare class Svelte2TsxComponent<\n    Props extends {} = {},\n    Events extends {} = {},\n    Slots extends {} = {}\n> {\n    // svelte2tsx-specific\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: Props;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: Events;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: Slots;\n    // https://svelte.dev/docs#Client-side_component_API\n    constructor(options: Svelte2TsxComponentConstructorParameters<Props>);\n    /**\n     * Causes the callback function to be called whenever the component dispatches an event.\n     * A function is returned that will remove the event listener when called.\n     */\n    $on<K extends keyof Events & string>(event: K, handler: ((e: Events[K]) => any) | null | undefined): () => void;\n    /**\n     * Removes a component from the DOM and triggers any `onDestroy` handlers.\n     */\n    $destroy(): void;\n    /**\n     * Programmatically sets props on an instance.\n     * `component.$set({ x: 1 })` is equivalent to `x = 1` inside the component's `<script>` block.\n     * Calling this method schedules an update for the next microtask — the DOM is __not__ updated synchronously.\n     */\n    $set(props?: Partial<Props>): void;\n    // From SvelteComponent(Dev) definition\n    $$: any;\n    $capture_state(): void;\n    $inject_state(): void;\n}\n\n/** @deprecated PRIVATE API, DO NOT USE, REMOVED SOON */\ninterface Svelte2TsxComponentConstructorParameters<Props extends {}> {\n    /**\n     * An HTMLElement to render to. This option is required.\n     */\n    target: Element | Document | ShadowRoot;\n    /**\n     * A child of `target` to render the component immediately before.\n     */\n    anchor?: Element;\n    /**\n     * An object of properties to supply to the component.\n     */\n    props?: Props;\n    context?: Map<any, any>;\n    hydrate?: boolean;\n    intro?: boolean;\n    $$inline?: boolean;\n}\n\ntype AConstructorTypeOf<T, U extends any[] = any[]> = new (...args: U) => T;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteComponentConstructor<T, U extends import('svelte').ComponentConstructorOptions<any>> = new (options: U) => T;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void\n} | void\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionReturnType = SvelteTransitionConfig | (() => SvelteTransitionConfig)\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteWithOptionalProps<Props, Keys extends keyof Props> = Omit<Props, Keys> & Partial<Pick<Props, Keys>>;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAllProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SveltePropsAnyFallback<Props> = {[K in keyof Props]: Props[K] extends never ? never : Props[K] extends undefined ? any : Props[K]}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlotsAnyFallback<Slots> = {[K in keyof Slots]: {[S in keyof Slots[K]]: Slots[K][S] extends undefined ? any : Slots[K][S]}}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteRestProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlots = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteStore<T> = { subscribe: (run: (value: T) => any, invalidate?: any) => any }\n\n// Forces TypeScript to look into the type which results in a better representation of it\n// which helps for error messages and is necessary for d.ts file transformation so that\n// no ambient type references are left in the output\n/** @internal PRIVATE API, DO NOT USE */\ntype Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype KeysMatching<Obj, V> = {[K in keyof Obj]-?: Obj[K] extends V ? K : never}[keyof Obj]\n/** @internal PRIVATE API, DO NOT USE */\ndeclare type __sveltets_2_CustomEvents<T> = {[K in KeysMatching<T, CustomEvent>]: T[K] extends CustomEvent ? T[K]['detail']: T[K]}\n\ndeclare var process: NodeJS.Process & { browser: boolean }\ndeclare function __sveltets_2_ensureRightProps<Props>(props: Props): {};\ndeclare function __sveltets_2_instanceOf<T = any>(type: AConstructorTypeOf<T>): T;\ndeclare function __sveltets_2_allPropsType(): SvelteAllProps\ndeclare function __sveltets_2_restPropsType(): SvelteRestProps\ndeclare function __sveltets_2_slotsType<Slots, Key extends keyof Slots>(slots: Slots): Record<Key, boolean>;\n\n// Overload of the following two functions is necessary.\n// An empty array of optionalProps makes OptionalProps type any, which means we lose the prop typing.\n// optionalProps need to be first or its type cannot be infered correctly.\n\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\n\ndeclare function __sveltets_2_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<Props & SvelteAllProps>, events: Events, slots: Slots }\n\ndeclare function __sveltets_2_with_any_event<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Props, events: Events & {[evt: string]: CustomEvent<any>;}, slots: Slots }\n\ndeclare function __sveltets_2_store_get<T = any>(store: SvelteStore<T>): T\ndeclare function __sveltets_2_store_get<Store extends SvelteStore<any> | undefined | null>(store: Store): Store extends SvelteStore<infer T> ? T : Store;\ndeclare function __sveltets_2_any(dummy: any): any;\n// declare function __sveltets_1_empty(...dummy: any[]): {};\n// declare function __sveltets_1_componentType(): AConstructorTypeOf<import(\"svelte\").SvelteComponentTyped<any, any, any>>\ndeclare function __sveltets_2_invalidate<T>(getValue: () => T): T\n\ndeclare function __sveltets_2_mapWindowEvent<K extends keyof HTMLBodyElementEventMap>(\n    event: K\n): HTMLBodyElementEventMap[K];\ndeclare function __sveltets_2_mapBodyEvent<K extends keyof WindowEventMap>(\n    event: K\n): WindowEventMap[K];\ndeclare function __sveltets_2_mapElementEvent<K extends keyof HTMLElementEventMap>(\n    event: K\n): HTMLElementEventMap[K];\n\ndeclare function __sveltets_2_bubbleEventDef<Events, K extends keyof Events>(\n    events: Events, eventKey: K\n): Events[K];\ndeclare function __sveltets_2_bubbleEventDef(\n    events: any, eventKey: string\n): any;\n\ndeclare const __sveltets_2_customEvent: CustomEvent<any>;\ndeclare function __sveltets_2_toEventTypings<Typings>(): {[Key in keyof Typings]: CustomEvent<Typings[Key]>};\n\ndeclare function __sveltets_2_unionType<T1, T2>(t1: T1, t2: T2): T1 | T2;\ndeclare function __sveltets_2_unionType<T1, T2, T3>(t1: T1, t2: T2, t3: T3): T1 | T2 | T3;\ndeclare function __sveltets_2_unionType<T1, T2, T3, T4>(t1: T1, t2: T2, t3: T3, t4: T4): T1 | T2 | T3 | T4;\ndeclare function __sveltets_2_unionType(...types: any[]): any;\n\ndeclare function __sveltets_2_createSvelte2TsxComponent<Props, Events, Slots>(\n    render: {props: Props, events: Events, slots: Slots }\n): SvelteComponentConstructor<import(\"svelte\").SvelteComponentTyped<Props, Events, Slots>,import('svelte').ComponentConstructorOptions<Props>>;\n\ndeclare function __sveltets_2_unwrapArr<T>(arr: ArrayLike<T>): T\ndeclare function __sveltets_2_unwrapPromiseLike<T>(promise: PromiseLike<T> | T): T\n\n// v2\ndeclare function __sveltets_2_createCreateSlot<Slots = Record<string, Record<string, any>>>(): <SlotName extends keyof Slots>(slotName: SlotName, attrs: Slots[SlotName]) => Record<string, any>;\ndeclare function __sveltets_2_createComponentAny(props: Record<string, any>): import(\"svelte\").SvelteComponentTyped<any, any, any>;\n\ndeclare function __sveltets_2_any(...dummy: any[]): any;\ndeclare function __sveltets_2_empty(...dummy: any[]): {};\ndeclare function __sveltets_2_union<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(t1:T1,t2?:T2,t3?:T3,t4?:T4,t5?:T5,t6?:T6,t7?:T7,t8?:T8,t9?:T9,t10?:T10): T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10;\ndeclare function __sveltets_2_nonNullable<T>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_cssProp(prop: Record<string, any>): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\ndeclare var __sveltets_2_AnimationMove: { from: DOMRect, to: DOMRect }\ndeclare function __sveltets_2_ensureAnimation(animationCall: __sveltets_2_SvelteAnimationReturnType): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void,\n    $$_attributes?: Record<string, any>,\n} | void\ndeclare function __sveltets_2_ensureAction<T extends __sveltets_2_SvelteActionReturnType>(actionCall: T): T extends  {$$_attributes?: any} ? T['$$_attributes'] : {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionReturnType = __sveltets_2_SvelteTransitionConfig | (() => __sveltets_2_SvelteTransitionConfig)\ndeclare function __sveltets_2_ensureTransition(transitionCall: __sveltets_2_SvelteTransitionReturnType): {};\n\n// Includes undefined and null for all types as all usages also allow these\ndeclare function __sveltets_2_ensureType<T>(type: AConstructorTypeOf<T>, el: T | undefined | null): {};\ndeclare function __sveltets_2_ensureType<T1, T2>(type1: AConstructorTypeOf<T1>, type2: AConstructorTypeOf<T2>, el: T1 | T2 | undefined | null): {};\n\n// The following is necessary because there are two clashing errors that can't be solved at the same time\n// when using Svelte2TsxComponent, more precisely the event typings in\n// __sveltets_2_ensureComponent<T extends new (..) => _SvelteComponent<any,||any||<-this,any>>(type: T): T;\n// If we type it as \"any\", we have an error when using sth like {a: CustomEvent<any>}\n// If we type it as \"{}\", we have an error when using sth like {[evt: string]: CustomEvent<any>}\n// If we type it as \"unknown\", we get all kinds of follow up errors which we want to avoid\n// Therefore introduce two more base classes just for this case.\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT\n */\ndeclare type ATypedSvelteComponent = {\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: any;\n\n    $on(event: string, handler: ((e: any) => any) | null | undefined): () => void;\n}\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT.\n * \n * If you're looking for the type of a Svelte Component, use `SvelteComponentTyped` and `ComponentType` instead:\n *\n * ```ts\n * import type { ComponentType, SvelteComponentTyped } from \"svelte\";\n * let myComponentConstructor: ComponentType<SvelteComponentTyped> = ..;\n * ```\n */\ndeclare type ConstructorOfATypedSvelteComponent = new (args: {target: any, props?: any}) => ATypedSvelteComponent\ndeclare function __sveltets_2_ensureComponent<T extends ConstructorOfATypedSvelteComponent | null | undefined>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_ensureArray<T extends ArrayLike<unknown>>(array: T): T extends ArrayLike<infer U> ? U[] : any[];\n",
  "/node_modules/svelte-check/dist/src/svelte-jsx-v4.d.ts": "/// <reference lib=\"dom\" />\n\ndeclare namespace svelteHTML {\n\n  // Every namespace eligible for use needs to implement the following two functions\n  /**\n   * @internal do not use\n   */\n  function mapElementTag<K extends keyof ElementTagNameMap>(\n    tag: K\n  ): ElementTagNameMap[K];\n  function mapElementTag<K extends keyof SVGElementTagNameMap>(\n    tag: K\n  ): SVGElementTagNameMap[K];\n  function mapElementTag(\n    tag: any\n  ): any; // needs to be any because used in context of <svelte:element>\n\n  /**\n   * @internal do not use\n   */\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrs: string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrsEnhancers: T, attrs: (string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]) & T\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n\n  // For backwards-compatibility and ease-of-use, in case someone enhanced the typings from import('svelte/elements').HTMLAttributes/SVGAttributes\n  interface HTMLAttributes<T extends EventTarget = any> {}\n  interface SVGAttributes<T extends EventTarget = any> {}\n\n  /**\n   * @internal do not use\n   */\n  type HTMLProps<Property extends string, Override> =\n    Omit<import('svelte/elements').SvelteHTMLElements[Property], keyof Override> & Override;\n\n  interface IntrinsicElements {\n    a: HTMLProps<'a', HTMLAttributes>;\n    abbr: HTMLProps<'abbr', HTMLAttributes>;\n    address: HTMLProps<'address', HTMLAttributes>;\n    area: HTMLProps<'area', HTMLAttributes>;\n    article: HTMLProps<'article', HTMLAttributes>;\n    aside: HTMLProps<'aside', HTMLAttributes>;\n    audio: HTMLProps<'audio', HTMLAttributes>;\n    b: HTMLProps<'b', HTMLAttributes>;\n    base: HTMLProps<'base', HTMLAttributes>;\n    bdi: HTMLProps<'bdi', HTMLAttributes>;\n    bdo: HTMLProps<'bdo', HTMLAttributes>;\n    big: HTMLProps<'big', HTMLAttributes>;\n    blockquote: HTMLProps<'blockquote', HTMLAttributes>;\n    body: HTMLProps<'body', HTMLAttributes>;\n    br: HTMLProps<'br', HTMLAttributes>;\n    button: HTMLProps<'button', HTMLAttributes>;\n    canvas: HTMLProps<'canvas', HTMLAttributes>;\n    caption: HTMLProps<'caption', HTMLAttributes>;\n    cite: HTMLProps<'cite', HTMLAttributes>;\n    code: HTMLProps<'code', HTMLAttributes>;\n    col: HTMLProps<'col', HTMLAttributes>;\n    colgroup: HTMLProps<'colgroup', HTMLAttributes>;\n    data: HTMLProps<'data', HTMLAttributes>;\n    datalist: HTMLProps<'datalist', HTMLAttributes>;\n    dd: HTMLProps<'dd', HTMLAttributes>;\n    del: HTMLProps<'del', HTMLAttributes>;\n    details: HTMLProps<'details', HTMLAttributes>;\n    dfn: HTMLProps<'dfn', HTMLAttributes>;\n    dialog: HTMLProps<'dialog', HTMLAttributes>;\n    div: HTMLProps<'div', HTMLAttributes>;\n    dl: HTMLProps<'dl', HTMLAttributes>;\n    dt: HTMLProps<'dt', HTMLAttributes>;\n    em: HTMLProps<'em', HTMLAttributes>;\n    embed: HTMLProps<'embed', HTMLAttributes>;\n    fieldset: HTMLProps<'fieldset', HTMLAttributes>;\n    figcaption: HTMLProps<'figcaption', HTMLAttributes>;\n    figure: HTMLProps<'figure', HTMLAttributes>;\n    footer: HTMLProps<'footer', HTMLAttributes>;\n    form: HTMLProps<'form', HTMLAttributes>;\n    h1: HTMLProps<'h1', HTMLAttributes>;\n    h2: HTMLProps<'h2', HTMLAttributes>;\n    h3: HTMLProps<'h3', HTMLAttributes>;\n    h4: HTMLProps<'h4', HTMLAttributes>;\n    h5: HTMLProps<'h5', HTMLAttributes>;\n    h6: HTMLProps<'h6', HTMLAttributes>;\n    head: HTMLProps<'head', HTMLAttributes>;\n    header: HTMLProps<'header', HTMLAttributes>;\n    hgroup: HTMLProps<'hgroup', HTMLAttributes>;\n    hr: HTMLProps<'hr', HTMLAttributes>;\n    html: HTMLProps<'html', HTMLAttributes>;\n    i: HTMLProps<'i', HTMLAttributes>;\n    iframe: HTMLProps<'iframe', HTMLAttributes>;\n    img: HTMLProps<'img', HTMLAttributes>;\n    input: HTMLProps<'input', HTMLAttributes>;\n    ins: HTMLProps<'ins', HTMLAttributes>;\n    kbd: HTMLProps<'kbd', HTMLAttributes>;\n    keygen: HTMLProps<'keygen', HTMLAttributes>;\n    label: HTMLProps<'label', HTMLAttributes>;\n    legend: HTMLProps<'legend', HTMLAttributes>;\n    li: HTMLProps<'li', HTMLAttributes>;\n    link: HTMLProps<'link', HTMLAttributes>;\n    main: HTMLProps<'main', HTMLAttributes>;\n    map: HTMLProps<'map', HTMLAttributes>;\n    mark: HTMLProps<'mark', HTMLAttributes>;\n    menu: HTMLProps<'menu', HTMLAttributes>;\n    menuitem: HTMLProps<'menuitem', HTMLAttributes>;\n    meta: HTMLProps<'meta', HTMLAttributes>;\n    meter: HTMLProps<'meter', HTMLAttributes>;\n    nav: HTMLProps<'nav', HTMLAttributes>;\n    noscript: HTMLProps<'noscript', HTMLAttributes>;\n    object: HTMLProps<'object', HTMLAttributes>;\n    ol: HTMLProps<'ol', HTMLAttributes>;\n    optgroup: HTMLProps<'optgroup', HTMLAttributes>;\n    option: HTMLProps<'option', HTMLAttributes>;\n    output: HTMLProps<'output', HTMLAttributes>;\n    p: HTMLProps<'p', HTMLAttributes>;\n    param: HTMLProps<'param', HTMLAttributes>;\n    picture: HTMLProps<'picture', HTMLAttributes>;\n    pre: HTMLProps<'pre', HTMLAttributes>;\n    progress: HTMLProps<'progress', HTMLAttributes>;\n    q: HTMLProps<'q', HTMLAttributes>;\n    rp: HTMLProps<'rp', HTMLAttributes>;\n    rt: HTMLProps<'rt', HTMLAttributes>;\n    ruby: HTMLProps<'ruby', HTMLAttributes>;\n    s: HTMLProps<'s', HTMLAttributes>;\n    samp: HTMLProps<'samp', HTMLAttributes>;\n    slot: HTMLProps<'slot', HTMLAttributes>;\n    script: HTMLProps<'script', HTMLAttributes>;\n    section: HTMLProps<'section', HTMLAttributes>;\n    select: HTMLProps<'select', HTMLAttributes>;\n    small: HTMLProps<'small', HTMLAttributes>;\n    source: HTMLProps<'source', HTMLAttributes>;\n    span: HTMLProps<'span', HTMLAttributes>;\n    strong: HTMLProps<'strong', HTMLAttributes>;\n    style: HTMLProps<'style', HTMLAttributes>;\n    sub: HTMLProps<'sub', HTMLAttributes>;\n    summary: HTMLProps<'summary', HTMLAttributes>;\n    sup: HTMLProps<'sup', HTMLAttributes>;\n    table: HTMLProps<'table', HTMLAttributes>;\n    template: HTMLProps<'template', HTMLAttributes>;\n    tbody: HTMLProps<'tbody', HTMLAttributes>;\n    td: HTMLProps<'td', HTMLAttributes>;\n    textarea: HTMLProps<'textarea', HTMLAttributes>;\n    tfoot: HTMLProps<'tfoot', HTMLAttributes>;\n    th: HTMLProps<'th', HTMLAttributes>;\n    thead: HTMLProps<'thead', HTMLAttributes>;\n    time: HTMLProps<'time', HTMLAttributes>;\n    title: HTMLProps<'title', HTMLAttributes>;\n    tr: HTMLProps<'tr', HTMLAttributes>;\n    track: HTMLProps<'track', HTMLAttributes>;\n    u: HTMLProps<'u', HTMLAttributes>;\n    ul: HTMLProps<'ul', HTMLAttributes>;\n    var: HTMLProps<'var', HTMLAttributes>;\n    video: HTMLProps<'video', HTMLAttributes>;\n    wbr: HTMLProps<'wbr', HTMLAttributes>;\n    webview: HTMLProps<'webview', HTMLAttributes>;\n    // SVG\n    svg: HTMLProps<'svg', SVGAttributes>;\n\n    animate: HTMLProps<'animate', SVGAttributes>;\n    animateMotion: HTMLProps<'animateMotion', SVGAttributes>;\n    animateTransform: HTMLProps<'animateTransform', SVGAttributes>;\n    circle: HTMLProps<'circle', SVGAttributes>;\n    clipPath: HTMLProps<'clipPath', SVGAttributes>;\n    defs: HTMLProps<'defs', SVGAttributes>;\n    desc: HTMLProps<'desc', SVGAttributes>;\n    ellipse: HTMLProps<'ellipse', SVGAttributes>;\n    feBlend: HTMLProps<'feBlend', SVGAttributes>;\n    feColorMatrix: HTMLProps<'feColorMatrix', SVGAttributes>;\n    feComponentTransfer: HTMLProps<'feComponentTransfer', SVGAttributes>;\n    feComposite: HTMLProps<'feComposite', SVGAttributes>;\n    feConvolveMatrix: HTMLProps<'feConvolveMatrix', SVGAttributes>;\n    feDiffuseLighting: HTMLProps<'feDiffuseLighting', SVGAttributes>;\n    feDisplacementMap: HTMLProps<'feDisplacementMap', SVGAttributes>;\n    feDistantLight: HTMLProps<'feDistantLight', SVGAttributes>;\n    feDropShadow: HTMLProps<'feDropShadow', SVGAttributes>;\n    feFlood: HTMLProps<'feFlood', SVGAttributes>;\n    feFuncA: HTMLProps<'feFuncA', SVGAttributes>;\n    feFuncB: HTMLProps<'feFuncB', SVGAttributes>;\n    feFuncG: HTMLProps<'feFuncG', SVGAttributes>;\n    feFuncR: HTMLProps<'feFuncR', SVGAttributes>;\n    feGaussianBlur: HTMLProps<'feGaussianBlur', SVGAttributes>;\n    feImage: HTMLProps<'feImage', SVGAttributes>;\n    feMerge: HTMLProps<'feMerge', SVGAttributes>;\n    feMergeNode: HTMLProps<'feMergeNode', SVGAttributes>;\n    feMorphology: HTMLProps<'feMorphology', SVGAttributes>;\n    feOffset: HTMLProps<'feOffset', SVGAttributes>;\n    fePointLight: HTMLProps<'fePointLight', SVGAttributes>;\n    feSpecularLighting: HTMLProps<'feSpecularLighting', SVGAttributes>;\n    feSpotLight: HTMLProps<'feSpotLight', SVGAttributes>;\n    feTile: HTMLProps<'feTile', SVGAttributes>;\n    feTurbulence: HTMLProps<'feTurbulence', SVGAttributes>;\n    filter: HTMLProps<'filter', SVGAttributes>;\n    foreignObject: HTMLProps<'foreignObject', SVGAttributes>;\n    g: HTMLProps<'g', SVGAttributes>;\n    image: HTMLProps<'image', SVGAttributes>;\n    line: HTMLProps<'line', SVGAttributes>;\n    linearGradient: HTMLProps<'linearGradient', SVGAttributes>;\n    marker: HTMLProps<'marker', SVGAttributes>;\n    mask: HTMLProps<'mask', SVGAttributes>;\n    metadata: HTMLProps<'metadata', SVGAttributes>;\n    mpath: HTMLProps<'mpath', SVGAttributes>;\n    path: HTMLProps<'path', SVGAttributes>;\n    pattern: HTMLProps<'pattern', SVGAttributes>;\n    polygon: HTMLProps<'polygon', SVGAttributes>;\n    polyline: HTMLProps<'polyline', SVGAttributes>;\n    radialGradient: HTMLProps<'radialGradient', SVGAttributes>;\n    rect: HTMLProps<'rect', SVGAttributes>;\n    stop: HTMLProps<'stop', SVGAttributes>;\n    switch: HTMLProps<'switch', SVGAttributes>;\n    symbol: HTMLProps<'symbol', SVGAttributes>;\n    text: HTMLProps<'text', SVGAttributes>;\n    textPath: HTMLProps<'textPath', SVGAttributes>;\n    tspan: HTMLProps<'tspan', SVGAttributes>;\n    use: HTMLProps<'use', SVGAttributes>;\n    view: HTMLProps<'view', SVGAttributes>;\n\n    // Svelte specific\n    'svelte:window': HTMLProps<'svelte:window', HTMLAttributes>;\n    'svelte:body': HTMLProps<'svelte:body', HTMLAttributes>;\n    'svelte:fragment': { slot?: string };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n\n    [name: string]: { [name: string]: any };\n  }\n\n}\n",
  "/node_modules/svelte-check/dist/src/svelte-jsx.d.ts": "/// <reference lib=\"dom\" />\n\ndeclare namespace svelteHTML {\n\n  // Every namespace eligible for use needs to implement the following two functions\n  /**\n   * @internal do not use\n   */\n  function mapElementTag<K extends keyof ElementTagNameMap>(\n    tag: K\n  ): ElementTagNameMap[K];\n  function mapElementTag<K extends keyof SVGElementTagNameMap>(\n    tag: K\n  ): SVGElementTagNameMap[K];\n  function mapElementTag(\n    tag: any\n  ): any; // needs to be any because used in context of <svelte:element>\n\n  /**\n   * @internal do not use\n   */\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrs: string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n  function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n    // \"undefined | null\" because of <svelte:element>\n    element: Key | undefined | null, attrsEnhancers: T, attrs: (string extends Key ? import('svelte/elements').HTMLAttributes<any> : Elements[Key]) & T\n  ): Key extends keyof ElementTagNameMap ? ElementTagNameMap[Key] : Key extends keyof SVGElementTagNameMap ? SVGElementTagNameMap[Key] : any;\n\n  // For backwards-compatibility and ease-of-use, in case someone enhanced the typings from import('svelte/elements').HTMLAttributes/SVGAttributes\n  interface HTMLAttributes<T extends EventTarget = any> {}\n  interface SVGAttributes<T extends EventTarget = any> {}\n\n  /**\n   * @internal do not use\n   */\n  type EventsWithColon<T> = {[Property in keyof T as Property extends `on${infer Key}` ? `on:${Key}` : Property]?: T[Property] }\n  /**\n   * @internal do not use\n   */\n  type HTMLProps<Property extends string, Override> =\n    // This omit chain ensures that properties manually defined in the new transformation take precedence\n    // over those manually defined in the old, taking precendence over the defaults, to make sth like this possible\n    // https://github.com/sveltejs/language-tools/issues/1352#issuecomment-1248627516\n    // The AttributeNames Omit is necessary because the old transformation only has HTMLAttributes on which types for all\n    // elements are defined, which would silence type errors in the new transformation.\n    Omit<\n      Omit<import('svelte/elements').SvelteHTMLElements[Property], keyof EventsWithColon<Omit<svelte.JSX.IntrinsicElements[Property & string], svelte.JSX.AttributeNames>>> & EventsWithColon<Omit<svelte.JSX.IntrinsicElements[Property & string], svelte.JSX.AttributeNames>>,\n      keyof Override\n    > & Override;\n  /**\n   * @internal do not use\n   */\n  type RemoveIndex<T> = {\n    [ K in keyof T as string extends K ? never : K ] : T[K]\n  };\n\n  // the following type construct makes sure that we can use the new typings while maintaining backwards-compatibility in case someone enhanced the old typings\n  interface IntrinsicElements extends Omit<RemoveIndex<svelte.JSX.IntrinsicElements>, keyof RemoveIndex<import('svelte/elements').SvelteHTMLElements>> {\n    a: HTMLProps<'a', HTMLAttributes>;\n    abbr: HTMLProps<'abbr', HTMLAttributes>;\n    address: HTMLProps<'address', HTMLAttributes>;\n    area: HTMLProps<'area', HTMLAttributes>;\n    article: HTMLProps<'article', HTMLAttributes>;\n    aside: HTMLProps<'aside', HTMLAttributes>;\n    audio: HTMLProps<'audio', HTMLAttributes>;\n    b: HTMLProps<'b', HTMLAttributes>;\n    base: HTMLProps<'base', HTMLAttributes>;\n    bdi: HTMLProps<'bdi', HTMLAttributes>;\n    bdo: HTMLProps<'bdo', HTMLAttributes>;\n    big: HTMLProps<'big', HTMLAttributes>;\n    blockquote: HTMLProps<'blockquote', HTMLAttributes>;\n    body: HTMLProps<'body', HTMLAttributes>;\n    br: HTMLProps<'br', HTMLAttributes>;\n    button: HTMLProps<'button', HTMLAttributes>;\n    canvas: HTMLProps<'canvas', HTMLAttributes>;\n    caption: HTMLProps<'caption', HTMLAttributes>;\n    cite: HTMLProps<'cite', HTMLAttributes>;\n    code: HTMLProps<'code', HTMLAttributes>;\n    col: HTMLProps<'col', HTMLAttributes>;\n    colgroup: HTMLProps<'colgroup', HTMLAttributes>;\n    data: HTMLProps<'data', HTMLAttributes>;\n    datalist: HTMLProps<'datalist', HTMLAttributes>;\n    dd: HTMLProps<'dd', HTMLAttributes>;\n    del: HTMLProps<'del', HTMLAttributes>;\n    details: HTMLProps<'details', HTMLAttributes>;\n    dfn: HTMLProps<'dfn', HTMLAttributes>;\n    dialog: HTMLProps<'dialog', HTMLAttributes>;\n    div: HTMLProps<'div', HTMLAttributes>;\n    dl: HTMLProps<'dl', HTMLAttributes>;\n    dt: HTMLProps<'dt', HTMLAttributes>;\n    em: HTMLProps<'em', HTMLAttributes>;\n    embed: HTMLProps<'embed', HTMLAttributes>;\n    fieldset: HTMLProps<'fieldset', HTMLAttributes>;\n    figcaption: HTMLProps<'figcaption', HTMLAttributes>;\n    figure: HTMLProps<'figure', HTMLAttributes>;\n    footer: HTMLProps<'footer', HTMLAttributes>;\n    form: HTMLProps<'form', HTMLAttributes>;\n    h1: HTMLProps<'h1', HTMLAttributes>;\n    h2: HTMLProps<'h2', HTMLAttributes>;\n    h3: HTMLProps<'h3', HTMLAttributes>;\n    h4: HTMLProps<'h4', HTMLAttributes>;\n    h5: HTMLProps<'h5', HTMLAttributes>;\n    h6: HTMLProps<'h6', HTMLAttributes>;\n    head: HTMLProps<'head', HTMLAttributes>;\n    header: HTMLProps<'header', HTMLAttributes>;\n    hgroup: HTMLProps<'hgroup', HTMLAttributes>;\n    hr: HTMLProps<'hr', HTMLAttributes>;\n    html: HTMLProps<'html', HTMLAttributes>;\n    i: HTMLProps<'i', HTMLAttributes>;\n    iframe: HTMLProps<'iframe', HTMLAttributes>;\n    img: HTMLProps<'img', HTMLAttributes>;\n    input: HTMLProps<'input', HTMLAttributes>;\n    ins: HTMLProps<'ins', HTMLAttributes>;\n    kbd: HTMLProps<'kbd', HTMLAttributes>;\n    keygen: HTMLProps<'keygen', HTMLAttributes>;\n    label: HTMLProps<'label', HTMLAttributes>;\n    legend: HTMLProps<'legend', HTMLAttributes>;\n    li: HTMLProps<'li', HTMLAttributes>;\n    link: HTMLProps<'link', HTMLAttributes>;\n    main: HTMLProps<'main', HTMLAttributes>;\n    map: HTMLProps<'map', HTMLAttributes>;\n    mark: HTMLProps<'mark', HTMLAttributes>;\n    menu: HTMLProps<'menu', HTMLAttributes>;\n    menuitem: HTMLProps<'menuitem', HTMLAttributes>;\n    meta: HTMLProps<'meta', HTMLAttributes>;\n    meter: HTMLProps<'meter', HTMLAttributes>;\n    nav: HTMLProps<'nav', HTMLAttributes>;\n    noscript: HTMLProps<'noscript', HTMLAttributes>;\n    object: HTMLProps<'object', HTMLAttributes>;\n    ol: HTMLProps<'ol', HTMLAttributes>;\n    optgroup: HTMLProps<'optgroup', HTMLAttributes>;\n    option: HTMLProps<'option', HTMLAttributes>;\n    output: HTMLProps<'output', HTMLAttributes>;\n    p: HTMLProps<'p', HTMLAttributes>;\n    param: HTMLProps<'param', HTMLAttributes>;\n    picture: HTMLProps<'picture', HTMLAttributes>;\n    pre: HTMLProps<'pre', HTMLAttributes>;\n    progress: HTMLProps<'progress', HTMLAttributes>;\n    q: HTMLProps<'q', HTMLAttributes>;\n    rp: HTMLProps<'rp', HTMLAttributes>;\n    rt: HTMLProps<'rt', HTMLAttributes>;\n    ruby: HTMLProps<'ruby', HTMLAttributes>;\n    s: HTMLProps<'s', HTMLAttributes>;\n    samp: HTMLProps<'samp', HTMLAttributes>;\n    slot: HTMLProps<'slot', HTMLAttributes>;\n    script: HTMLProps<'script', HTMLAttributes>;\n    section: HTMLProps<'section', HTMLAttributes>;\n    select: HTMLProps<'select', HTMLAttributes>;\n    small: HTMLProps<'small', HTMLAttributes>;\n    source: HTMLProps<'source', HTMLAttributes>;\n    span: HTMLProps<'span', HTMLAttributes>;\n    strong: HTMLProps<'strong', HTMLAttributes>;\n    style: HTMLProps<'style', HTMLAttributes>;\n    sub: HTMLProps<'sub', HTMLAttributes>;\n    summary: HTMLProps<'summary', HTMLAttributes>;\n    sup: HTMLProps<'sup', HTMLAttributes>;\n    table: HTMLProps<'table', HTMLAttributes>;\n    template: HTMLProps<'template', HTMLAttributes>;\n    tbody: HTMLProps<'tbody', HTMLAttributes>;\n    td: HTMLProps<'td', HTMLAttributes>;\n    textarea: HTMLProps<'textarea', HTMLAttributes>;\n    tfoot: HTMLProps<'tfoot', HTMLAttributes>;\n    th: HTMLProps<'th', HTMLAttributes>;\n    thead: HTMLProps<'thead', HTMLAttributes>;\n    time: HTMLProps<'time', HTMLAttributes>;\n    title: HTMLProps<'title', HTMLAttributes>;\n    tr: HTMLProps<'tr', HTMLAttributes>;\n    track: HTMLProps<'track', HTMLAttributes>;\n    u: HTMLProps<'u', HTMLAttributes>;\n    ul: HTMLProps<'ul', HTMLAttributes>;\n    var: HTMLProps<'var', HTMLAttributes>;\n    video: HTMLProps<'video', HTMLAttributes>;\n    wbr: HTMLProps<'wbr', HTMLAttributes>;\n    webview: HTMLProps<'webview', HTMLAttributes>;\n    // SVG\n    svg: HTMLProps<'svg', SVGAttributes>;\n\n    animate: HTMLProps<'animate', SVGAttributes>;\n    animateMotion: HTMLProps<'animateMotion', SVGAttributes>;\n    animateTransform: HTMLProps<'animateTransform', SVGAttributes>;\n    circle: HTMLProps<'circle', SVGAttributes>;\n    clipPath: HTMLProps<'clipPath', SVGAttributes>;\n    defs: HTMLProps<'defs', SVGAttributes>;\n    desc: HTMLProps<'desc', SVGAttributes>;\n    ellipse: HTMLProps<'ellipse', SVGAttributes>;\n    feBlend: HTMLProps<'feBlend', SVGAttributes>;\n    feColorMatrix: HTMLProps<'feColorMatrix', SVGAttributes>;\n    feComponentTransfer: HTMLProps<'feComponentTransfer', SVGAttributes>;\n    feComposite: HTMLProps<'feComposite', SVGAttributes>;\n    feConvolveMatrix: HTMLProps<'feConvolveMatrix', SVGAttributes>;\n    feDiffuseLighting: HTMLProps<'feDiffuseLighting', SVGAttributes>;\n    feDisplacementMap: HTMLProps<'feDisplacementMap', SVGAttributes>;\n    feDistantLight: HTMLProps<'feDistantLight', SVGAttributes>;\n    feDropShadow: HTMLProps<'feDropShadow', SVGAttributes>;\n    feFlood: HTMLProps<'feFlood', SVGAttributes>;\n    feFuncA: HTMLProps<'feFuncA', SVGAttributes>;\n    feFuncB: HTMLProps<'feFuncB', SVGAttributes>;\n    feFuncG: HTMLProps<'feFuncG', SVGAttributes>;\n    feFuncR: HTMLProps<'feFuncR', SVGAttributes>;\n    feGaussianBlur: HTMLProps<'feGaussianBlur', SVGAttributes>;\n    feImage: HTMLProps<'feImage', SVGAttributes>;\n    feMerge: HTMLProps<'feMerge', SVGAttributes>;\n    feMergeNode: HTMLProps<'feMergeNode', SVGAttributes>;\n    feMorphology: HTMLProps<'feMorphology', SVGAttributes>;\n    feOffset: HTMLProps<'feOffset', SVGAttributes>;\n    fePointLight: HTMLProps<'fePointLight', SVGAttributes>;\n    feSpecularLighting: HTMLProps<'feSpecularLighting', SVGAttributes>;\n    feSpotLight: HTMLProps<'feSpotLight', SVGAttributes>;\n    feTile: HTMLProps<'feTile', SVGAttributes>;\n    feTurbulence: HTMLProps<'feTurbulence', SVGAttributes>;\n    filter: HTMLProps<'filter', SVGAttributes>;\n    foreignObject: HTMLProps<'foreignObject', SVGAttributes>;\n    g: HTMLProps<'g', SVGAttributes>;\n    image: HTMLProps<'image', SVGAttributes>;\n    line: HTMLProps<'line', SVGAttributes>;\n    linearGradient: HTMLProps<'linearGradient', SVGAttributes>;\n    marker: HTMLProps<'marker', SVGAttributes>;\n    mask: HTMLProps<'mask', SVGAttributes>;\n    metadata: HTMLProps<'metadata', SVGAttributes>;\n    mpath: HTMLProps<'mpath', SVGAttributes>;\n    path: HTMLProps<'path', SVGAttributes>;\n    pattern: HTMLProps<'pattern', SVGAttributes>;\n    polygon: HTMLProps<'polygon', SVGAttributes>;\n    polyline: HTMLProps<'polyline', SVGAttributes>;\n    radialGradient: HTMLProps<'radialGradient', SVGAttributes>;\n    rect: HTMLProps<'rect', SVGAttributes>;\n    stop: HTMLProps<'stop', SVGAttributes>;\n    switch: HTMLProps<'switch', SVGAttributes>;\n    symbol: HTMLProps<'symbol', SVGAttributes>;\n    text: HTMLProps<'text', SVGAttributes>;\n    textPath: HTMLProps<'textPath', SVGAttributes>;\n    tspan: HTMLProps<'tspan', SVGAttributes>;\n    use: HTMLProps<'use', SVGAttributes>;\n    view: HTMLProps<'view', SVGAttributes>;\n\n    // Svelte specific\n    'svelte:window': HTMLProps<'svelte:window', HTMLAttributes>;\n    'svelte:body': HTMLProps<'svelte:body', HTMLAttributes>;\n    'svelte:fragment': { slot?: string };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n\n    [name: string]: { [name: string]: any };\n  }\n\n}\n\n// Keep svelte.JSX for backwards compatibility, in case someone enhanced it with their own typings,\n// which we can transform to the new svelteHTML namespace.\n/**\n * @deprecated use the types from `svelte/elements` instead, or the `svelteHTML` namespace.\n * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n */\ndeclare namespace svelte.JSX {\n\n  /* svelte specific */\n  interface ElementClass {\n      $$prop_def: any;\n  }\n\n  interface ElementAttributesProperty {\n      $$prop_def: any; // specify the property name to use\n  }\n\n  /* html jsx */\n\n  interface IntrinsicAttributes {\n    slot?: string;\n  }\n\n  //\n  // Event Handler Types\n  // ----------------------------------------------------------------------\n  type EventHandler<E extends Event = Event, T extends EventTarget = HTMLElement> =\n    (event: E & { currentTarget: EventTarget & T}) => any;\n\n  type ClipboardEventHandler<T extends EventTarget> = EventHandler<ClipboardEvent, T>;\n  type CompositionEventHandler<T extends EventTarget> = EventHandler<CompositionEvent, T>;\n  type DragEventHandler<T extends EventTarget> = EventHandler<DragEvent, T>;\n  type FocusEventHandler<T extends EventTarget> = EventHandler<FocusEvent, T>;\n  type FormEventHandler<T extends EventTarget> = EventHandler<Event, T>;\n  type ChangeEventHandler<T extends EventTarget> = EventHandler<Event, T>;\n  type KeyboardEventHandler<T extends EventTarget> = EventHandler<KeyboardEvent, T>;\n  type MouseEventHandler<T extends EventTarget> = EventHandler<MouseEvent, T>;\n  type TouchEventHandler<T extends EventTarget> = EventHandler<TouchEvent, T>;\n  type PointerEventHandler<T extends EventTarget> = EventHandler<PointerEvent, T>;\n  type UIEventHandler<T extends EventTarget> = EventHandler<UIEvent, T>;\n  type WheelEventHandler<T extends EventTarget> = EventHandler<WheelEvent, T>;\n  type AnimationEventHandler<T extends EventTarget> = EventHandler<AnimationEvent, T>;\n  type TransitionEventHandler<T extends EventTarget> = EventHandler<TransitionEvent, T>;\n  type MessageEventHandler<T extends EventTarget> = EventHandler<MessageEvent, T>;\n\n  /** @deprecated DO NOT USE, WILL BE REMOVED SOON */\n  type AttributeNames =\n  |'oncopy'\n  |'oncut'\n  |'onpaste'\n  |'oncompositionend'\n  |'oncompositionstart'\n  |'oncompositionupdate'\n  |'onfocus'\n  |'onfocusin'\n  |'onfocusout'\n  |'onblur'\n  |'onchange'\n  |'oninput'\n  |'onreset'\n  |'onsubmit'\n  |'oninvalid'\n  |'onbeforeinput'\n  |'onload'\n  |'onerror'\n  |'ontoggle'\n  |'onkeydown'\n  |'onkeypress'\n  |'onkeyup'\n  |'onabort'\n  |'oncanplay'\n  |'oncanplaythrough'\n  |'oncuechange'\n  |'ondurationchange'\n  |'onemptied'\n  |'onencrypted'\n  |'onended'\n  |'onloadeddata'\n  |'onloadedmetadata'\n  |'onloadstart'\n  |'onpause'\n  |'onplay'\n  |'onplaying'\n  |'onprogress'\n  |'onratechange'\n  |'onseeked'\n  |'onseeking'\n  |'onstalled'\n  |'onsuspend'\n  |'ontimeupdate'\n  |'onvolumechange'\n  |'onwaiting'\n  |'onauxclick'\n  |'onclick'\n  |'oncontextmenu'\n  |'ondblclick'\n  |'ondrag'\n  |'ondragend'\n  |'ondragenter'\n  |'ondragexit'\n  |'ondragleave'\n  |'ondragover'\n  |'ondragstart'\n  |'ondrop'\n  |'onmousedown'\n  |'onmouseenter'\n  |'onmouseleave'\n  |'onmousemove'\n  |'onmouseout'\n  |'onmouseover'\n  |'onmouseup'\n  |'onselect'\n  |'onselectionchange'\n  |'onselectstart'\n  |'ontouchcancel'\n  |'ontouchend'\n  |'ontouchmove'\n  |'ontouchstart'\n  |'ongotpointercapture'\n  |'onpointercancel'\n  |'onpointerdown'\n  |'onpointerenter'\n  |'onpointerleave'\n  |'onpointermove'\n  |'onpointerout'\n  |'onpointerover'\n  |'onpointerup'\n  |'onlostpointercapture'\n  |'onscroll'\n  |'onresize'\n  |'onwheel'\n  |'onanimationstart'\n  |'onanimationend'\n  |'onanimationiteration'\n  |'ontransitionstart'\n  |'ontransitionrun'\n  |'ontransitionend'\n  |'ontransitioncancel'\n  |'onoutrostart'\n  |'onoutroend'\n  |'onintrostart'\n  |'onintroend'\n  |'onmessage'\n  |'onmessageerror'\n  |'oncancel'\n  |'onclose'\n  |'onfullscreenchange'\n  |'onfullscreenerror'\n  |'class'\n  |'dataset'\n  |'accept'\n  |'acceptcharset'\n  |'accesskey'\n  |'action'\n  |'allow'\n  |'allowfullscreen'\n  |'allowtransparency'\n  |'allowpaymentrequest'\n  |'alt'\n  |'as'\n  |'async'\n  |'autocomplete'\n  |'autofocus'\n  |'autoplay'\n  |'capture'\n  |'cellpadding'\n  |'cellspacing'\n  |'charset'\n  |'challenge'\n  |'checked'\n  |'cite'\n  |'classid'\n  |'cols'\n  |'colspan'\n  |'content'\n  |'contenteditable'\n  |'innerHTML'\n  |'textContent'\n  |'contextmenu'\n  |'controls'\n  |'coords'\n  |'crossorigin'\n  |'currenttime'\n  |'decoding'\n  |'data'\n  |'datetime'\n  |'default'\n  |'defaultmuted'\n  |'defaultplaybackrate'\n  |'defer'\n  |'dir'\n  |'dirname'\n  |'disabled'\n  |'download'\n  |'draggable'\n  |'enctype'\n  |'enterkeyhint'\n  |'for'\n  |'form'\n  |'formaction'\n  |'formenctype'\n  |'formmethod'\n  |'formnovalidate'\n  |'formtarget'\n  |'frameborder'\n  |'headers'\n  |'height'\n  |'hidden'\n  |'high'\n  |'href'\n  |'hreflang'\n  |'htmlfor'\n  |'httpequiv'\n  |'id'\n  |'inputmode'\n  |'integrity'\n  |'is'\n  |'ismap'\n  |'keyparams'\n  |'keytype'\n  |'kind'\n  |'label'\n  |'lang'\n  |'list'\n  |'loading'\n  |'loop'\n  |'low'\n  |'manifest'\n  |'marginheight'\n  |'marginwidth'\n  |'max'\n  |'maxlength'\n  |'media'\n  |'mediagroup'\n  |'method'\n  |'min'\n  |'minlength'\n  |'multiple'\n  |'muted'\n  |'name'\n  |'nonce'\n  |'novalidate'\n  |'open'\n  |'optimum'\n  |'part'\n  |'pattern'\n  |'placeholder'\n  |'playsinline'\n  |'ping'\n  |'poster'\n  |'preload'\n  |'radiogroup'\n  |'readonly'\n  |'referrerpolicy'\n  |'rel'\n  |'required'\n  |'reversed'\n  |'role'\n  |'rows'\n  |'rowspan'\n  |'sandbox'\n  |'scope'\n  |'scoped'\n  |'scrolling'\n  |'seamless'\n  |'selected'\n  |'shape'\n  |'size'\n  |'sizes'\n  |'slot'\n  |'span'\n  |'spellcheck'\n  |'src'\n  |'srcdoc'\n  |'srclang'\n  |'srcset'\n  |'start'\n  |'step'\n  |'style'\n  |'summary'\n  |'tabindex'\n  |'target'\n  |'title'\n  |'translate'\n  |'type'\n  |'usemap'\n  |'value'\n  |'volume'\n  |'width'\n  |'wmode'\n  |'wrap'\n  |'about'\n  |'datatype'\n  |'inlist'\n  |'prefix'\n  |'property'\n  |'resource'\n  |'typeof'\n  |'vocab'\n  |'autocapitalize'\n  |'autocorrect'\n  |'autosave'\n  |'color'\n  |'controlslist'\n  |'inert'\n  |'itemprop'\n  |'itemscope'\n  |'itemtype'\n  |'itemid'\n  |'itemref'\n  |'results'\n  |'security'\n  |'unselectable';\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface DOMAttributes<T extends EventTarget> {\n    oncopy?: ClipboardEventHandler<T> | undefined | null;\n    oncut?: ClipboardEventHandler<T> | undefined | null;\n    onpaste?: ClipboardEventHandler<T> | undefined | null;\n    oncompositionend?: CompositionEventHandler<T> | undefined | null;\n    oncompositionstart?: CompositionEventHandler<T> | undefined | null;\n    oncompositionupdate?: CompositionEventHandler<T> | undefined | null;\n    onfocus?: FocusEventHandler<T> | undefined | null;\n    onfocusin?: FocusEventHandler<T> | undefined | null;\n    onfocusout?: FocusEventHandler<T> | undefined | null;\n    onblur?: FocusEventHandler<T> | undefined | null;\n    onchange?: FormEventHandler<T> | undefined | null;\n    oninput?: FormEventHandler<T> | undefined | null;\n    onreset?: FormEventHandler<T> | undefined | null;\n    onsubmit?: EventHandler<SubmitEvent, T> | undefined | null;\n    oninvalid?: EventHandler<Event, T> | undefined | null;\n    onbeforeinput?: EventHandler<InputEvent, T> | undefined | null;\n    onload?: EventHandler | undefined | null;\n    onerror?: EventHandler | undefined | null; // also a Media Event\n    ontoggle?: EventHandler<Event, T> | undefined | null;\n    onkeydown?: KeyboardEventHandler<T> | undefined | null;\n    onkeypress?: KeyboardEventHandler<T> | undefined | null;\n    onkeyup?: KeyboardEventHandler<T> | undefined | null;\n    onabort?: EventHandler<Event, T> | undefined | null;\n    oncanplay?: EventHandler<Event, T> | undefined | null;\n    oncanplaythrough?: EventHandler<Event, T> | undefined | null;\n    oncuechange?: EventHandler<Event, T> | undefined | null;\n    ondurationchange?: EventHandler<Event, T> | undefined | null;\n    onemptied?: EventHandler<Event, T> | undefined | null;\n    onencrypted?: EventHandler<Event, T> | undefined | null;\n    onended?: EventHandler<Event, T> | undefined | null;\n    onloadeddata?: EventHandler<Event, T> | undefined | null;\n    onloadedmetadata?: EventHandler<Event, T> | undefined | null;\n    onloadstart?: EventHandler<Event, T> | undefined | null;\n    onpause?: EventHandler<Event, T> | undefined | null;\n    onplay?: EventHandler<Event, T> | undefined | null;\n    onplaying?: EventHandler<Event, T> | undefined | null;\n    onprogress?: EventHandler<Event, T> | undefined | null;\n    onratechange?: EventHandler<Event, T> | undefined | null;\n    onseeked?: EventHandler<Event, T> | undefined | null;\n    onseeking?: EventHandler<Event, T> | undefined | null;\n    onstalled?: EventHandler<Event, T> | undefined | null;\n    onsuspend?: EventHandler<Event, T> | undefined | null;\n    ontimeupdate?: EventHandler<Event, T> | undefined | null;\n    onvolumechange?: EventHandler<Event, T> | undefined | null;\n    onwaiting?: EventHandler<Event, T> | undefined | null;\n    onauxclick?: MouseEventHandler<T> | undefined | null;\n    onclick?: MouseEventHandler<T> | undefined | null;\n    oncontextmenu?: MouseEventHandler<T> | undefined | null;\n    ondblclick?: MouseEventHandler<T> | undefined | null;\n    ondrag?: DragEventHandler<T> | undefined | null;\n    ondragend?: DragEventHandler<T> | undefined | null;\n    ondragenter?: DragEventHandler<T> | undefined | null;\n    ondragexit?: DragEventHandler<T> | undefined | null;\n    ondragleave?: DragEventHandler<T> | undefined | null;\n    ondragover?: DragEventHandler<T> | undefined | null;\n    ondragstart?: DragEventHandler<T> | undefined | null;\n    ondrop?: DragEventHandler<T> | undefined | null;\n    onmousedown?: MouseEventHandler<T> | undefined | null;\n    onmouseenter?: MouseEventHandler<T> | undefined | null;\n    onmouseleave?: MouseEventHandler<T> | undefined | null;\n    onmousemove?: MouseEventHandler<T> | undefined | null;\n    onmouseout?: MouseEventHandler<T> | undefined | null;\n    onmouseover?: MouseEventHandler<T> | undefined | null;\n    onmouseup?: MouseEventHandler<T> | undefined | null;\n    onselect?: EventHandler<Event, T> | undefined | null;\n    onselectionchange?: EventHandler<Event, T> | undefined | null;\n    onselectstart?: EventHandler<Event, T> | undefined | null;\n    ontouchcancel?: TouchEventHandler<T> | undefined | null;\n    ontouchend?: TouchEventHandler<T> | undefined | null;\n    ontouchmove?: TouchEventHandler<T> | undefined | null;\n    ontouchstart?: TouchEventHandler<T> | undefined | null;\n    ongotpointercapture?: PointerEventHandler<T> | undefined | null;\n    onpointercancel?: PointerEventHandler<T> | undefined | null;\n    onpointerdown?: PointerEventHandler<T> | undefined | null;\n    onpointerenter?: PointerEventHandler<T> | undefined | null;\n    onpointerleave?: PointerEventHandler<T> | undefined | null;\n    onpointermove?: PointerEventHandler<T> | undefined | null;\n    onpointerout?: PointerEventHandler<T> | undefined | null;\n    onpointerover?: PointerEventHandler<T> | undefined | null;\n    onpointerup?: PointerEventHandler<T> | undefined | null;\n    onlostpointercapture?: PointerEventHandler<T> | undefined | null;\n    onscroll?: UIEventHandler<T> | undefined | null;\n    onresize?: UIEventHandler<T> | undefined | null;\n    onwheel?: WheelEventHandler<T> | undefined | null;\n    onanimationstart?: AnimationEventHandler<T> | undefined | null;\n    onanimationend?: AnimationEventHandler<T> | undefined | null;\n    onanimationiteration?: AnimationEventHandler<T> | undefined | null;\n    ontransitionstart?: TransitionEventHandler<T> | undefined | null;\n    ontransitionrun?: TransitionEventHandler<T> | undefined | null;\n    ontransitionend?: TransitionEventHandler<T> | undefined | null;\n    ontransitioncancel?: TransitionEventHandler<T> | undefined | null;\n    onoutrostart?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onoutroend?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onintrostart?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onintroend?: EventHandler<CustomEvent<null>, T> | undefined | null;\n    onmessage?: MessageEventHandler<T> | undefined | null;\n    onmessageerror?: MessageEventHandler<T> | undefined | null;\n    oncancel?: EventHandler<Event, T> | undefined | null;\n    onclose?: EventHandler<Event, T> | undefined | null;\n    onfullscreenchange?: EventHandler<Event, T> | undefined | null;\n    onfullscreenerror?: EventHandler<Event, T> | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface AriaAttributes {\n      'aria-activedescendant'?: string | undefined | null;\n      'aria-atomic'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both' | undefined | null;\n      'aria-busy'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-checked'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n      'aria-colcount'?: number | undefined | null;\n      'aria-colindex'?: number | undefined | null;\n      'aria-colspan'?: number | undefined | null;\n      'aria-controls'?: string | undefined | null;\n      'aria-current'?: boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time' | undefined | null;\n      'aria-describedby'?: string | undefined | null;\n      'aria-details'?: string | undefined | null;\n      'aria-disabled'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined | null;\n      'aria-errormessage'?: string | undefined | null;\n      'aria-expanded'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-flowto'?: string | undefined | null;\n      'aria-grabbed'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-haspopup'?: boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined | null;\n      'aria-hidden'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-invalid'?: boolean | 'false' | 'true' | 'grammar' | 'spelling' | undefined | null;\n      'aria-keyshortcuts'?: string | undefined | null;\n      'aria-label'?: string | undefined | null;\n      'aria-labelledby'?: string | undefined | null;\n      'aria-level'?: number | undefined | null;\n      'aria-live'?: 'off' | 'assertive' | 'polite' | undefined | null;\n      'aria-modal'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-multiline'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-multiselectable'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-orientation'?: 'horizontal' | 'vertical' | undefined | null;\n      'aria-owns'?: string | undefined | null;\n      'aria-placeholder'?: string | undefined | null;\n      'aria-posinset'?: number | undefined | null;\n      'aria-pressed'?: boolean | 'false' | 'mixed' | 'true' | undefined | null;\n      'aria-readonly'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-relevant'?: 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text' | 'text additions' | 'text removals' | undefined | null;\n      'aria-required'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-roledescription'?: string | undefined | null;\n      'aria-rowcount'?: number | undefined | null;\n      'aria-rowindex'?: number | undefined | null;\n      'aria-rowspan'?: number | undefined | null;\n      'aria-selected'?: boolean | 'false' | 'true' | undefined | null;\n      'aria-setsize'?: number | undefined | null;\n      'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other' | undefined | null;\n      'aria-valuemax'?: number | undefined | null;\n      'aria-valuemin'?: number | undefined | null;\n      'aria-valuenow'?: number | undefined | null;\n      'aria-valuetext'?: string | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface HTMLAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n    class?: string | undefined | null;\n    dataset?: object | undefined | null;\n    accept?: string | undefined | null;\n    acceptcharset?: string | undefined | null;\n    accesskey?: string | undefined | null;\n    action?: string | undefined | null;\n    allow?: string | undefined | null;\n    allowfullscreen?: boolean | undefined | null;\n    allowtransparency?: boolean | undefined | null;\n    allowpaymentrequest?: boolean | undefined | null;\n    alt?: string | undefined | null;\n    as?: string | undefined | null;\n    async?: boolean | undefined | null;\n    autocomplete?: string | undefined | null;\n    autofocus?: boolean | undefined | null;\n    autoplay?: boolean | undefined | null;\n    capture?: 'environment' | 'user' | boolean | undefined | null;\n    cellpadding?: number | string | undefined | null;\n    cellspacing?: number | string | undefined | null;\n    charset?: string | undefined | null;\n    challenge?: string | undefined | null;\n    checked?: boolean | undefined | null;\n    cite?: string | undefined | null;\n    classid?: string | undefined | null;\n    cols?: number | undefined | null;\n    colspan?: number | undefined | null;\n    content?: string | undefined | null;\n    contenteditable?: 'true' | 'false' | boolean | undefined | null;\n    innerHTML?: string | undefined | null;\n    textContent?: string | undefined | null;\n    contextmenu?: string | undefined | null;\n    controls?: boolean | undefined | null;\n    coords?: string | undefined | null;\n    crossorigin?: string | undefined | null;\n    currenttime?: number | undefined | null;\n    decoding?: 'async' | 'sync' | 'auto' | undefined | null;\n    data?: string | undefined | null;\n    datetime?: string | undefined | null;\n    default?: boolean | undefined | null;\n    defaultmuted?: boolean | undefined | null;\n    defaultplaybackrate?: number | undefined | null;\n    defer?: boolean | undefined | null;\n    dir?: string | undefined | null;\n    dirname?: string | undefined | null;\n    disabled?: boolean | undefined | null;\n    download?: any | undefined | null;\n    draggable?: boolean | 'true' | 'false' | undefined | null;\n    enctype?: string | undefined | null;\n    enterkeyhint?: 'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send' | undefined | null;\n    for?: string | undefined | null;\n    form?: string | undefined | null;\n    formaction?: string | undefined | null;\n    formenctype?: string | undefined | null;\n    formmethod?: string | undefined | null;\n    formnovalidate?: boolean | undefined | null;\n    formtarget?: string | undefined | null;\n    frameborder?: number | string | undefined | null;\n    headers?: string | undefined | null;\n    height?: number | string | undefined | null;\n    hidden?: boolean | undefined | null;\n    high?: number | undefined | null;\n    href?: string | undefined | null;\n    hreflang?: string | undefined | null;\n    htmlfor?: string | undefined | null;\n    httpequiv?: string | undefined | null;\n    id?: string | undefined | null;\n    inputmode?: string | undefined | null;\n    integrity?: string | undefined | null;\n    is?: string | undefined | null;\n    ismap?: boolean | undefined | null;\n    keyparams?: string | undefined | null;\n    keytype?: string | undefined | null;\n    kind?: string | undefined | null;\n    label?: string | undefined | null;\n    lang?: string | undefined | null;\n    list?: string | undefined | null;\n    loading?: string | undefined | null;\n    loop?: boolean | undefined | null;\n    low?: number | undefined | null;\n    manifest?: string | undefined | null;\n    marginheight?: number | undefined | null;\n    marginwidth?: number | undefined | null;\n    max?: number | string | undefined | null;\n    maxlength?: number | undefined | null;\n    media?: string | undefined | null;\n    mediagroup?: string | undefined | null;\n    method?: string | undefined | null;\n    min?: number | string | undefined | null;\n    minlength?: number | undefined | null;\n    multiple?: boolean | undefined | null;\n    muted?: boolean | undefined | null;\n    name?: string | undefined | null;\n    nonce?: string | undefined | null;\n    novalidate?: boolean | undefined | null;\n    open?: boolean | undefined | null;\n    optimum?: number | undefined | null;\n    part?: string | undefined | null;\n    pattern?: string | undefined | null;\n    placeholder?: string | undefined | null;\n    playsinline?: boolean | undefined | null;\n    ping?: string | undefined | null;\n    poster?: string | undefined | null;\n    preload?: string | undefined | null;\n    radiogroup?: string | undefined | null;\n    readonly?: boolean | undefined | null;\n    referrerpolicy?: string | undefined | null;\n    rel?: string | undefined | null;\n    required?: boolean | undefined | null;\n    reversed?: boolean | undefined | null;\n    role?: string | undefined | null;\n    rows?: number | undefined | null;\n    rowspan?: number | undefined | null;\n    sandbox?: string | undefined | null;\n    scope?: string | undefined | null;\n    scoped?: boolean | undefined | null;\n    scrolling?: string | undefined | null;\n    seamless?: boolean | undefined | null;\n    selected?: boolean | undefined | null;\n    shape?: string | undefined | null;\n    size?: number | undefined | null;\n    sizes?: string | undefined | null;\n    slot?: string | undefined | null;\n    span?: number | undefined | null;\n    spellcheck?: boolean | 'true' | 'false' | undefined | null;\n    src?: string | undefined | null;\n    srcdoc?: string | undefined | null;\n    srclang?: string | undefined | null;\n    srcset?: string | undefined | null;\n    start?: number | undefined | null;\n    step?: number | string | undefined | null;\n    style?: string | undefined | null;\n    summary?: string | undefined | null;\n    tabindex?: number | undefined | null;\n    target?: string | undefined | null;\n    title?: string | undefined | null;\n    translate?: \"yes\" | \"no\" | \"\" | undefined | null;\n    type?: string | undefined | null;\n    usemap?: string | undefined | null;\n    value?: any | undefined | null;\n    volume?: number | undefined | null;\n    width?: number | string | undefined | null;\n    wmode?: string | undefined | null;\n    wrap?: string | undefined | null;\n    about?: string | undefined | null;\n    datatype?: string | undefined | null;\n    inlist?: any | undefined | null;\n    prefix?: string | undefined | null;\n    property?: string | undefined | null;\n    resource?: string | undefined | null;\n    typeof?: string | undefined | null;\n    vocab?: string | undefined | null;\n    autocapitalize?: string | undefined | null;\n    autocorrect?: string | undefined | null;\n    autosave?: string | undefined | null;\n    color?: string | undefined | null;\n    controlslist?: 'nodownload' | 'nofullscreen' | 'noplaybackrate' | 'noremoteplayback';\n    inert?: boolean | undefined | null;\n    itemprop?: string | undefined | null;\n    itemscope?: boolean | undefined | null;\n    itemtype?: string | undefined | null;\n    itemid?: string | undefined | null;\n    itemref?: string | undefined | null;\n    results?: number | undefined | null;\n    security?: string | undefined | null;\n    unselectable?: boolean | undefined | null;\n\n    'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-preload-code'?: true | '' | 'eager' | 'viewport' | 'hover' | 'tap' | 'off' | undefined | null;\n    'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;\n    'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;\n    'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SVGAttributes<T extends EventTarget> extends AriaAttributes, DOMAttributes<T> {\n    className?: string | undefined | null;\n    class?: string | undefined | null;\n    color?: string | undefined | null;\n    height?: number | string | undefined | null;\n    id?: string | undefined | null;\n    lang?: string | undefined | null;\n    max?: number | string | undefined | null;\n    media?: string | undefined | null;\n    method?: string | undefined | null;\n    min?: number | string | undefined | null;\n    name?: string | undefined | null;\n    style?: string | undefined | null;\n    target?: string | undefined | null;\n    type?: string | undefined | null;\n    width?: number | string | undefined | null;\n    role?: string | undefined | null;\n    tabindex?: number | undefined | null;\n    crossorigin?: 'anonymous' | 'use-credentials' | '' | undefined | null;\n    'accent-height'?: number | string | undefined | null;\n    accumulate?: 'none' | 'sum' | undefined | null;\n    additive?: 'replace' | 'sum' | undefined | null;\n    'alignment-baseline'?: 'auto' | 'baseline' | 'before-edge' | 'text-before-edge' | 'middle' |\n      'central' | 'after-edge' | 'text-after-edge' | 'ideographic' | 'alphabetic' | 'hanging' |\n      'mathematical' | 'inherit' | undefined | null;\n    allowReorder?: 'no' | 'yes' | undefined | null;\n    alphabetic?: number | string | undefined | null;\n    amplitude?: number | string | undefined | null;\n    'arabic-form'?: 'initial' | 'medial' | 'terminal' | 'isolated' | undefined | null;\n    ascent?: number | string | undefined | null;\n    attributeName?: string | undefined | null;\n    attributeType?: string | undefined | null;\n    autoReverse?: number | string | undefined | null;\n    azimuth?: number | string | undefined | null;\n    baseFrequency?: number | string | undefined | null;\n    'baseline-shift'?: number | string | undefined | null;\n    baseProfile?: number | string | undefined | null;\n    bbox?: number | string | undefined | null;\n    begin?: number | string | undefined | null;\n    bias?: number | string | undefined | null;\n    by?: number | string | undefined | null;\n    calcMode?: number | string | undefined | null;\n    'cap-height'?: number | string | undefined | null;\n    clip?: number | string | undefined | null;\n    'clip-path'?: string | undefined | null;\n    clipPathUnits?: number | string | undefined | null;\n    'clip-rule'?: number | string | undefined | null;\n    'color-interpolation'?: number | string | undefined | null;\n    'color-interpolation-filters'?: 'auto' | 'sRGB' | 'linearRGB' | 'inherit' | undefined | null;\n    'color-profile'?: number | string | undefined | null;\n    'color-rendering'?: number | string | undefined | null;\n    contentScriptType?: number | string | undefined | null;\n    contentStyleType?: number | string | undefined | null;\n    cursor?: number | string | undefined | null;\n    cx?: number | string | undefined | null;\n    cy?: number | string | undefined | null;\n    d?: string | undefined | null;\n    decelerate?: number | string | undefined | null;\n    descent?: number | string | undefined | null;\n    diffuseConstant?: number | string | undefined | null;\n    direction?: number | string | undefined | null;\n    display?: number | string | undefined | null;\n    divisor?: number | string | undefined | null;\n    'dominant-baseline'?: number | string | undefined | null;\n    dur?: number | string | undefined | null;\n    dx?: number | string | undefined | null;\n    dy?: number | string | undefined | null;\n    edgeMode?: number | string | undefined | null;\n    elevation?: number | string | undefined | null;\n    'enable-background'?: number | string | undefined | null;\n    end?: number | string | undefined | null;\n    exponent?: number | string | undefined | null;\n    externalResourcesRequired?: number | string | undefined | null;\n    fill?: string | undefined | null;\n    'fill-opacity'?: number | string | undefined | null;\n    'fill-rule'?: 'nonzero' | 'evenodd' | 'inherit' | undefined | null;\n    filter?: string | undefined | null;\n    filterRes?: number | string | undefined | null;\n    filterUnits?: number | string | undefined | null;\n    'flood-color'?: number | string | undefined | null;\n    'flood-opacity'?: number | string | undefined | null;\n    focusable?: number | string | undefined | null;\n    'font-family'?: string | undefined | null;\n    'font-size'?: number | string | undefined | null;\n    'font-size-adjust'?: number | string | undefined | null;\n    'font-stretch'?: number | string | undefined | null;\n    'font-style'?: number | string | undefined | null;\n    'font-variant'?: number | string | undefined | null;\n    'font-weight'?: number | string | undefined | null;\n    format?: number | string | undefined | null;\n    from?: number | string | undefined | null;\n    fx?: number | string | undefined | null;\n    fy?: number | string | undefined | null;\n    g1?: number | string | undefined | null;\n    g2?: number | string | undefined | null;\n    'glyph-name'?: number | string | undefined | null;\n    'glyph-orientation-horizontal'?: number | string | undefined | null;\n    'glyph-orientation-vertical'?: number | string | undefined | null;\n    glyphRef?: number | string | undefined | null;\n    gradientTransform?: string | undefined | null;\n    gradientUnits?: string | undefined | null;\n    hanging?: number | string | undefined | null;\n    href?: string | undefined | null;\n    'horiz-adv-x'?: number | string | undefined | null;\n    'horiz-origin-x'?: number | string | undefined | null;\n    ideographic?: number | string | undefined | null;\n    'image-rendering'?: number | string | undefined | null;\n    in2?: number | string | undefined | null;\n    in?: string | undefined | null;\n    intercept?: number | string | undefined | null;\n    k1?: number | string | undefined | null;\n    k2?: number | string | undefined | null;\n    k3?: number | string | undefined | null;\n    k4?: number | string | undefined | null;\n    k?: number | string | undefined | null;\n    kernelMatrix?: number | string | undefined | null;\n    kernelUnitLength?: number | string | undefined | null;\n    kerning?: number | string | undefined | null;\n    keyPoints?: number | string | undefined | null;\n    keySplines?: number | string | undefined | null;\n    keyTimes?: number | string | undefined | null;\n    lengthAdjust?: number | string | undefined | null;\n    'letter-spacing'?: number | string | undefined | null;\n    'lighting-color'?: number | string | undefined | null;\n    limitingConeAngle?: number | string | undefined | null;\n    local?: number | string | undefined | null;\n    'marker-end'?: string | undefined | null;\n    markerHeight?: number | string | undefined | null;\n    'marker-mid'?: string | undefined | null;\n    'marker-start'?: string | undefined | null;\n    markerUnits?: number | string | undefined | null;\n    markerWidth?: number | string | undefined | null;\n    mask?: string | undefined | null;\n    maskContentUnits?: number | string | undefined | null;\n    maskUnits?: number | string | undefined | null;\n    mathematical?: number | string | undefined | null;\n    mode?: number | string | undefined | null;\n    numOctaves?: number | string | undefined | null;\n    offset?: number | string | undefined | null;\n    opacity?: number | string | undefined | null;\n    operator?: number | string | undefined | null;\n    order?: number | string | undefined | null;\n    orient?: number | string | undefined | null;\n    orientation?: number | string | undefined | null;\n    origin?: number | string | undefined | null;\n    overflow?: number | string | undefined | null;\n    'overline-position'?: number | string | undefined | null;\n    'overline-thickness'?: number | string | undefined | null;\n    'paint-order'?: number | string | undefined | null;\n    'panose-1'?: number | string | undefined | null;\n    path?: string | undefined | null;\n    pathLength?: number | string | undefined | null;\n    patternContentUnits?: string | undefined | null;\n    patternTransform?: number | string | undefined | null;\n    patternUnits?: string | undefined | null;\n    'pointer-events'?: number | string | undefined | null;\n    points?: string | undefined | null;\n    pointsAtX?: number | string | undefined | null;\n    pointsAtY?: number | string | undefined | null;\n    pointsAtZ?: number | string | undefined | null;\n    preserveAlpha?: number | string | undefined | null;\n    preserveAspectRatio?: string | undefined | null;\n    primitiveUnits?: number | string | undefined | null;\n    r?: number | string | undefined | null;\n    radius?: number | string | undefined | null;\n    refX?: number | string | undefined | null;\n    refY?: number | string | undefined | null;\n    'rendering-intent'?: number | string | undefined | null;\n    repeatCount?: number | string | undefined | null;\n    repeatDur?: number | string | undefined | null;\n    requiredExtensions?: number | string | undefined | null;\n    requiredFeatures?: number | string | undefined | null;\n    restart?: number | string | undefined | null;\n    result?: string | undefined | null;\n    rotate?: number | string | undefined | null;\n    rx?: number | string | undefined | null;\n    ry?: number | string | undefined | null;\n    scale?: number | string | undefined | null;\n    seed?: number | string | undefined | null;\n    'shape-rendering'?: number | string | undefined | null;\n    slope?: number | string | undefined | null;\n    spacing?: number | string | undefined | null;\n    specularConstant?: number | string | undefined | null;\n    specularExponent?: number | string | undefined | null;\n    speed?: number | string | undefined | null;\n    spreadMethod?: string | undefined | null;\n    startOffset?: number | string | undefined | null;\n    stdDeviation?: number | string | undefined | null;\n    stemh?: number | string | undefined | null;\n    stemv?: number | string | undefined | null;\n    stitchTiles?: number | string | undefined | null;\n    'stop-color'?: string | undefined | null;\n    'stop-opacity'?: number | string | undefined | null;\n    'strikethrough-position'?: number | string | undefined | null;\n    'strikethrough-thickness'?: number | string | undefined | null;\n    string?: number | string | undefined | null;\n    stroke?: string | undefined | null;\n    'stroke-dasharray'?: string | number | undefined | null;\n    'stroke-dashoffset'?: string | number | undefined | null;\n    'stroke-linecap'?: 'butt' | 'round' | 'square' | 'inherit' | undefined | null;\n    'stroke-linejoin'?: 'miter' | 'round' | 'bevel' | 'inherit' | undefined | null;\n    'stroke-miterlimit'?: string | undefined | null;\n    'stroke-opacity'?: number | string | undefined | null;\n    'stroke-width'?: number | string | undefined | null;\n    surfaceScale?: number | string | undefined | null;\n    systemLanguage?: number | string | undefined | null;\n    tableValues?: number | string | undefined | null;\n    targetX?: number | string | undefined | null;\n    targetY?: number | string | undefined | null;\n    'text-anchor'?: string | undefined | null;\n    'text-decoration'?: number | string | undefined | null;\n    textLength?: number | string | undefined | null;\n    'text-rendering'?: number | string | undefined | null;\n    to?: number | string | undefined | null;\n    transform?: string | undefined | null;\n    u1?: number | string | undefined | null;\n    u2?: number | string | undefined | null;\n    'underline-position'?: number | string | undefined | null;\n    'underline-thickness'?: number | string | undefined | null;\n    unicode?: number | string | undefined | null;\n    'unicode-bidi'?: number | string | undefined | null;\n    'unicode-range'?: number | string | undefined | null;\n    'units-per-em'?: number | string | undefined | null;\n    'v-alphabetic'?: number | string | undefined | null;\n    values?: string | undefined | null;\n    'vector-effect'?: number | string | undefined | null;\n    version?: string | undefined | null;\n    'vert-adv-y'?: number | string | undefined | null;\n    'vert-origin-x'?: number | string | undefined | null;\n    'vert-origin-y'?: number | string | undefined | null;\n    'v-hanging'?: number | string | undefined | null;\n    'v-ideographic'?: number | string | undefined | null;\n    viewBox?: string | undefined | null;\n    viewTarget?: number | string | undefined | null;\n    visibility?: number | string | undefined | null;\n    'v-mathematical'?: number | string | undefined | null;\n    widths?: number | string | undefined | null;\n    'word-spacing'?: number | string | undefined | null;\n    'writing-mode'?: number | string | undefined | null;\n    x1?: number | string | undefined | null;\n    x2?: number | string | undefined | null;\n    x?: number | string | undefined | null;\n    xChannelSelector?: string | undefined | null;\n    'x-height'?: number | string | undefined | null;\n    xlinkActuate?: string | undefined | null;\n    xlinkArcrole?: string | undefined | null;\n    xlinkHref?: string | undefined | null;\n    xlinkRole?: string | undefined | null;\n    xlinkShow?: string | undefined | null;\n    xlinkTitle?: string | undefined | null;\n    xlinkType?: string | undefined | null;\n    xmlBase?: string | undefined | null;\n    xmlLang?: string | undefined | null;\n    xmlns?: string | undefined | null;\n    xmlnsXlink?: string | undefined | null;\n    xmlSpace?: string | undefined | null;\n    y1?: number | string | undefined | null;\n    y2?: number | string | undefined | null;\n    y?: number | string | undefined | null;\n    yChannelSelector?: string | undefined | null;\n    z?: number | string | undefined | null;\n    zoomAndPan?: string | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface HTMLProps<T extends EventTarget> extends HTMLAttributes<T> {}\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SVGProps<T extends EventTarget> extends SVGAttributes<T> {}\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteInputProps extends HTMLProps<HTMLInputElement> {\n    group?: any | undefined | null;\n    files?: FileList | undefined | null;\n    indeterminate?: boolean | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteWindowProps  {\n    readonly innerWidth?: Window['innerWidth'] | undefined | null;\n    readonly innerHeight?: Window['innerHeight'] | undefined | null;\n    readonly outerWidth?: Window['outerWidth'] | undefined | null;\n    readonly outerHeight?: Window['outerHeight'] | undefined | null;\n    scrollX?: Window['scrollX'] | undefined | null;\n    scrollY?: Window['scrollY'] | undefined | null;\n    readonly online?: Window['navigator']['onLine'] | undefined | null;\n\n    // Transformed from on:sveltekit:xy\n    'onsveltekit:start'?: EventHandler<CustomEvent, Window> | undefined | null;\n    'onsveltekit:navigation-start'?: EventHandler<CustomEvent, Window> | undefined | null;\n    'onsveltekit:navigation-end'?: EventHandler<CustomEvent, Window> | undefined | null;\n\n    ondevicelight?: EventHandler<Event, Window> | undefined | null;\n    onbeforeinstallprompt?: EventHandler<Event, Window> | undefined | null;\n    ondeviceproximity?: EventHandler<Event, Window> | undefined | null;\n    onpaint?: EventHandler<Event, Window> | undefined | null;\n    onuserproximity?: EventHandler<Event, Window> | undefined | null;\n    onbeforeprint?: EventHandler<Event, Window> | undefined | null;\n    onafterprint?: EventHandler<Event, Window> | undefined | null;\n    onlanguagechange?: EventHandler<Event, Window> | undefined | null;\n    onorientationchange?: EventHandler<Event, Window> | undefined | null;\n    onmessage?: EventHandler<MessageEvent, Window> | undefined | null;\n    onmessageerror?: EventHandler<MessageEvent, Window> | undefined | null;\n    onoffline?: EventHandler<Event, Window> | undefined | null;\n    ononline?: EventHandler<Event, Window> | undefined | null;\n    onbeforeunload?: EventHandler<BeforeUnloadEvent, Window> | undefined | null;\n    onunload?: EventHandler<Event, Window> | undefined | null;\n    onstorage?: EventHandler<StorageEvent, Window> | undefined | null;\n    onhashchange?: EventHandler<HashChangeEvent, Window> | undefined | null;\n    onpagehide?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n    onpageshow?: EventHandler<PageTransitionEvent, Window> | undefined | null;\n    onpopstate?: EventHandler<PopStateEvent, Window> | undefined | null;\n    ondevicemotion?: EventHandler<DeviceMotionEvent> | undefined | null;\n    ondeviceorientation?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n    ondeviceorientationabsolute?: EventHandler<DeviceOrientationEvent, Window> | undefined | null;\n    onunhandledrejection?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n    onrejectionhandled?: EventHandler<PromiseRejectionEvent, Window> | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SapperAnchorProps {\n      // transformed from sapper:noscroll so it should be camel case\n      sapperNoscroll?: true | undefined | null;\n      sapperPrefetch?: true | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteMediaTimeRange {\n      start: number;\n      end: number;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteMediaProps {\n      readonly duration?: number | undefined | null;\n      readonly buffered?: SvelteMediaTimeRange[] | undefined | null;\n      readonly played?: SvelteMediaTimeRange[] | undefined | null;\n      readonly seekable?: SvelteMediaTimeRange[] | undefined | null;\n      readonly seeking?: boolean | undefined | null;\n      readonly ended?: boolean | undefined | null;\n\n      /**\n       * the current playback time in the video, in seconds\n       */\n      currentTime?: number | undefined | null;\n      /**\n       * the current playback time in the video, in seconds\n       */\n      currenttime?: number | undefined | null;\n      // Doesn't work when used as HTML Attribute\n      /**\n       * how fast or slow to play the video, where 1 is 'normal'\n       */\n      playbackRate?: number | undefined | null;\n\n      paused?: boolean | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface SvelteVideoProps extends SvelteMediaProps {\n      // Binding only, don't need lowercase variant\n      readonly videoWidth?: number | undefined | null;\n      readonly videoHeight?: number | undefined | null;\n  }\n\n  /**\n   * @deprecated use the types from `svelte/elements` instead\n   * For more info see https://github.com/sveltejs/language-tools/blob/master/docs/preprocessors/typescript.md#im-getting-deprecation-warnings-for-sveltejsx--i-want-to-migrate-to-the-new-typings\n   */\n  interface IntrinsicElements {\n    // HTML\n    a: HTMLProps<HTMLAnchorElement> & SapperAnchorProps;\n    abbr: HTMLProps<HTMLElement>;\n    address: HTMLProps<HTMLElement>;\n    area: HTMLProps<HTMLAreaElement>;\n    article: HTMLProps<HTMLElement>;\n    aside: HTMLProps<HTMLElement>;\n    audio: HTMLProps<HTMLAudioElement> & SvelteMediaProps;\n    b: HTMLProps<HTMLElement>;\n    base: HTMLProps<HTMLBaseElement>;\n    bdi: HTMLProps<HTMLElement>;\n    bdo: HTMLProps<HTMLElement>;\n    big: HTMLProps<HTMLElement>;\n    blockquote: HTMLProps<HTMLElement>;\n    body: HTMLProps<HTMLBodyElement>;\n    br: HTMLProps<HTMLBRElement>;\n    button: HTMLProps<HTMLButtonElement>;\n    canvas: HTMLProps<HTMLCanvasElement>;\n    caption: HTMLProps<HTMLElement>;\n    cite: HTMLProps<HTMLElement>;\n    code: HTMLProps<HTMLElement>;\n    col: HTMLProps<HTMLTableColElement>;\n    colgroup: HTMLProps<HTMLTableColElement>;\n    data: HTMLProps<HTMLElement>;\n    datalist: HTMLProps<HTMLDataListElement>;\n    dd: HTMLProps<HTMLElement>;\n    del: HTMLProps<HTMLElement>;\n    details: HTMLProps<HTMLElement>;\n    dfn: HTMLProps<HTMLElement>;\n    dialog: HTMLProps<HTMLElement>;\n    div: HTMLProps<HTMLDivElement>;\n    dl: HTMLProps<HTMLDListElement>;\n    dt: HTMLProps<HTMLElement>;\n    em: HTMLProps<HTMLElement>;\n    embed: HTMLProps<HTMLEmbedElement>;\n    fieldset: HTMLProps<HTMLFieldSetElement>;\n    figcaption: HTMLProps<HTMLElement>;\n    figure: HTMLProps<HTMLElement>;\n    footer: HTMLProps<HTMLElement>;\n    form: HTMLProps<HTMLFormElement>;\n    h1: HTMLProps<HTMLHeadingElement>;\n    h2: HTMLProps<HTMLHeadingElement>;\n    h3: HTMLProps<HTMLHeadingElement>;\n    h4: HTMLProps<HTMLHeadingElement>;\n    h5: HTMLProps<HTMLHeadingElement>;\n    h6: HTMLProps<HTMLHeadingElement>;\n    head: HTMLProps<HTMLHeadElement>;\n    header: HTMLProps<HTMLElement>;\n    hgroup: HTMLProps<HTMLElement>;\n    hr: HTMLProps<HTMLHRElement>;\n    html: HTMLProps<HTMLHtmlElement>;\n    i: HTMLProps<HTMLElement>;\n    iframe: HTMLProps<HTMLIFrameElement>;\n    img: HTMLProps<HTMLImageElement>;\n    input: SvelteInputProps;\n    ins: HTMLProps<HTMLModElement>;\n    kbd: HTMLProps<HTMLElement>;\n    keygen: HTMLProps<HTMLElement>;\n    label: HTMLProps<HTMLLabelElement>;\n    legend: HTMLProps<HTMLLegendElement>;\n    li: HTMLProps<HTMLLIElement>;\n    link: HTMLProps<HTMLLinkElement>;\n    main: HTMLProps<HTMLElement>;\n    map: HTMLProps<HTMLMapElement>;\n    mark: HTMLProps<HTMLElement>;\n    menu: HTMLProps<HTMLElement>;\n    menuitem: HTMLProps<HTMLElement>;\n    meta: HTMLProps<HTMLMetaElement>;\n    meter: HTMLProps<HTMLElement>;\n    nav: HTMLProps<HTMLElement>;\n    noindex: HTMLProps<HTMLElement>;\n    noscript: HTMLProps<HTMLElement>;\n    object: HTMLProps<HTMLObjectElement>;\n    ol: HTMLProps<HTMLOListElement>;\n    optgroup: HTMLProps<HTMLOptGroupElement>;\n    option: HTMLProps<HTMLOptionElement>;\n    output: HTMLProps<HTMLElement>;\n    p: HTMLProps<HTMLParagraphElement>;\n    param: HTMLProps<HTMLParamElement>;\n    picture: HTMLProps<HTMLElement>;\n    pre: HTMLProps<HTMLPreElement>;\n    progress: HTMLProps<HTMLProgressElement>;\n    q: HTMLProps<HTMLQuoteElement>;\n    rp: HTMLProps<HTMLElement>;\n    rt: HTMLProps<HTMLElement>;\n    ruby: HTMLProps<HTMLElement>;\n    s: HTMLProps<HTMLElement>;\n    samp: HTMLProps<HTMLElement>;\n    script: HTMLProps<HTMLElement>;\n    section: HTMLProps<HTMLElement>;\n    select: HTMLProps<HTMLSelectElement>;\n    small: HTMLProps<HTMLElement>;\n    source: HTMLProps<HTMLSourceElement>;\n    span: HTMLProps<HTMLSpanElement>;\n    strong: HTMLProps<HTMLElement>;\n    style: HTMLProps<HTMLStyleElement>;\n    sub: HTMLProps<HTMLElement>;\n    summary: HTMLProps<HTMLElement>;\n    sup: HTMLProps<HTMLElement>;\n    table: HTMLProps<HTMLTableElement>;\n    tbody: HTMLProps<HTMLTableSectionElement>;\n    td: HTMLProps<HTMLTableDataCellElement>;\n    textarea: HTMLProps<HTMLTextAreaElement>;\n    tfoot: HTMLProps<HTMLTableSectionElement>;\n    th: HTMLProps<HTMLTableHeaderCellElement>;\n    thead: HTMLProps<HTMLTableSectionElement>;\n    time: HTMLProps<HTMLElement>;\n    title: HTMLProps<HTMLTitleElement>;\n    tr: HTMLProps<HTMLTableRowElement>;\n    track: HTMLProps<HTMLTrackElement>;\n    u: HTMLProps<HTMLElement>;\n    ul: HTMLProps<HTMLUListElement>;\n    var: HTMLProps<HTMLElement>;\n    video: HTMLProps<HTMLVideoElement> & SvelteVideoProps;\n    wbr: HTMLProps<HTMLElement>;\n\n    svg: SVGProps<SVGSVGElement>;\n\n    animate: SVGProps<SVGElement>; // @TODO: It is SVGAnimateElement but not in dom.d.ts for now.\n    circle: SVGProps<SVGCircleElement>;\n    clipPath: SVGProps<SVGClipPathElement>;\n    defs: SVGProps<SVGDefsElement>;\n    desc: SVGProps<SVGDescElement>;\n    ellipse: SVGProps<SVGEllipseElement>;\n    feBlend: SVGProps<SVGFEBlendElement>;\n    feColorMatrix: SVGProps<SVGFEColorMatrixElement>;\n    feComponentTransfer: SVGProps<SVGFEComponentTransferElement>;\n    feComposite: SVGProps<SVGFECompositeElement>;\n    feConvolveMatrix: SVGProps<SVGFEConvolveMatrixElement>;\n    feDiffuseLighting: SVGProps<SVGFEDiffuseLightingElement>;\n    feDisplacementMap: SVGProps<SVGFEDisplacementMapElement>;\n    feDistantLight: SVGProps<SVGFEDistantLightElement>;\n    feFlood: SVGProps<SVGFEFloodElement>;\n    feFuncA: SVGProps<SVGFEFuncAElement>;\n    feFuncB: SVGProps<SVGFEFuncBElement>;\n    feFuncG: SVGProps<SVGFEFuncGElement>;\n    feFuncR: SVGProps<SVGFEFuncRElement>;\n    feGaussianBlur: SVGProps<SVGFEGaussianBlurElement>;\n    feImage: SVGProps<SVGFEImageElement>;\n    feMerge: SVGProps<SVGFEMergeElement>;\n    feMergeNode: SVGProps<SVGFEMergeNodeElement>;\n    feMorphology: SVGProps<SVGFEMorphologyElement>;\n    feOffset: SVGProps<SVGFEOffsetElement>;\n    fePointLight: SVGProps<SVGFEPointLightElement>;\n    feSpecularLighting: SVGProps<SVGFESpecularLightingElement>;\n    feSpotLight: SVGProps<SVGFESpotLightElement>;\n    feTile: SVGProps<SVGFETileElement>;\n    feTurbulence: SVGProps<SVGFETurbulenceElement>;\n    filter: SVGProps<SVGFilterElement>;\n    foreignObject: SVGProps<SVGForeignObjectElement>;\n    g: SVGProps<SVGGElement>;\n    image: SVGProps<SVGImageElement>;\n    line: SVGProps<SVGLineElement>;\n    linearGradient: SVGProps<SVGLinearGradientElement>;\n    marker: SVGProps<SVGMarkerElement>;\n    mask: SVGProps<SVGMaskElement>;\n    metadata: SVGProps<SVGMetadataElement>;\n    path: SVGProps<SVGPathElement>;\n    pattern: SVGProps<SVGPatternElement>;\n    polygon: SVGProps<SVGPolygonElement>;\n    polyline: SVGProps<SVGPolylineElement>;\n    radialGradient: SVGProps<SVGRadialGradientElement>;\n    rect: SVGProps<SVGRectElement>;\n    stop: SVGProps<SVGStopElement>;\n    switch: SVGProps<SVGSwitchElement>;\n    symbol: SVGProps<SVGSymbolElement>;\n    text: SVGProps<SVGTextElement>;\n    textPath: SVGProps<SVGTextPathElement>;\n    tspan: SVGProps<SVGTSpanElement>;\n    use: SVGProps<SVGUseElement>;\n    view: SVGProps<SVGViewElement>;\n\n    // Svelte specific\n    sveltewindow: HTMLProps<Window> & SvelteWindowProps;\n    sveltebody: HTMLProps<HTMLElement>;\n    sveltefragment: { slot?: string; };\n    svelteoptions: { [name: string]: any };\n    sveltehead: { [name: string]: any };\n    svelteelement: { 'this': string | undefined | null; } & HTMLProps<any> & SVGProps<any> & SapperAnchorProps;\n    // Needed due to backwards compatibility type which hits these\n    'svelte:window': HTMLProps<Window> & SvelteWindowProps;\n    'svelte:body': HTMLProps<HTMLElement>;\n    'svelte:fragment': { slot?: string; };\n    'svelte:options': { [name: string]: any };\n    'svelte:head': { [name: string]: any };\n  }\n}\n",
  "/node_modules/svelte-check/dist/src/svelte-native-jsx.d.ts": "declare namespace svelteNative.JSX {\n\n    // Every namespace eligible for use needs to implement the following two functions\n    function mapElementTag(\n        tag: string\n    ): any;\n\n    function createElement<Elements extends IntrinsicElements, Key extends keyof Elements>(\n        element: Key | undefined | null, attrs: Elements[Key]\n    ): any;\n    function createElement<Elements extends IntrinsicElements, Key extends keyof Elements, T>(\n        element: Key | undefined | null, attrEnhancers: T, attrs: Elements[Key] & T\n    ): any;\n\n\n    /* svelte specific */\n    interface ElementClass {\n        $$prop_def: any;\n    }\n\n    interface ElementAttributesProperty {\n        $$prop_def: any; // specify the property name to use\n    }\n\n    // Add empty IntrinsicAttributes to prevent fallback to the one in the JSX namespace\n    interface IntrinsicAttributes {\n    }\n\n    interface IntrinsicElements {\n        [name: string]: { [name: string]: any };\n    }\n}",
  "/node_modules/svelte-check/dist/src/svelte-shims-v4.d.ts": "// Whenever a ambient declaration changes, its number should be increased\n// This way, we avoid the situation where multiple ambient versions of svelte2tsx\n// are loaded and their declarations conflict each other\n// See https://github.com/sveltejs/language-tools/issues/1059 for an example bug that stems from it\n// If you change anything in this file, think about whether or not it should be backported to svelte-shims.d.ts\n\ntype AConstructorTypeOf<T, U extends any[] = any[]> = new (...args: U) => T;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteComponentConstructor<T, U extends import('svelte').ComponentConstructorOptions<any>> = new (options: U) => T;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void\n} | void\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionReturnType = SvelteTransitionConfig | (() => SvelteTransitionConfig)\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteWithOptionalProps<Props, Keys extends keyof Props> = Omit<Props, Keys> & Partial<Pick<Props, Keys>>;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAllProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SveltePropsAnyFallback<Props> = {[K in keyof Props]: Props[K] extends never ? never : Props[K] extends undefined ? any : Props[K]}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlotsAnyFallback<Slots> = {[K in keyof Slots]: {[S in keyof Slots[K]]: Slots[K][S] extends undefined ? any : Slots[K][S]}}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteRestProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlots = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteStore<T> = { subscribe: (run: (value: T) => any, invalidate?: any) => any }\n\n// Forces TypeScript to look into the type which results in a better representation of it\n// which helps for error messages and is necessary for d.ts file transformation so that\n// no ambient type references are left in the output\n/** @internal PRIVATE API, DO NOT USE */\ntype Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype KeysMatching<Obj, V> = {[K in keyof Obj]-?: Obj[K] extends V ? K : never}[keyof Obj]\n/** @internal PRIVATE API, DO NOT USE */\ndeclare type __sveltets_2_CustomEvents<T> = {[K in KeysMatching<T, CustomEvent>]: T[K] extends CustomEvent ? T[K]['detail']: T[K]}\n\ndeclare var process: NodeJS.Process & { browser: boolean }\ndeclare function __sveltets_2_ensureRightProps<Props>(props: Props): {};\ndeclare function __sveltets_2_instanceOf<T = any>(type: AConstructorTypeOf<T>): T;\ndeclare function __sveltets_2_allPropsType(): SvelteAllProps\ndeclare function __sveltets_2_restPropsType(): SvelteRestProps\ndeclare function __sveltets_2_slotsType<Slots, Key extends keyof Slots>(slots: Slots): Record<Key, boolean>;\n\n// Overload of the following two functions is necessary.\n// An empty array of optionalProps makes OptionalProps type any, which means we lose the prop typing.\n// optionalProps need to be first or its type cannot be infered correctly.\n\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\n\ndeclare function __sveltets_2_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<Props & SvelteAllProps>, events: Events, slots: Slots }\n\ndeclare function __sveltets_2_with_any_event<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Props, events: Events & {[evt: string]: CustomEvent<any>;}, slots: Slots }\n\ndeclare function __sveltets_2_store_get<T = any>(store: SvelteStore<T>): T\ndeclare function __sveltets_2_store_get<Store extends SvelteStore<any> | undefined | null>(store: Store): Store extends SvelteStore<infer T> ? T : Store;\ndeclare function __sveltets_2_any(dummy: any): any;\ndeclare function __sveltets_2_invalidate<T>(getValue: () => T): T\n\ndeclare function __sveltets_2_mapWindowEvent<K extends keyof HTMLBodyElementEventMap>(\n    event: K\n): HTMLBodyElementEventMap[K];\ndeclare function __sveltets_2_mapBodyEvent<K extends keyof WindowEventMap>(\n    event: K\n): WindowEventMap[K];\ndeclare function __sveltets_2_mapElementEvent<K extends keyof HTMLElementEventMap>(\n    event: K\n): HTMLElementEventMap[K];\n\ndeclare function __sveltets_2_bubbleEventDef<Events, K extends keyof Events>(\n    events: Events, eventKey: K\n): Events[K];\ndeclare function __sveltets_2_bubbleEventDef(\n    events: any, eventKey: string\n): any;\n\ndeclare const __sveltets_2_customEvent: CustomEvent<any>;\ndeclare function __sveltets_2_toEventTypings<Typings>(): {[Key in keyof Typings]: CustomEvent<Typings[Key]>};\n\ndeclare function __sveltets_2_unionType<T1, T2>(t1: T1, t2: T2): T1 | T2;\ndeclare function __sveltets_2_unionType<T1, T2, T3>(t1: T1, t2: T2, t3: T3): T1 | T2 | T3;\ndeclare function __sveltets_2_unionType<T1, T2, T3, T4>(t1: T1, t2: T2, t3: T3, t4: T4): T1 | T2 | T3 | T4;\ndeclare function __sveltets_2_unionType(...types: any[]): any;\n\ndeclare function __sveltets_2_createSvelte2TsxComponent<Props extends {}, Events extends {}, Slots extends {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): SvelteComponentConstructor<import(\"svelte\").SvelteComponent<Props, Events, Slots>,import('svelte').ComponentConstructorOptions<Props>>;\n\ndeclare function __sveltets_2_unwrapArr<T>(arr: ArrayLike<T>): T\ndeclare function __sveltets_2_unwrapPromiseLike<T>(promise: PromiseLike<T> | T): T\n\n// v2\ndeclare function __sveltets_2_createCreateSlot<Slots = Record<string, Record<string, any>>>(): <SlotName extends keyof Slots>(slotName: SlotName, attrs: Slots[SlotName]) => Record<string, any>;\ndeclare function __sveltets_2_createComponentAny(props: Record<string, any>): import(\"svelte\").SvelteComponent<any, any, any>;\n\ndeclare function __sveltets_2_any(...dummy: any[]): any;\ndeclare function __sveltets_2_empty(...dummy: any[]): {};\ndeclare function __sveltets_2_union<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(t1:T1,t2?:T2,t3?:T3,t4?:T4,t5?:T5,t6?:T6,t7?:T7,t8?:T8,t9?:T9,t10?:T10): T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10;\ndeclare function __sveltets_2_nonNullable<T>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_cssProp(prop: Record<string, any>): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\ndeclare var __sveltets_2_AnimationMove: { from: DOMRect, to: DOMRect }\ndeclare function __sveltets_2_ensureAnimation(animationCall: __sveltets_2_SvelteAnimationReturnType): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void,\n    $$_attributes?: Record<string, any>,\n} | void\ndeclare function __sveltets_2_ensureAction<T extends __sveltets_2_SvelteActionReturnType>(actionCall: T): T extends  {$$_attributes?: any} ? T['$$_attributes'] : {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionReturnType = __sveltets_2_SvelteTransitionConfig | (() => __sveltets_2_SvelteTransitionConfig)\ndeclare function __sveltets_2_ensureTransition(transitionCall: __sveltets_2_SvelteTransitionReturnType): {};\n\n// Includes undefined and null for all types as all usages also allow these\ndeclare function __sveltets_2_ensureType<T>(type: AConstructorTypeOf<T>, el: T | undefined | null): {};\ndeclare function __sveltets_2_ensureType<T1, T2>(type1: AConstructorTypeOf<T1>, type2: AConstructorTypeOf<T2>, el: T1 | T2 | undefined | null): {};\n\n// The following is necessary because there are two clashing errors that can't be solved at the same time\n// when using Svelte2TsxComponent, more precisely the event typings in\n// __sveltets_2_ensureComponent<T extends new (..) => _SvelteComponent<any,||any||<-this,any>>(type: T): T;\n// If we type it as \"any\", we have an error when using sth like {a: CustomEvent<any>}\n// If we type it as \"{}\", we have an error when using sth like {[evt: string]: CustomEvent<any>}\n// If we type it as \"unknown\", we get all kinds of follow up errors which we want to avoid\n// Therefore introduce two more base classes just for this case.\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT\n */\ndeclare type ATypedSvelteComponent = {\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: any;\n\n    $on(event: string, handler: ((e: any) => any) | null | undefined): () => void;\n}\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT.\n * \n * If you're looking for the type of a Svelte Component, use `SvelteComponent` and `ComponentType` instead:\n *\n * ```ts\n * import type { ComponentType, SvelteComponent } from \"svelte\";\n * let myComponentConstructor: ComponentType<SvelteComponent> = ..;\n * ```\n */\ndeclare type ConstructorOfATypedSvelteComponent = new (args: {target: any, props?: any}) => ATypedSvelteComponent\ndeclare function __sveltets_2_ensureComponent<T extends ConstructorOfATypedSvelteComponent | null | undefined>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_ensureArray<T extends ArrayLike<unknown> | Iterable<unknown>>(array: T): T extends ArrayLike<infer U> ? U[] : T extends Iterable<infer U> ? Iterable<U> : any[];\n",
  "/node_modules/svelte-check/dist/src/svelte-shims.d.ts": "// Whenever a ambient declaration changes, its number should be increased\n// This way, we avoid the situation where multiple ambient versions of svelte2tsx\n// are loaded and their declarations conflict each other\n// See https://github.com/sveltejs/language-tools/issues/1059 for an example bug that stems from it\n// If you change anything in this file, think about whether or not it should also be added to svelte-shims-v4.d.ts\n\n// -- start svelte-ls-remove --\ndeclare module '*.svelte' {\n    type _SvelteComponent<Props=any,Events=any,Slots=any> = import(\"svelte\").SvelteComponentTyped<Props,Events,Slots>;\n    export default _SvelteComponent\n}\n// -- end svelte-ls-remove --\n\n/**\n * @deprecated This will be removed soon. Use `SvelteComponentTyped` instead:\n * ```ts\n * import type { SvelteComponentTyped } from 'svelte';\n * ```\n */\ndeclare class Svelte2TsxComponent<\n    Props extends {} = {},\n    Events extends {} = {},\n    Slots extends {} = {}\n> {\n    // svelte2tsx-specific\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: Props;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: Events;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: Slots;\n    // https://svelte.dev/docs#Client-side_component_API\n    constructor(options: Svelte2TsxComponentConstructorParameters<Props>);\n    /**\n     * Causes the callback function to be called whenever the component dispatches an event.\n     * A function is returned that will remove the event listener when called.\n     */\n    $on<K extends keyof Events & string>(event: K, handler: ((e: Events[K]) => any) | null | undefined): () => void;\n    /**\n     * Removes a component from the DOM and triggers any `onDestroy` handlers.\n     */\n    $destroy(): void;\n    /**\n     * Programmatically sets props on an instance.\n     * `component.$set({ x: 1 })` is equivalent to `x = 1` inside the component's `<script>` block.\n     * Calling this method schedules an update for the next microtask — the DOM is __not__ updated synchronously.\n     */\n    $set(props?: Partial<Props>): void;\n    // From SvelteComponent(Dev) definition\n    $$: any;\n    $capture_state(): void;\n    $inject_state(): void;\n}\n\n/** @deprecated PRIVATE API, DO NOT USE, REMOVED SOON */\ninterface Svelte2TsxComponentConstructorParameters<Props extends {}> {\n    /**\n     * An HTMLElement to render to. This option is required.\n     */\n    target: Element | Document | ShadowRoot;\n    /**\n     * A child of `target` to render the component immediately before.\n     */\n    anchor?: Element;\n    /**\n     * An object of properties to supply to the component.\n     */\n    props?: Props;\n    context?: Map<any, any>;\n    hydrate?: boolean;\n    intro?: boolean;\n    $$inline?: boolean;\n}\n\ntype AConstructorTypeOf<T, U extends any[] = any[]> = new (...args: U) => T;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteComponentConstructor<T, U extends import('svelte').ComponentConstructorOptions<any>> = new (options: U) => T;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void\n} | void\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteTransitionReturnType = SvelteTransitionConfig | (() => SvelteTransitionConfig)\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteWithOptionalProps<Props, Keys extends keyof Props> = Omit<Props, Keys> & Partial<Pick<Props, Keys>>;\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteAllProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SveltePropsAnyFallback<Props> = {[K in keyof Props]: Props[K] extends never ? never : Props[K] extends undefined ? any : Props[K]}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlotsAnyFallback<Slots> = {[K in keyof Slots]: {[S in keyof Slots[K]]: Slots[K][S] extends undefined ? any : Slots[K][S]}}\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteRestProps = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteSlots = { [index: string]: any }\n/** @internal PRIVATE API, DO NOT USE */\ntype SvelteStore<T> = { subscribe: (run: (value: T) => any, invalidate?: any) => any }\n\n// Forces TypeScript to look into the type which results in a better representation of it\n// which helps for error messages and is necessary for d.ts file transformation so that\n// no ambient type references are left in the output\n/** @internal PRIVATE API, DO NOT USE */\ntype Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;\n\n/** @internal PRIVATE API, DO NOT USE */\ntype KeysMatching<Obj, V> = {[K in keyof Obj]-?: Obj[K] extends V ? K : never}[keyof Obj]\n/** @internal PRIVATE API, DO NOT USE */\ndeclare type __sveltets_2_CustomEvents<T> = {[K in KeysMatching<T, CustomEvent>]: T[K] extends CustomEvent ? T[K]['detail']: T[K]}\n\ndeclare var process: NodeJS.Process & { browser: boolean }\ndeclare function __sveltets_2_ensureRightProps<Props>(props: Props): {};\ndeclare function __sveltets_2_instanceOf<T = any>(type: AConstructorTypeOf<T>): T;\ndeclare function __sveltets_2_allPropsType(): SvelteAllProps\ndeclare function __sveltets_2_restPropsType(): SvelteRestProps\ndeclare function __sveltets_2_slotsType<Slots, Key extends keyof Slots>(slots: Slots): Record<Key, boolean>;\n\n// Overload of the following two functions is necessary.\n// An empty array of optionalProps makes OptionalProps type any, which means we lose the prop typing.\n// optionalProps need to be first or its type cannot be infered correctly.\n\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps>>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SveltePropsAnyFallback<Props> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\ndeclare function __sveltets_2_partial_with_any<Props = {}, Events = {}, Slots = {}, OptionalProps extends keyof Props = any>(\n    optionalProps: OptionalProps[],\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<SvelteWithOptionalProps<SveltePropsAnyFallback<Props>, OptionalProps> & SvelteAllProps>, events: Events, slots: Expand<SvelteSlotsAnyFallback<Slots>> }\n\n\ndeclare function __sveltets_2_with_any<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Expand<Props & SvelteAllProps>, events: Events, slots: Slots }\n\ndeclare function __sveltets_2_with_any_event<Props = {}, Events = {}, Slots = {}>(\n    render: {props: Props, events: Events, slots: Slots }\n): {props: Props, events: Events & {[evt: string]: CustomEvent<any>;}, slots: Slots }\n\ndeclare function __sveltets_2_store_get<T = any>(store: SvelteStore<T>): T\ndeclare function __sveltets_2_store_get<Store extends SvelteStore<any> | undefined | null>(store: Store): Store extends SvelteStore<infer T> ? T : Store;\ndeclare function __sveltets_2_any(dummy: any): any;\n// declare function __sveltets_1_empty(...dummy: any[]): {};\n// declare function __sveltets_1_componentType(): AConstructorTypeOf<import(\"svelte\").SvelteComponentTyped<any, any, any>>\ndeclare function __sveltets_2_invalidate<T>(getValue: () => T): T\n\ndeclare function __sveltets_2_mapWindowEvent<K extends keyof HTMLBodyElementEventMap>(\n    event: K\n): HTMLBodyElementEventMap[K];\ndeclare function __sveltets_2_mapBodyEvent<K extends keyof WindowEventMap>(\n    event: K\n): WindowEventMap[K];\ndeclare function __sveltets_2_mapElementEvent<K extends keyof HTMLElementEventMap>(\n    event: K\n): HTMLElementEventMap[K];\n\ndeclare function __sveltets_2_bubbleEventDef<Events, K extends keyof Events>(\n    events: Events, eventKey: K\n): Events[K];\ndeclare function __sveltets_2_bubbleEventDef(\n    events: any, eventKey: string\n): any;\n\ndeclare const __sveltets_2_customEvent: CustomEvent<any>;\ndeclare function __sveltets_2_toEventTypings<Typings>(): {[Key in keyof Typings]: CustomEvent<Typings[Key]>};\n\ndeclare function __sveltets_2_unionType<T1, T2>(t1: T1, t2: T2): T1 | T2;\ndeclare function __sveltets_2_unionType<T1, T2, T3>(t1: T1, t2: T2, t3: T3): T1 | T2 | T3;\ndeclare function __sveltets_2_unionType<T1, T2, T3, T4>(t1: T1, t2: T2, t3: T3, t4: T4): T1 | T2 | T3 | T4;\ndeclare function __sveltets_2_unionType(...types: any[]): any;\n\ndeclare function __sveltets_2_createSvelte2TsxComponent<Props, Events, Slots>(\n    render: {props: Props, events: Events, slots: Slots }\n): SvelteComponentConstructor<import(\"svelte\").SvelteComponentTyped<Props, Events, Slots>,import('svelte').ComponentConstructorOptions<Props>>;\n\ndeclare function __sveltets_2_unwrapArr<T>(arr: ArrayLike<T>): T\ndeclare function __sveltets_2_unwrapPromiseLike<T>(promise: PromiseLike<T> | T): T\n\n// v2\ndeclare function __sveltets_2_createCreateSlot<Slots = Record<string, Record<string, any>>>(): <SlotName extends keyof Slots>(slotName: SlotName, attrs: Slots[SlotName]) => Record<string, any>;\ndeclare function __sveltets_2_createComponentAny(props: Record<string, any>): import(\"svelte\").SvelteComponentTyped<any, any, any>;\n\ndeclare function __sveltets_2_any(...dummy: any[]): any;\ndeclare function __sveltets_2_empty(...dummy: any[]): {};\ndeclare function __sveltets_2_union<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(t1:T1,t2?:T2,t3?:T3,t4?:T4,t5?:T5,t6?:T6,t7?:T7,t8?:T8,t9?:T9,t10?:T10): T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10;\ndeclare function __sveltets_2_nonNullable<T>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_cssProp(prop: Record<string, any>): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteAnimationReturnType = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\ndeclare var __sveltets_2_AnimationMove: { from: DOMRect, to: DOMRect }\ndeclare function __sveltets_2_ensureAnimation(animationCall: __sveltets_2_SvelteAnimationReturnType): {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteActionReturnType = {\n\tupdate?: (args: any) => void,\n\tdestroy?: () => void,\n    $$_attributes?: Record<string, any>,\n} | void\ndeclare function __sveltets_2_ensureAction<T extends __sveltets_2_SvelteActionReturnType>(actionCall: T): T extends  {$$_attributes?: any} ? T['$$_attributes'] : {};\n\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionConfig = {\n    delay?: number,\n    duration?: number,\n    easing?: (t: number) => number,\n    css?: (t: number, u: number) => string,\n    tick?: (t: number, u: number) => void\n}\n/** @internal PRIVATE API, DO NOT USE */\ntype __sveltets_2_SvelteTransitionReturnType = __sveltets_2_SvelteTransitionConfig | (() => __sveltets_2_SvelteTransitionConfig)\ndeclare function __sveltets_2_ensureTransition(transitionCall: __sveltets_2_SvelteTransitionReturnType): {};\n\n// Includes undefined and null for all types as all usages also allow these\ndeclare function __sveltets_2_ensureType<T>(type: AConstructorTypeOf<T>, el: T | undefined | null): {};\ndeclare function __sveltets_2_ensureType<T1, T2>(type1: AConstructorTypeOf<T1>, type2: AConstructorTypeOf<T2>, el: T1 | T2 | undefined | null): {};\n\n// The following is necessary because there are two clashing errors that can't be solved at the same time\n// when using Svelte2TsxComponent, more precisely the event typings in\n// __sveltets_2_ensureComponent<T extends new (..) => _SvelteComponent<any,||any||<-this,any>>(type: T): T;\n// If we type it as \"any\", we have an error when using sth like {a: CustomEvent<any>}\n// If we type it as \"{}\", we have an error when using sth like {[evt: string]: CustomEvent<any>}\n// If we type it as \"unknown\", we get all kinds of follow up errors which we want to avoid\n// Therefore introduce two more base classes just for this case.\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT\n */\ndeclare type ATypedSvelteComponent = {\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$prop_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$events_def: any;\n    /**\n     * @internal This is for type checking capabilities only\n     * and does not exist at runtime. Don't use this property.\n     */\n    $$slot_def: any;\n\n    $on(event: string, handler: ((e: any) => any) | null | undefined): () => void;\n}\n/**\n * Ambient type only used for intellisense, DO NOT USE IN YOUR PROJECT.\n * \n * If you're looking for the type of a Svelte Component, use `SvelteComponentTyped` and `ComponentType` instead:\n *\n * ```ts\n * import type { ComponentType, SvelteComponentTyped } from \"svelte\";\n * let myComponentConstructor: ComponentType<SvelteComponentTyped> = ..;\n * ```\n */\ndeclare type ConstructorOfATypedSvelteComponent = new (args: {target: any, props?: any}) => ATypedSvelteComponent\ndeclare function __sveltets_2_ensureComponent<T extends ConstructorOfATypedSvelteComponent | null | undefined>(type: T): NonNullable<T>;\n\ndeclare function __sveltets_2_ensureArray<T extends ArrayLike<unknown>>(array: T): T extends ArrayLike<infer U> ? U[] : any[];\n",
  "/node_modules/svelte-preprocess/dist/autoProcess.d.ts": "import type { AutoPreprocessGroup, AutoPreprocessOptions, Processed, TransformerArgs, TransformerOptions } from './types';\nexport declare const transform: (name: string | null | undefined, options: TransformerOptions, { content, markup, map, filename, attributes }: TransformerArgs<any>) => Promise<Processed>;\nexport declare function sveltePreprocess({ aliases, markupTagName, preserve, sourceMap, ...rest }?: AutoPreprocessOptions): AutoPreprocessGroup;\n",
  "/node_modules/svelte-preprocess/dist/index.d.ts": "import { sveltePreprocess } from './autoProcess';\ndeclare const _default: typeof sveltePreprocess;\nexport default _default;\nexport { default as pug } from './processors/pug';\nexport { default as coffeescript } from './processors/coffeescript';\nexport { default as typescript } from './processors/typescript';\nexport { default as less } from './processors/less';\nexport { default as scss, default as sass } from './processors/scss';\nexport { default as stylus } from './processors/stylus';\nexport { default as postcss } from './processors/postcss';\nexport { default as globalStyle } from './processors/globalStyle';\nexport { default as babel } from './processors/babel';\nexport { default as replace } from './processors/replace';\n",
  "/node_modules/svelte-preprocess/dist/modules/errors.d.ts": "export declare const throwError: (msg: string) => never;\nexport declare const throwTypescriptError: () => void;\n",
  "/node_modules/svelte-preprocess/dist/modules/globalifySelector.d.ts": "export declare function globalifySelector(selector: string): string;\n",
  "/node_modules/svelte-preprocess/dist/modules/language.d.ts": "import type { PreprocessorArgs } from '../types';\nexport declare const ALIAS_MAP: Map<string, string>;\nexport declare const SOURCE_MAP_PROP_MAP: Record<string, [string[], any]>;\nexport declare function getLanguageDefaults(lang?: string | null): null | Record<string, any>;\nexport declare function addLanguageAlias(entries: Array<[string, string]>): void;\nexport declare function getLanguageFromAlias(alias?: string | null): string | null | undefined;\nexport declare function isAliasOf(alias?: string | null, lang?: string | null): boolean;\nexport declare const getLanguage: (attributes: PreprocessorArgs['attributes']) => {\n    lang: string | null | undefined;\n    alias: string | null;\n};\n",
  "/node_modules/svelte-preprocess/dist/modules/markup.d.ts": "import type { Transformer, Preprocessor } from '../types';\n/** Create a tag matching regexp. */\nexport declare function createTagRegex(tagName: string, flags?: string): RegExp;\n/** Strip script and style tags from markup. */\nexport declare function stripTags(markup: string): string;\n/** Transform an attribute string into a key-value object */\nexport declare function parseAttributes(attributesStr: string): Record<string, any>;\nexport declare function transformMarkup({ content, filename }: {\n    content: string;\n    filename?: string;\n}, transformer: Preprocessor | Transformer<unknown>, options?: Record<string, any>): Promise<import(\"../types\").Processed>;\n",
  "/node_modules/svelte-preprocess/dist/modules/prepareContent.d.ts": "export declare function prepareContent({ options, content, }: {\n    options: any;\n    content: string;\n}): string;\n",
  "/node_modules/svelte-preprocess/dist/modules/tagInfo.d.ts": "import type { PreprocessorArgs } from '../types';\nexport declare const getTagInfo: ({ attributes, filename, content, markup, }: PreprocessorArgs) => Promise<{\n    filename: string | undefined;\n    attributes: Record<string, string | boolean>;\n    content: string;\n    lang: string | null | undefined;\n    alias: string | null;\n    dependencies: string[];\n    markup: string;\n}>;\n",
  "/node_modules/svelte-preprocess/dist/modules/utils.d.ts": "export declare function concat(...arrs: any[]): any[];\n/** Paths used by preprocessors to resolve @imports */\nexport declare function getIncludePaths(fromFilename?: string, base?: string[]): string[];\n/**\n * Checks if a package is installed.\n *\n * @export\n * @param {string} dep\n * @returns boolean\n */\nexport declare function hasDepInstalled(dep: string): Promise<boolean>;\nexport declare function isValidLocalPath(path: string): boolean;\nexport declare function findUp({ what, from }: {\n    what: string;\n    from: string;\n}): string | null;\nexport declare function setProp(obj: any, keyList: string[], value: any): void;\nexport declare const JAVASCRIPT_RESERVED_KEYWORD_SET: Set<string>;\n",
  "/node_modules/svelte-preprocess/dist/processors/babel.d.ts": "import type { PreprocessorGroup, Options } from '../types';\ndeclare const _default: (options?: Options.Babel) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/coffeescript.d.ts": "import type { PreprocessorGroup, Options } from '../types';\ndeclare const _default: (options?: Options.Coffeescript) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/globalStyle.d.ts": "import type { PreprocessorGroup } from '../types';\ndeclare const _default: () => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/less.d.ts": "import type { PreprocessorGroup, Options } from '../types';\ndeclare const _default: (options?: Options.Less) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/postcss.d.ts": "import type { PreprocessorGroup, Options } from '../types';\n/** Adapted from https://github.com/TehShrike/svelte-preprocess-postcss */\ndeclare const _default: (options?: Options.Postcss) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/pug.d.ts": "import type { Options, PreprocessorGroup } from '../types/index';\ndeclare const _default: (options?: Options.Pug) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/replace.d.ts": "import type { PreprocessorGroup, Options } from '../types';\ndeclare const _default: (options: Options.Replace) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/scss.d.ts": "import type { PreprocessorGroup, Options } from '../types';\ndeclare const _default: (options?: Options.Sass) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/stylus.d.ts": "import type { Options, PreprocessorGroup } from '../types';\ndeclare const _default: (options?: Options.Stylus) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/processors/typescript.d.ts": "import type { Options, PreprocessorGroup } from '../types';\ndeclare const _default: (options?: Options.Typescript) => PreprocessorGroup;\nexport default _default;\n",
  "/node_modules/svelte-preprocess/dist/transformers/babel.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Babel>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/coffeescript.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Coffeescript>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/globalStyle.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.GlobalStyle>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/less.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Less>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/postcss.d.ts": "import type { Transformer, Options } from '../types';\n/** Adapted from https://github.com/TehShrike/svelte-preprocess-postcss */\ndeclare const transformer: Transformer<Options.Postcss>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/pug.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Pug>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/replace.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Replace>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/scss.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Sass>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/stylus.d.ts": "import type { Transformer, Options } from '../types';\ndeclare const transformer: Transformer<Options.Stylus>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/transformers/typescript.d.ts": "import ts from 'typescript';\nimport type { Transformer, Options } from '../types';\nexport declare function loadTsconfig(compilerOptionsJSON: any, filename: string, tsOptions: Options.Typescript): {\n    errors: never[];\n    options: any;\n} | {\n    errors: ts.Diagnostic[];\n    options: ts.CompilerOptions;\n};\ndeclare const transformer: Transformer<Options.Typescript>;\nexport { transformer };\n",
  "/node_modules/svelte-preprocess/dist/types/index.d.ts": "import * as Options from './options';\nimport type { Processed as SvelteProcessed, Preprocessor as SveltePreprocessor, PreprocessorGroup } from 'svelte/types/compiler/preprocess';\nexport { Options };\nexport { PreprocessorGroup } from 'svelte/types/compiler/preprocess';\nexport type PreprocessorArgs = Preprocessor extends (options: infer T) => any ? T : never;\nexport type TransformerArgs<T> = {\n    content: string;\n    filename?: string;\n    attributes?: Record<string, any>;\n    map?: string | object;\n    markup?: string;\n    dianostics?: unknown[];\n    options?: T;\n};\n/**\n * Small extension to the official SvelteProcessed type\n * to include possible diagnostics.\n * Used for the typescript transformer.\n */\nexport type Processed = SvelteProcessed & {\n    diagnostics?: any[];\n};\n/**\n * Svelte preprocessor type with guaranteed Processed results\n *\n * The official type also considers `void`\n * */\nexport type Preprocessor = (options: Parameters<SveltePreprocessor>[0]) => Processed | Promise<Processed>;\nexport type Transformer<T> = (args: TransformerArgs<T>) => Processed | Promise<Processed>;\nexport type TransformerOptions<T = any> = boolean | T | Transformer<T>;\nexport interface Transformers {\n    babel?: TransformerOptions<Options.Babel>;\n    typescript?: TransformerOptions<Options.Typescript>;\n    scss?: TransformerOptions<Options.Sass>;\n    sass?: TransformerOptions<Options.Sass>;\n    less?: TransformerOptions<Options.Less>;\n    stylus?: TransformerOptions<Options.Stylus>;\n    postcss?: TransformerOptions<Options.Postcss>;\n    coffeescript?: TransformerOptions<Options.Coffeescript>;\n    pug?: TransformerOptions<Options.Pug>;\n    globalStyle?: Options.GlobalStyle;\n    replace?: Options.Replace;\n    [language: string]: TransformerOptions;\n}\nexport type AutoPreprocessGroup = PreprocessorGroup;\nexport type AutoPreprocessOptions = {\n    markupTagName?: string;\n    aliases?: Array<[string, string]>;\n    preserve?: string[];\n    sourceMap?: boolean;\n    babel?: TransformerOptions<Options.Babel>;\n    typescript?: TransformerOptions<Options.Typescript>;\n    scss?: TransformerOptions<Options.Sass>;\n    sass?: TransformerOptions<Options.Sass>;\n    less?: TransformerOptions<Options.Less>;\n    stylus?: TransformerOptions<Options.Stylus>;\n    postcss?: TransformerOptions<Options.Postcss>;\n    coffeescript?: TransformerOptions<Options.Coffeescript>;\n    pug?: TransformerOptions<Options.Pug>;\n    globalStyle?: Options.GlobalStyle | boolean;\n    replace?: Options.Replace;\n    [languageName: string]: TransformerOptions;\n};\n",
  "/node_modules/svelte-preprocess/dist/types/options.d.ts": "import type { LegacyStringOptions } from 'sass';\nimport type * as postcss from 'postcss';\nimport type { Options as PugOptions } from 'pug';\nimport type { TransformOptions as BabelOptions } from '@babel/core';\ntype ContentModifier = {\n    prependData?: string;\n    stripIndent?: boolean;\n};\ntype MarkupOptions = {\n    markupTagName?: string;\n};\nexport type Coffeescript = {\n    sourceMap?: boolean;\n    filename?: never;\n    bare?: never;\n} & ContentModifier;\nexport type Postcss = postcss.ProcessOptions & {\n    plugins?: postcss.AcceptedPlugin[];\n    configFilePath?: string;\n} & ContentModifier;\nexport type Babel = BabelOptions & {\n    sourceType?: 'module';\n    minified?: false;\n    ast?: false;\n    code?: true;\n    sourceMaps?: boolean;\n} & ContentModifier;\nexport type Pug = Omit<PugOptions, 'filename' | 'doctype' | 'compileDebug'> & ContentModifier & MarkupOptions;\nexport type Sass = Omit<LegacyStringOptions<'sync'>, 'file' | 'data'> & ContentModifier;\nexport type Less = {\n    paths?: string[];\n    plugins?: any[];\n    strictImports?: boolean;\n    maxLineLen?: number;\n    dumpLineNumbers?: 'comment' | string;\n    silent?: boolean;\n    strictUnits?: boolean;\n    globalVars?: Record<string, string>;\n    modifyVars?: Record<string, string>;\n} & ContentModifier;\nexport type Stylus = {\n    globals?: Record<string, any>;\n    functions?: Record<string, any>;\n    imports?: string[];\n    paths?: string[];\n    sourcemap?: boolean;\n} & ContentModifier;\nexport type Typescript = {\n    compilerOptions?: any;\n    tsconfigFile?: string | boolean;\n    tsconfigDirectory?: string | boolean;\n    reportDiagnostics?: boolean;\n    handleMixedImports?: boolean;\n} & ContentModifier;\nexport interface GlobalStyle {\n    sourceMap: boolean;\n}\nexport type Replace = Array<[string | RegExp, string] | [RegExp, (substring: string, ...args: any[]) => string]>;\nexport {};\n",
  "/node_modules/svelte-preprocess/node_modules/magic-string/index.d.ts": "export interface BundleOptions {\n  intro?: string;\n  separator?: string;\n}\n\nexport interface SourceMapOptions {\n  /**\n   * Whether the mapping should be high-resolution.\n   * Hi-res mappings map every single character, meaning (for example) your devtools will always\n   * be able to pinpoint the exact location of function calls and so on.\n   * With lo-res mappings, devtools may only be able to identify the correct\n   * line - but they're quicker to generate and less bulky.\n   * If sourcemap locations have been specified with s.addSourceMapLocation(), they will be used here.\n   */\n  hires?: boolean;\n  /**\n   * The filename where you plan to write the sourcemap.\n   */\n  file?: string;\n  /**\n   * The filename of the file containing the original source.\n   */\n  source?: string;\n  /**\n   * Whether to include the original content in the map's sourcesContent array.\n   */\n  includeContent?: boolean;\n}\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\n\nexport interface DecodedSourceMap {\n  file: string;\n  sources: string[];\n  sourcesContent: string[];\n  names: string[];\n  mappings: SourceMapSegment[][];\n}\n\nexport class SourceMap {\n  constructor(properties: DecodedSourceMap);\n\n  version: number;\n  file: string;\n  sources: string[];\n  sourcesContent: string[];\n  names: string[];\n  mappings: string;\n\n  /**\n   * Returns the equivalent of `JSON.stringify(map)`\n   */\n  toString(): string;\n  /**\n   * Returns a DataURI containing the sourcemap. Useful for doing this sort of thing:\n   * `generateMap(options?: SourceMapOptions): SourceMap;`\n   */\n  toUrl(): string;\n}\n\nexport class Bundle {\n  constructor(options?: BundleOptions);\n  addSource(source: MagicString | { filename?: string, content: MagicString }): Bundle;\n  append(str: string, options?: BundleOptions): Bundle;\n  clone(): Bundle;\n  generateMap(options?: SourceMapOptions): SourceMap;\n  generateDecodedMap(options?: SourceMapOptions): DecodedSourceMap;\n  getIndentString(): string;\n  indent(indentStr?: string): Bundle;\n  indentExclusionRanges: ExclusionRange | Array<ExclusionRange>;\n  prepend(str: string): Bundle;\n  toString(): string;\n  trimLines(): Bundle;\n  trim(charType?: string): Bundle;\n  trimStart(charType?: string): Bundle;\n  trimEnd(charType?: string): Bundle;\n  isEmpty(): boolean;\n  length(): number;\n}\n\nexport type ExclusionRange = [ number, number ];\n\nexport interface MagicStringOptions {\n  filename?: string,\n  indentExclusionRanges?: ExclusionRange | Array<ExclusionRange>;\n}\n\nexport interface IndentOptions {\n  exclude?: ExclusionRange | Array<ExclusionRange>;\n  indentStart?: boolean;\n}\n\nexport interface OverwriteOptions {\n  storeName?: boolean;\n  contentOnly?: boolean;\n}\n\nexport interface UpdateOptions {\n  storeName?: boolean;\n  overwrite?: boolean;\n}\n\nexport default class MagicString {\n  constructor(str: string, options?: MagicStringOptions);\n  /**\n   * Adds the specified character index (with respect to the original string) to sourcemap mappings, if `hires` is false.\n   */\n  addSourcemapLocation(char: number): void;\n  /**\n   * Appends the specified content to the end of the string.\n   */\n  append(content: string): MagicString;\n  /**\n   * Appends the specified content at the index in the original string.\n   * If a range *ending* with index is subsequently moved, the insert will be moved with it. \n   * See also `s.prependLeft(...)`.\n   */\n  appendLeft(index: number, content: string): MagicString;\n  /**\n   * Appends the specified content at the index in the original string.\n   * If a range *starting* with index is subsequently moved, the insert will be moved with it.\n   * See also `s.prependRight(...)`.\n   */\n  appendRight(index: number, content: string): MagicString;\n  /**\n   * Does what you'd expect.\n   */\n  clone(): MagicString;\n  /**\n   * Generates a version 3 sourcemap.\n   */\n  generateMap(options?: SourceMapOptions): SourceMap;\n  /**\n   * Generates a sourcemap object with raw mappings in array form, rather than encoded as a string.\n   * Useful if you need to manipulate the sourcemap further, but most of the time you will use `generateMap` instead.\n   */\n  generateDecodedMap(options?: SourceMapOptions): DecodedSourceMap;\n  getIndentString(): string;\n\n  /**\n   * Prefixes each line of the string with prefix.\n   * If prefix is not supplied, the indentation will be guessed from the original content, falling back to a single tab character.\n   */\n  indent(options?: IndentOptions): MagicString;\n  /**\n   * Prefixes each line of the string with prefix.\n   * If prefix is not supplied, the indentation will be guessed from the original content, falling back to a single tab character.\n   *\n   * The options argument can have an exclude property, which is an array of [start, end] character ranges.\n   * These ranges will be excluded from the indentation - useful for (e.g.) multiline strings.\n   */\n  indent(indentStr?: string, options?: IndentOptions): MagicString;\n  indentExclusionRanges: ExclusionRange | Array<ExclusionRange>;\n\n  /**\n   * Moves the characters from `start and `end` to `index`.\n   */\n  move(start: number, end: number, index: number): MagicString;\n  /**\n   * Replaces the characters from `start` to `end` with `content`, along with the appended/prepended content in \n   * that range. The same restrictions as `s.remove()` apply.\n   *\n   * The fourth argument is optional. It can have a storeName property — if true, the original name will be stored\n   * for later inclusion in a sourcemap's names array — and a contentOnly property which determines whether only\n   * the content is overwritten, or anything that was appended/prepended to the range as well.\n   * \n   * It may be preferred to use `s.update(...)` instead if you wish to avoid overwriting the appended/prepended content.\n   */\n  overwrite(start: number, end: number, content: string, options?: boolean | OverwriteOptions): MagicString;\n  /**\n   * Replaces the characters from `start` to `end` with `content`. The same restrictions as `s.remove()` apply.\n   *\n   * The fourth argument is optional. It can have a storeName property — if true, the original name will be stored\n   * for later inclusion in a sourcemap's names array — and an overwrite property which determines whether only\n   * the content is overwritten, or anything that was appended/prepended to the range as well.\n   */\n  update(start: number, end: number, content: string, options?: boolean | UpdateOptions): MagicString;\n  /**\n   * Prepends the string with the specified content. \n   */\n  prepend(content: string): MagicString;\n  /**\n   * Same as `s.appendLeft(...)`, except that the inserted content will go *before* any previous appends or prepends at index\n   */\n  prependLeft(index: number, content: string): MagicString;\n  /**\n   * Same as `s.appendRight(...)`, except that the inserted content will go *before* any previous appends or prepends at `index`\n   */\n  prependRight(index: number, content: string): MagicString;\n  /**\n   * Removes the characters from `start` to `end` (of the original string, **not** the generated string).\n   * Removing the same content twice, or making removals that partially overlap, will cause an error.\n   */\n  remove(start: number, end: number): MagicString;\n  /**\n   * Returns the content of the generated string that corresponds to the slice between `start` and `end` of the original string.\n   * Throws error if the indices are for characters that were already removed.\n   */\n  slice(start: number, end: number): string;\n  /**\n   * Returns a clone of `s`, with all content before the `start` and `end` characters of the original string removed.\n   */\n  snip(start: number, end: number): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start and end.\n   */\n  trim(charType?: string): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start.\n   */\n  trimStart(charType?: string): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the end.\n   */\n  trimEnd(charType?: string): MagicString;\n  /**\n   * Removes empty lines from the start and end.\n   */\n  trimLines(): MagicString;\n  /**\n   * String replacement with RegExp or string.\n   */\n  replace(regex: RegExp | string, replacement: string | ((substring: string, ...args: any[]) => string)): MagicString;\n  /**\n   * Same as `s.replace`, but replace all matched strings instead of just one.\n   */\n  replaceAll(regex: RegExp | string, replacement: string | ((substring: string, ...args: any[]) => string)): MagicString;\n\n  lastChar(): string;\n  lastLine(): string;\n  /**\n   * Returns true if the resulting source is empty (disregarding white space).\n   */\n  isEmpty(): boolean;\n  length(): number;\n\n  /**\n   * Indicates if the string has been changed.\n   */\n  hasChanged(): boolean;\n\n  original: string;\n  /**\n   * Returns the generated string.\n   */\n  toString(): string;\n}\n"
}